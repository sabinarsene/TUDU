{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { createContext, cx } from '@chakra-ui/utils';\nimport { useMemo } from 'react';\nimport { useRadioGroup } from './use-radio-group.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst [RadioGroupProvider, useRadioGroupContext] = createContext({\n  name: \"RadioGroupContext\",\n  strict: false\n});\nconst RadioGroup = forwardRef((props, ref) => {\n  const {\n    colorScheme,\n    size,\n    variant,\n    children,\n    className,\n    isDisabled,\n    isFocusable,\n    ...rest\n  } = props;\n  const {\n    value,\n    onChange,\n    getRootProps,\n    name,\n    htmlProps\n  } = useRadioGroup(rest);\n  const group = useMemo(() => ({\n    name,\n    size,\n    onChange,\n    colorScheme,\n    value,\n    variant,\n    isDisabled,\n    isFocusable\n  }), [name, size, onChange, colorScheme, value, variant, isDisabled, isFocusable]);\n  return /* @__PURE__ */jsx(RadioGroupProvider, {\n    value: group,\n    children: /* @__PURE__ */jsx(chakra.div, {\n      ...getRootProps(htmlProps, ref),\n      className: cx(\"chakra-radio-group\", className),\n      children\n    })\n  });\n});\nRadioGroup.displayName = \"RadioGroup\";\nexport { RadioGroup, useRadioGroupContext };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}