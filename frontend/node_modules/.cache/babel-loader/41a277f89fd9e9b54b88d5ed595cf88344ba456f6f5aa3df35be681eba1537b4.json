{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\TUDU-app\\\\TUDU\\\\frontend\\\\src\\\\pages\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSocket } from '../contexts/SocketContext';\nimport { getConversations, markAllMessagesRead } from '../services/messageApi';\nimport Chat from '../components/Chat';\nimport { Avatar, Badge, Box, Flex, Text, Input, InputGroup, InputLeftElement, Divider, Heading, Icon, useColorModeValue } from '@chakra-ui/react';\nimport { Search, ArrowLeft, MessageCircle } from 'lucide-react';\nimport './ChatPage.css';\n\n// Array of colors for avatars\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst avatarColors = [\"red.500\", \"orange.500\", \"yellow.500\", \"green.500\", \"teal.500\", \"blue.500\", \"cyan.500\", \"purple.500\", \"pink.500\", \"linkedin.500\"];\n\n// Function to get a deterministic color based on user name\nconst getAvatarColor = name => {\n  if (!name) return \"gray.500\";\n\n  // Get a simple hash of the name\n  let hash = 0;\n  for (let i = 0; i < name.length; i++) {\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  // Use the hash to pick a color\n  const index = Math.abs(hash % avatarColors.length);\n  return avatarColors[index];\n};\nconst ChatPage = () => {\n  _s();\n  var _conversations$find;\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    user\n  } = useAuth();\n  const {\n    socket,\n    connected\n  } = useSocket();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [markingAsRead, setMarkingAsRead] = useState(false);\n\n  // Colors\n  const borderColor = useColorModeValue('gray.200', 'gray.700');\n  const bgLight = useColorModeValue('white', 'gray.800');\n  const bgActive = useColorModeValue('blue.50', 'blue.900');\n  const bgHover = useColorModeValue('gray.50', 'gray.700');\n  const textColorPrimary = useColorModeValue('gray.800', 'white');\n  const textColorSecondary = useColorModeValue('gray.600', 'gray.400');\n  const placeholderColor = useColorModeValue('gray.400', 'gray.500');\n  const chatBgColor = useColorModeValue('gray.50', 'gray.900');\n\n  // Load conversations\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        var _location$state;\n        setLoading(true);\n        const data = await getConversations();\n\n        // Verificăm dacă avem date valide\n        if (!data || !Array.isArray(data)) {\n          setConversations([]);\n          setError('Nu s-au putut încărca conversațiile');\n          setLoading(false);\n          return;\n        }\n\n        // Nu mai filtrăm conversațiile, deoarece backend-ul ar trebui să returneze doar conversațiile utilizatorului curent\n        setConversations(data);\n        setError(null);\n\n        // Check if we have a receiverId in the location state (from profile page)\n        const receiverId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.receiverId;\n\n        // If we have a receiverId in state, navigate to that chat\n        if (receiverId && !userId) {\n          navigate(`/chat/${receiverId}`);\n          return;\n        }\n      } catch (err) {\n        console.error('Error fetching chats:', err);\n        setError('Failed to load conversations');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchChats();\n  }, [userId, navigate, user.id, location.state]);\n\n  // Mark messages as read when a user opens a conversation\n  useEffect(() => {\n    const markMessagesAsRead = async () => {\n      if (!userId || markingAsRead) return;\n      try {\n        setMarkingAsRead(true);\n        // Mark all messages from this sender as read\n        await markAllMessagesRead(userId);\n\n        // Update the conversations list to reflect the read status\n        const updatedConversations = await getConversations();\n        setConversations(updatedConversations);\n      } catch (err) {\n        console.error('Error marking messages as read:', err);\n      } finally {\n        setMarkingAsRead(false);\n      }\n    };\n    markMessagesAsRead();\n  }, [userId]);\n\n  // Listen for new messages to update conversations list\n  useEffect(() => {\n    if (!socket || !connected) return;\n    const handleMessageReceived = async message => {\n      // If this message is relevant to the current user (sender or receiver)\n      if (message.sender_id === user.id || message.receiver_id === user.id) {\n        // If the message is from the current open conversation, mark it as read immediately\n        if (message.sender_id === parseInt(userId) && message.receiver_id === user.id) {\n          try {\n            await markAllMessagesRead(userId);\n          } catch (err) {\n            console.error('Error marking message as read:', err);\n          }\n        }\n\n        // Refresh the conversations list\n        try {\n          const data = await getConversations();\n          if (data && Array.isArray(data)) {\n            setConversations(data);\n          }\n        } catch (err) {\n          console.error('Error refreshing conversations after new message:', err);\n        }\n      }\n    };\n    socket.on('message_received', handleMessageReceived);\n    return () => {\n      socket.off('message_received', handleMessageReceived);\n    };\n  }, [socket, connected, user.id, userId]);\n\n  // Filter conversations by search query\n  const filteredConversations = useMemo(() => {\n    if (!searchQuery.trim()) return conversations;\n    return conversations.filter(conv => conv.user.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [conversations, searchQuery]);\n\n  // Format relative time for last message\n  const formatRelativeTime = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diff = Math.round((now - date) / 1000); // seconds\n\n    if (diff < 60) return 'Just now';\n    if (diff < 3600) return `${Math.floor(diff / 60)}m ago`;\n    if (diff < 86400) return `${Math.floor(diff / 3600)}h ago`;\n\n    // If it's today\n    if (date.toDateString() === now.toDateString()) {\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n\n    // If it's yesterday\n    const yesterday = new Date(now);\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (date.toDateString() === yesterday.toDateString()) {\n      return 'Yesterday';\n    }\n\n    // If it's within a week\n    if (diff < 604800) {\n      return date.toLocaleDateString([], {\n        weekday: 'short'\n      });\n    }\n\n    // Otherwise show date\n    return date.toLocaleDateString([], {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      height: \"100vh\",\n      width: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        borderRadius: \"md\",\n        bg: bgLight,\n        p: 4,\n        boxShadow: \"md\",\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          color: textColorSecondary,\n          children: \"Loading conversations...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      height: \"100vh\",\n      width: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        borderRadius: \"md\",\n        bg: bgLight,\n        p: 4,\n        boxShadow: \"md\",\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          color: \"red.500\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    height: \"100vh\",\n    width: \"100%\",\n    overflow: \"hidden\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      direction: \"column\",\n      width: {\n        base: userId ? \"0\" : \"100%\",\n        md: \"350px\"\n      },\n      borderRight: \"1px solid\",\n      borderColor: borderColor,\n      bg: bgLight,\n      overflow: \"hidden\",\n      display: {\n        base: userId ? \"none\" : \"flex\",\n        md: \"flex\"\n      },\n      maxHeight: \"100vh\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        p: 4,\n        align: \"center\",\n        borderBottomWidth: \"1px\",\n        borderColor: borderColor,\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          align: \"center\",\n          width: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            as: \"button\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            borderRadius: \"full\",\n            p: 2,\n            mr: 3,\n            _hover: {\n              bg: bgHover\n            },\n            onClick: () => navigate('/home'),\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              as: ArrowLeft,\n              boxSize: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Heading, {\n            size: \"md\",\n            fontWeight: \"600\",\n            children: \"Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 4,\n        pb: 2,\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n            pointerEvents: \"none\",\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              as: Search,\n              color: placeholderColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Search conversations...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            borderRadius: \"full\",\n            bg: bgHover,\n            _placeholder: {\n              color: placeholderColor\n            },\n            _focus: {\n              borderColor: \"blue.400\",\n              boxShadow: \"0 0 0 1px var(--chakra-colors-blue-400)\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flex: \"1\",\n        overflowY: \"auto\",\n        height: \"calc(100vh - 130px)\",\n        css: {\n          '&::-webkit-scrollbar': {\n            width: '6px'\n          },\n          '&::-webkit-scrollbar-track': {\n            width: '6px',\n            background: 'transparent'\n          },\n          '&::-webkit-scrollbar-thumb': {\n            background: 'rgba(0, 0, 0, 0.1)',\n            borderRadius: '24px'\n          }\n        },\n        children: filteredConversations.length === 0 ? /*#__PURE__*/_jsxDEV(Flex, {\n          direction: \"column\",\n          height: \"100%\",\n          justify: \"center\",\n          align: \"center\",\n          p: 4,\n          textAlign: \"center\",\n          children: searchQuery ? /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              color: textColorSecondary,\n              children: [\"No conversations matching \\\"\", searchQuery, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              as: MessageCircle,\n              boxSize: 12,\n              color: \"blue.400\",\n              mb: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontWeight: \"medium\",\n              mb: 2,\n              children: \"No conversations yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"sm\",\n              color: textColorSecondary,\n              children: \"Start a chat from a user's profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          children: filteredConversations.map(conv => /*#__PURE__*/_jsxDEV(Box, {\n            onClick: () => navigate(`/chat/${conv.user.id}`),\n            cursor: \"pointer\",\n            px: 4,\n            py: 3,\n            bg: conv.user.id === parseInt(userId) ? bgActive : \"transparent\",\n            _hover: {\n              bg: conv.user.id === parseInt(userId) ? bgActive : bgHover\n            },\n            transition: \"background-color 0.2s\",\n            borderLeft: conv.user.id === parseInt(userId) ? \"4px solid\" : \"4px solid transparent\",\n            borderLeftColor: \"blue.500\",\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                position: \"relative\",\n                mr: 3,\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  size: \"md\",\n                  name: conv.user.name,\n                  src: conv.user.image,\n                  bg: getAvatarColor(conv.user.name)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 23\n                }, this), conv.user.isOnline && /*#__PURE__*/_jsxDEV(Badge, {\n                  position: \"absolute\",\n                  bottom: \"0\",\n                  right: \"0\",\n                  bg: \"green.400\",\n                  borderRadius: \"full\",\n                  transform: \"translate(20%, 20%)\",\n                  boxSize: \"3\",\n                  border: \"2px solid white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                flex: \"1\",\n                direction: \"column\",\n                minWidth: \"0\",\n                children: [/*#__PURE__*/_jsxDEV(Flex, {\n                  justify: \"space-between\",\n                  align: \"baseline\",\n                  width: \"100%\",\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontWeight: conv.unreadCount > 0 ? \"bold\" : \"medium\",\n                    fontSize: \"md\",\n                    noOfLines: 1,\n                    color: textColorPrimary,\n                    children: conv.user.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"xs\",\n                    color: conv.unreadCount > 0 ? \"blue.500\" : textColorSecondary,\n                    fontWeight: conv.unreadCount > 0 ? \"bold\" : \"normal\",\n                    ml: 2,\n                    flexShrink: 0,\n                    children: formatRelativeTime(conv.lastMessage.time)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                  justify: \"space-between\",\n                  align: \"center\",\n                  mt: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"sm\",\n                    color: conv.unreadCount > 0 ? textColorPrimary : textColorSecondary,\n                    fontWeight: conv.unreadCount > 0 ? \"medium\" : \"normal\",\n                    noOfLines: 1,\n                    flex: \"1\",\n                    children: [conv.lastMessage.sender === 'you' && /*#__PURE__*/_jsxDEV(Text, {\n                      as: \"span\",\n                      color: textColorSecondary,\n                      children: \"You: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 399,\n                      columnNumber: 65\n                    }, this), conv.lastMessage.text]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 25\n                  }, this), conv.unreadCount > 0 && /*#__PURE__*/_jsxDEV(Badge, {\n                    colorScheme: \"blue\",\n                    borderRadius: \"full\",\n                    fontSize: \"xs\",\n                    px: 2,\n                    py: 1,\n                    ml: 2,\n                    children: conv.unreadCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this)\n          }, conv.user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flex: \"1\",\n      display: {\n        base: userId ? \"flex\" : \"none\",\n        md: \"flex\"\n      },\n      direction: \"column\",\n      position: \"relative\",\n      bg: chatBgColor,\n      maxHeight: \"100vh\",\n      overflow: \"hidden\",\n      children: [userId ? /*#__PURE__*/_jsxDEV(Chat, {\n        otherUser: (_conversations$find = conversations.find(c => c.user.id === parseInt(userId))) === null || _conversations$find === void 0 ? void 0 : _conversations$find.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n        height: \"100vh\",\n        width: \"100%\",\n        direction: \"column\",\n        align: \"center\",\n        justify: \"center\",\n        p: 4,\n        textAlign: \"center\",\n        overflow: \"hidden\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          bg: \"blue.50\",\n          color: \"blue.500\",\n          borderRadius: \"full\",\n          p: 6,\n          mb: 6,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            as: MessageCircle,\n            boxSize: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          size: \"lg\",\n          mb: 4,\n          children: \"Your Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"md\",\n          color: textColorSecondary,\n          maxWidth: \"400px\",\n          children: \"Select a conversation to start chatting or find new people from their profile.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this), userId && /*#__PURE__*/_jsxDEV(Box, {\n        position: \"absolute\",\n        top: 4,\n        left: 4,\n        zIndex: 2,\n        display: {\n          base: \"block\",\n          md: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          as: \"button\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          width: \"40px\",\n          height: \"40px\",\n          borderRadius: \"full\",\n          bg: \"white\",\n          boxShadow: \"md\",\n          onClick: () => navigate('/chat'),\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"bTM9wWC067OZU/ie1r7ouK3doI0=\", false, function () {\n  return [useParams, useNavigate, useLocation, useAuth, useSocket, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useParams","useNavigate","useLocation","useAuth","useSocket","getConversations","markAllMessagesRead","Chat","Avatar","Badge","Box","Flex","Text","Input","InputGroup","InputLeftElement","Divider","Heading","Icon","useColorModeValue","Search","ArrowLeft","MessageCircle","jsxDEV","_jsxDEV","avatarColors","getAvatarColor","name","hash","i","length","charCodeAt","index","Math","abs","ChatPage","_s","_conversations$find","userId","navigate","location","user","socket","connected","conversations","setConversations","loading","setLoading","error","setError","searchQuery","setSearchQuery","markingAsRead","setMarkingAsRead","borderColor","bgLight","bgActive","bgHover","textColorPrimary","textColorSecondary","placeholderColor","chatBgColor","fetchChats","_location$state","data","Array","isArray","receiverId","state","err","console","id","markMessagesAsRead","updatedConversations","handleMessageReceived","message","sender_id","receiver_id","parseInt","on","off","filteredConversations","trim","filter","conv","toLowerCase","includes","formatRelativeTime","timestamp","date","Date","now","diff","round","floor","toDateString","toLocaleTimeString","hour","minute","yesterday","setDate","getDate","toLocaleDateString","weekday","month","day","height","width","alignItems","justifyContent","children","borderRadius","bg","p","boxShadow","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","overflow","direction","base","md","borderRight","display","maxHeight","align","borderBottomWidth","as","mr","_hover","onClick","boxSize","size","fontWeight","pb","pointerEvents","placeholder","value","onChange","e","target","_placeholder","_focus","flex","overflowY","css","background","justify","mb","fontSize","map","cursor","px","py","transition","borderLeft","borderLeftColor","position","src","image","isOnline","bottom","right","transform","border","minWidth","unreadCount","noOfLines","ml","flexShrink","lastMessage","time","mt","sender","text","colorScheme","otherUser","find","c","maxWidth","top","left","zIndex","_c","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/TUDU-app/TUDU/frontend/src/pages/ChatPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSocket } from '../contexts/SocketContext';\nimport { getConversations, markAllMessagesRead } from '../services/messageApi';\nimport Chat from '../components/Chat';\nimport { \n  Avatar, \n  Badge, \n  Box, \n  Flex, \n  Text, \n  Input, \n  InputGroup, \n  InputLeftElement,\n  Divider,\n  Heading,\n  Icon,\n  useColorModeValue\n} from '@chakra-ui/react';\nimport { Search, ArrowLeft, MessageCircle } from 'lucide-react';\nimport './ChatPage.css';\n\n// Array of colors for avatars\nconst avatarColors = [\n  \"red.500\", \"orange.500\", \"yellow.500\", \"green.500\", \"teal.500\", \n  \"blue.500\", \"cyan.500\", \"purple.500\", \"pink.500\", \"linkedin.500\"\n];\n\n// Function to get a deterministic color based on user name\nconst getAvatarColor = (name) => {\n  if (!name) return \"gray.500\";\n  \n  // Get a simple hash of the name\n  let hash = 0;\n  for (let i = 0; i < name.length; i++) {\n    hash = name.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  \n  // Use the hash to pick a color\n  const index = Math.abs(hash % avatarColors.length);\n  return avatarColors[index];\n};\n\nconst ChatPage = () => {\n  const { userId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { user } = useAuth();\n  const { socket, connected } = useSocket();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [markingAsRead, setMarkingAsRead] = useState(false);\n  \n  // Colors\n  const borderColor = useColorModeValue('gray.200', 'gray.700');\n  const bgLight = useColorModeValue('white', 'gray.800');\n  const bgActive = useColorModeValue('blue.50', 'blue.900');\n  const bgHover = useColorModeValue('gray.50', 'gray.700');\n  const textColorPrimary = useColorModeValue('gray.800', 'white');\n  const textColorSecondary = useColorModeValue('gray.600', 'gray.400');\n  const placeholderColor = useColorModeValue('gray.400', 'gray.500');\n  const chatBgColor = useColorModeValue('gray.50', 'gray.900');\n\n  // Load conversations\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        setLoading(true);\n        const data = await getConversations();\n        \n        // Verificăm dacă avem date valide\n        if (!data || !Array.isArray(data)) {\n          setConversations([]);\n          setError('Nu s-au putut încărca conversațiile');\n          setLoading(false);\n          return;\n        }\n        \n        // Nu mai filtrăm conversațiile, deoarece backend-ul ar trebui să returneze doar conversațiile utilizatorului curent\n        setConversations(data);\n        setError(null);\n\n        // Check if we have a receiverId in the location state (from profile page)\n        const receiverId = location.state?.receiverId;\n        \n        // If we have a receiverId in state, navigate to that chat\n        if (receiverId && !userId) {\n          navigate(`/chat/${receiverId}`);\n          return;\n        }\n      } catch (err) {\n        console.error('Error fetching chats:', err);\n        setError('Failed to load conversations');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchChats();\n  }, [userId, navigate, user.id, location.state]);\n\n  // Mark messages as read when a user opens a conversation\n  useEffect(() => {\n    const markMessagesAsRead = async () => {\n      if (!userId || markingAsRead) return;\n      \n      try {\n        setMarkingAsRead(true);\n        // Mark all messages from this sender as read\n        await markAllMessagesRead(userId);\n        \n        // Update the conversations list to reflect the read status\n        const updatedConversations = await getConversations();\n        setConversations(updatedConversations);\n      } catch (err) {\n        console.error('Error marking messages as read:', err);\n      } finally {\n        setMarkingAsRead(false);\n      }\n    };\n\n    markMessagesAsRead();\n  }, [userId]);\n\n  // Listen for new messages to update conversations list\n  useEffect(() => {\n    if (!socket || !connected) return;\n\n    const handleMessageReceived = async (message) => {\n      // If this message is relevant to the current user (sender or receiver)\n      if (message.sender_id === user.id || message.receiver_id === user.id) {\n        // If the message is from the current open conversation, mark it as read immediately\n        if (message.sender_id === parseInt(userId) && message.receiver_id === user.id) {\n          try {\n            await markAllMessagesRead(userId);\n          } catch (err) {\n            console.error('Error marking message as read:', err);\n          }\n        }\n        \n        // Refresh the conversations list\n        try {\n          const data = await getConversations();\n          if (data && Array.isArray(data)) {\n            setConversations(data);\n          }\n        } catch (err) {\n          console.error('Error refreshing conversations after new message:', err);\n        }\n      }\n    };\n\n    socket.on('message_received', handleMessageReceived);\n\n    return () => {\n      socket.off('message_received', handleMessageReceived);\n    };\n  }, [socket, connected, user.id, userId]);\n\n  // Filter conversations by search query\n  const filteredConversations = useMemo(() => {\n    if (!searchQuery.trim()) return conversations;\n    \n    return conversations.filter(conv => \n      conv.user.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n  }, [conversations, searchQuery]);\n\n  // Format relative time for last message\n  const formatRelativeTime = (timestamp) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diff = Math.round((now - date) / 1000); // seconds\n    \n    if (diff < 60) return 'Just now';\n    if (diff < 3600) return `${Math.floor(diff / 60)}m ago`;\n    if (diff < 86400) return `${Math.floor(diff / 3600)}h ago`;\n    \n    // If it's today\n    if (date.toDateString() === now.toDateString()) {\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    }\n    \n    // If it's yesterday\n    const yesterday = new Date(now);\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (date.toDateString() === yesterday.toDateString()) {\n      return 'Yesterday';\n    }\n    \n    // If it's within a week\n    if (diff < 604800) {\n      return date.toLocaleDateString([], { weekday: 'short' });\n    }\n    \n    // Otherwise show date\n    return date.toLocaleDateString([], { month: 'short', day: 'numeric' });\n  };\n\n  if (loading) {\n    return (\n      <Flex height=\"100vh\" width=\"100%\" alignItems=\"center\" justifyContent=\"center\">\n        <Box \n          borderRadius=\"md\" \n          bg={bgLight} \n          p={4} \n          boxShadow=\"md\"\n          textAlign=\"center\"\n        >\n          <Text color={textColorSecondary}>Loading conversations...</Text>\n        </Box>\n      </Flex>\n    );\n  }\n\n  if (error) {\n    return (\n      <Flex height=\"100vh\" width=\"100%\" alignItems=\"center\" justifyContent=\"center\">\n        <Box \n          borderRadius=\"md\" \n          bg={bgLight} \n          p={4} \n          boxShadow=\"md\"\n          textAlign=\"center\"\n        >\n          <Text color=\"red.500\">{error}</Text>\n        </Box>\n      </Flex>\n    );\n  }\n\n  return (\n    <Flex height=\"100vh\" width=\"100%\" overflow=\"hidden\">\n      {/* Sidebar with conversations */}\n      <Flex \n        direction=\"column\" \n        width={{ base: userId ? \"0\" : \"100%\", md: \"350px\" }} \n        borderRight=\"1px solid\" \n        borderColor={borderColor}\n        bg={bgLight}\n        overflow=\"hidden\"\n        display={{ base: userId ? \"none\" : \"flex\", md: \"flex\" }}\n        maxHeight=\"100vh\"\n      >\n        {/* Header */}\n        <Flex \n          p={4} \n          align=\"center\" \n          borderBottomWidth=\"1px\"\n          borderColor={borderColor}\n        >\n          <Flex align=\"center\" width=\"100%\">\n            <Box \n              as=\"button\"\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              borderRadius=\"full\"\n              p={2}\n              mr={3}\n              _hover={{ bg: bgHover }}\n              onClick={() => navigate('/home')}\n            >\n              <Icon as={ArrowLeft} boxSize={5} />\n            </Box>\n            <Heading size=\"md\" fontWeight=\"600\">Messages</Heading>\n          </Flex>\n        </Flex>\n\n        {/* Search */}\n        <Box p={4} pb={2}>\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n              <Icon as={Search} color={placeholderColor} />\n            </InputLeftElement>\n            <Input\n              placeholder=\"Search conversations...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              borderRadius=\"full\"\n              bg={bgHover}\n              _placeholder={{ color: placeholderColor }}\n              _focus={{ borderColor: \"blue.400\", boxShadow: \"0 0 0 1px var(--chakra-colors-blue-400)\" }}\n            />\n          </InputGroup>\n        </Box>\n\n        {/* Conversations List */}\n        <Box \n          flex=\"1\" \n          overflowY=\"auto\"\n          height=\"calc(100vh - 130px)\"\n          css={{\n            '&::-webkit-scrollbar': {\n              width: '6px',\n            },\n            '&::-webkit-scrollbar-track': {\n              width: '6px',\n              background: 'transparent',\n            },\n            '&::-webkit-scrollbar-thumb': {\n              background: 'rgba(0, 0, 0, 0.1)',\n              borderRadius: '24px',\n            },\n          }}\n        >\n          {filteredConversations.length === 0 ? (\n            <Flex \n              direction=\"column\" \n              height=\"100%\" \n              justify=\"center\" \n              align=\"center\" \n              p={4} \n              textAlign=\"center\"\n            >\n              {searchQuery ? (\n                <Box>\n                  <Text color={textColorSecondary}>No conversations matching \"{searchQuery}\"</Text>\n                </Box>\n              ) : (\n                <Box>\n                  <Icon as={MessageCircle} boxSize={12} color=\"blue.400\" mb={4} />\n                  <Text fontWeight=\"medium\" mb={2}>No conversations yet</Text>\n                  <Text fontSize=\"sm\" color={textColorSecondary}>\n                    Start a chat from a user's profile\n                  </Text>\n                </Box>\n              )}\n            </Flex>\n          ) : (\n            <Box>\n              {filteredConversations.map((conv) => (\n                <Box\n                  key={conv.user.id}\n                  onClick={() => navigate(`/chat/${conv.user.id}`)}\n                  cursor=\"pointer\"\n                  px={4}\n                  py={3}\n                  bg={conv.user.id === parseInt(userId) ? bgActive : \"transparent\"}\n                  _hover={{ bg: conv.user.id === parseInt(userId) ? bgActive : bgHover }}\n                  transition=\"background-color 0.2s\"\n                  borderLeft={conv.user.id === parseInt(userId) ? \"4px solid\" : \"4px solid transparent\"}\n                  borderLeftColor=\"blue.500\"\n                >\n                  <Flex>\n                    <Box position=\"relative\" mr={3}>\n                      <Avatar\n                        size=\"md\"\n                        name={conv.user.name}\n                        src={conv.user.image}\n                        bg={getAvatarColor(conv.user.name)}\n                      />\n                      {conv.user.isOnline && (\n                        <Badge\n                          position=\"absolute\"\n                          bottom=\"0\"\n                          right=\"0\"\n                          bg=\"green.400\"\n                          borderRadius=\"full\"\n                          transform=\"translate(20%, 20%)\"\n                          boxSize=\"3\"\n                          border=\"2px solid white\"\n                        />\n                      )}\n                    </Box>\n                    \n                    <Flex flex=\"1\" direction=\"column\" minWidth=\"0\">\n                      <Flex justify=\"space-between\" align=\"baseline\" width=\"100%\">\n                        <Text \n                          fontWeight={conv.unreadCount > 0 ? \"bold\" : \"medium\"} \n                          fontSize=\"md\"\n                          noOfLines={1}\n                          color={textColorPrimary}\n                        >\n                          {conv.user.name}\n                        </Text>\n                        <Text \n                          fontSize=\"xs\" \n                          color={conv.unreadCount > 0 ? \"blue.500\" : textColorSecondary}\n                          fontWeight={conv.unreadCount > 0 ? \"bold\" : \"normal\"}\n                          ml={2}\n                          flexShrink={0}\n                        >\n                          {formatRelativeTime(conv.lastMessage.time)}\n                        </Text>\n                      </Flex>\n                      \n                      <Flex justify=\"space-between\" align=\"center\" mt={1}>\n                        <Text\n                          fontSize=\"sm\"\n                          color={conv.unreadCount > 0 ? textColorPrimary : textColorSecondary}\n                          fontWeight={conv.unreadCount > 0 ? \"medium\" : \"normal\"}\n                          noOfLines={1}\n                          flex=\"1\"\n                        >\n                          {conv.lastMessage.sender === 'you' && <Text as=\"span\" color={textColorSecondary}>You: </Text>}\n                          {conv.lastMessage.text}\n                        </Text>\n                        \n                        {conv.unreadCount > 0 && (\n                          <Badge\n                            colorScheme=\"blue\"\n                            borderRadius=\"full\"\n                            fontSize=\"xs\"\n                            px={2}\n                            py={1}\n                            ml={2}\n                          >\n                            {conv.unreadCount}\n                          </Badge>\n                        )}\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </Box>\n              ))}\n            </Box>\n          )}\n        </Box>\n      </Flex>\n\n      {/* Chat area */}\n      <Flex \n        flex=\"1\" \n        display={{ base: userId ? \"flex\" : \"none\", md: \"flex\" }}\n        direction=\"column\"\n        position=\"relative\"\n        bg={chatBgColor}\n        maxHeight=\"100vh\"\n        overflow=\"hidden\"\n      >\n        {userId ? (\n          <Chat \n            otherUser={conversations.find(c => c.user.id === parseInt(userId))?.user}\n          />\n        ) : (\n          <Flex \n            height=\"100vh\" \n            width=\"100%\" \n            direction=\"column\"\n            align=\"center\"\n            justify=\"center\"\n            p={4}\n            textAlign=\"center\"\n            overflow=\"hidden\"\n          >\n            <Box \n              bg=\"blue.50\" \n              color=\"blue.500\" \n              borderRadius=\"full\" \n              p={6} \n              mb={6}\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <Icon as={MessageCircle} boxSize={12} />\n            </Box>\n            <Heading size=\"lg\" mb={4}>Your Messages</Heading>\n            <Text fontSize=\"md\" color={textColorSecondary} maxWidth=\"400px\">\n              Select a conversation to start chatting or find new people from their profile.\n            </Text>\n          </Flex>\n        )}\n        \n        {/* Back button on mobile when viewing a conversation */}\n        {userId && (\n          <Box \n            position=\"absolute\" \n            top={4} \n            left={4} \n            zIndex={2}\n            display={{ base: \"block\", md: \"none\" }}\n          >\n            <Box\n              as=\"button\"\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              width=\"40px\"\n              height=\"40px\"\n              borderRadius=\"full\"\n              bg=\"white\"\n              boxShadow=\"md\"\n              onClick={() => navigate('/chat')}\n            >\n              <ArrowLeft size={20} />\n            </Box>\n          </Box>\n        )}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ChatPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}