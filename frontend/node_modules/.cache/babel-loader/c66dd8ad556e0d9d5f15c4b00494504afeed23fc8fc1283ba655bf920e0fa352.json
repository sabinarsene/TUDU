{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useSwitch } from './use-switch.js';\nimport { SwitchProvider } from './use-switch-context.js';\nconst SwitchRoot = forwardRef((props, ref) => {\n  const [switchProps, localProps] = createSplitProps()(props, [\"checked\", \"defaultChecked\", \"disabled\", \"form\", \"id\", \"ids\", \"invalid\", \"label\", \"name\", \"onCheckedChange\", \"readOnly\", \"required\", \"value\"]);\n  const switchContext = useSwitch(switchProps);\n  const mergedProps = mergeProps(switchContext.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(SwitchProvider, {\n    value: switchContext,\n    children: /* @__PURE__ */jsx(ark.label, {\n      ...mergedProps,\n      ref\n    })\n  });\n});\nSwitchRoot.displayName = \"SwitchRoot\";\nexport { SwitchRoot };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}