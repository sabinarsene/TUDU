{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { dataAttr } from '../../utils/attr.js';\nimport { EMPTY_STYLES } from '../../styled-system/empty.js';\nimport { chakra } from '../../styled-system/factory.js';\nimport { useRecipe } from '../../styled-system/use-recipe.js';\nconst Radiomark = forwardRef(function Radiomark2(props, ref) {\n  const recipe = useRecipe({\n    key: \"radiomark\",\n    recipe: props.recipe\n  });\n  const [variantProps, restProps] = recipe.splitVariantProps(props);\n  const {\n    checked,\n    disabled,\n    unstyled,\n    children,\n    ...rest\n  } = restProps;\n  const styles = unstyled ? EMPTY_STYLES : recipe(variantProps);\n  const sharedProps = {\n    ref,\n    \"data-checked\": dataAttr(checked),\n    \"data-disabled\": dataAttr(disabled),\n    ...rest,\n    css: [styles, props.css]\n  };\n  return /* @__PURE__ */jsx(chakra.span, {\n    ...sharedProps,\n    children: checked && /* @__PURE__ */jsx(\"span\", {\n      className: \"dot\"\n    })\n  });\n});\nexport { Radiomark };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}