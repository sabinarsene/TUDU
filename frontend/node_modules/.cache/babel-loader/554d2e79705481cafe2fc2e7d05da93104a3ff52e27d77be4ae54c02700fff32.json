{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { RatingGroup, useRatingGroupItemContext, useRatingGroupContext } from '@ark-ui/react/rating-group';\nimport { forwardRef, isValidElement, cloneElement } from 'react';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nimport { chakra } from '../../styled-system/factory.js';\nimport { StarIcon } from '../icons.js';\nimport { For } from '../for/for.js';\nconst {\n  withProvider,\n  withContext,\n  useStyles: useRatingGroupStyles,\n  PropsProvider\n} = createSlotRecipeContext({\n  key: \"ratingGroup\"\n});\nconst RatingGroupRootProvider = withProvider(RatingGroup.RootProvider, \"root\", {\n  forwardAsChild: true\n});\nconst RatingGroupRoot = withProvider(RatingGroup.Root, \"root\", {\n  forwardAsChild: true\n});\nconst RatingGroupPropsProvider = PropsProvider;\nconst RatingGroupLabel = withContext(RatingGroup.Label, \"label\", {\n  forwardAsChild: true\n});\nconst RatingGroupItem = withContext(RatingGroup.Item, \"item\", {\n  forwardAsChild: true\n});\nfunction cloneIcon(icon, type) {\n  if (!isValidElement(icon)) return null;\n  const props = {\n    [`data-${type}`]: \"\",\n    \"aria-hidden\": \"\"\n  };\n  return cloneElement(icon, props);\n}\nconst RatingGroupItemIndicator = forwardRef(function RatingGroupItemIndicator2(props, ref) {\n  const {\n    icon = /* @__PURE__ */jsx(StarIcon, {}),\n    ...rest\n  } = props;\n  const styles = useRatingGroupStyles();\n  const itemState = useRatingGroupItemContext();\n  return /* @__PURE__ */jsxs(chakra.span, {\n    ...rest,\n    \"data-highlighted\": itemState.highlighted ? \"\" : void 0,\n    \"data-checked\": itemState.checked ? \"\" : void 0,\n    \"data-half\": itemState.half ? \"\" : void 0,\n    css: [styles.itemIndicator, props.css],\n    ref,\n    children: [cloneIcon(icon, \"bg\"), cloneIcon(icon, \"fg\")]\n  });\n});\nconst RatingGroupItems = props => {\n  const api = useRatingGroupContext();\n  return /* @__PURE__ */jsx(For, {\n    each: api.items,\n    children: index => /* @__PURE__ */jsx(RatingGroupItem, {\n      index,\n      ...props,\n      children: /* @__PURE__ */jsx(RatingGroupItemIndicator, {})\n    }, index)\n  });\n};\nconst RatingGroupControl = withContext(RatingGroup.Control, \"control\", {\n  forwardAsChild: true,\n  defaultProps: {\n    children: /* @__PURE__ */jsx(RatingGroupItems, {})\n  }\n});\nconst RatingGroupContext = RatingGroup.Context;\nconst RatingGroupItemContext = RatingGroup.ItemContext;\nconst RatingGroupHiddenInput = RatingGroup.HiddenInput;\nexport { RatingGroupContext, RatingGroupControl, RatingGroupHiddenInput, RatingGroupItem, RatingGroupItemContext, RatingGroupItemIndicator, RatingGroupItems, RatingGroupLabel, RatingGroupPropsProvider, RatingGroupRoot, RatingGroupRootProvider, useRatingGroupStyles };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}