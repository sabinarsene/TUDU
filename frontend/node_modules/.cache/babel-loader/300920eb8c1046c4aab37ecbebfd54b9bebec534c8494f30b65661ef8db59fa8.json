{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { composeRefs } from '../../utils/compose-refs.js';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useFieldset } from './use-fieldset.js';\nimport { FieldsetProvider } from './use-fieldset-context.js';\nconst FieldsetRoot = forwardRef((props, ref) => {\n  const [useFieldsetProps, localProps] = createSplitProps()(props, [\"id\", \"disabled\", \"invalid\"]);\n  const fieldset = useFieldset(useFieldsetProps);\n  const mergedProps = mergeProps(fieldset.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(FieldsetProvider, {\n    value: fieldset,\n    children: /* @__PURE__ */jsx(ark.fieldset, {\n      ...mergedProps,\n      ref: composeRefs(ref, fieldset.refs.rootRef)\n    })\n  });\n});\nFieldsetRoot.displayName = \"FieldsetRoot\";\nexport { FieldsetRoot };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}