{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { composeRefs } from '../../utils/compose-refs.js';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { useRenderStrategyPropsContext } from '../../utils/render-strategy.js';\nimport { useDebounce } from '../../utils/use-debounce.js';\nimport { ark } from '../factory.js';\nimport { usePresence } from '../presence/use-presence.js';\nimport { PresenceProvider } from '../presence/use-presence-context.js';\nimport { useTabsContext } from './use-tabs-context.js';\nconst TabContent = forwardRef((props, ref) => {\n  const [contentProps, localProps] = createSplitProps()(props, [\"value\"]);\n  const tabs = useTabsContext();\n  const renderStrategyProps = useRenderStrategyPropsContext();\n  const presence = usePresence({\n    ...renderStrategyProps,\n    present: useDebounce(tabs.value === props.value, 0),\n    immediate: true\n  });\n  const mergedProps = mergeProps(tabs.getContentProps(contentProps), presence.getPresenceProps(), localProps);\n  return /* @__PURE__ */jsx(PresenceProvider, {\n    value: presence,\n    children: presence.unmounted ? null : /* @__PURE__ */jsx(ark.div, {\n      ...mergedProps,\n      ref: composeRefs(presence.ref, ref)\n    })\n  });\n});\nTabContent.displayName = \"TabContent\";\nexport { TabContent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}