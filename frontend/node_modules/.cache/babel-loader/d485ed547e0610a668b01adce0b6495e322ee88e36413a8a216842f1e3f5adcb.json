{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useColorPickerContext } from './use-color-picker-context.js';\nimport { ColorPickerSwatchPropsProvider } from './use-color-picker-swatch-props-context.js';\nconst ColorPickerValueSwatch = forwardRef((props, ref) => {\n  const [{\n    respectAlpha\n  }, localProps] = createSplitProps()(props, [\"respectAlpha\"]);\n  const colorPicker = useColorPickerContext();\n  const swatchProps = {\n    respectAlpha,\n    value: colorPicker.valueAsString\n  };\n  const mergedProps = mergeProps(colorPicker.getSwatchProps(swatchProps), localProps);\n  return /* @__PURE__ */jsx(ColorPickerSwatchPropsProvider, {\n    value: swatchProps,\n    children: /* @__PURE__ */jsx(ark.div, {\n      ...mergedProps,\n      ref\n    })\n  });\n});\nColorPickerValueSwatch.displayName = \"ColorPickerValueSwatch\";\nexport { ColorPickerValueSwatch };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}