{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nfunction useSteps(props = {}) {\n  const {\n    index = 0,\n    count\n  } = props;\n  const [activeStep, setActiveStep] = useState(index);\n  const maxStep = typeof count === \"number\" ? count - 1 : 0;\n  const activeStepPercent = activeStep / maxStep;\n  return {\n    activeStep,\n    setActiveStep,\n    activeStepPercent: Number.isNaN(activeStepPercent) ? 0 : activeStepPercent,\n    isActiveStep(step) {\n      return step === activeStep;\n    },\n    isCompleteStep(step) {\n      return step < activeStep;\n    },\n    isIncompleteStep(step) {\n      return step > activeStep;\n    },\n    getStatus(step) {\n      if (step < activeStep) return \"complete\";\n      if (step > activeStep) return \"incomplete\";\n      return \"active\";\n    },\n    goToNext() {\n      setActiveStep(step => {\n        return typeof count === \"number\" ? Math.min(count, step + 1) : step + 1;\n      });\n    },\n    goToPrevious() {\n      setActiveStep(step => Math.max(0, step - 1));\n    }\n  };\n}\nexport { useSteps };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}