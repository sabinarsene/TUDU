{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { trapFocus } from '@zag-js/focus-trap';\nimport { forwardRef, useRef } from 'react';\nimport { composeRefs } from '../../utils/compose-refs.js';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { useSafeLayoutEffect } from '../../utils/use-safe-layout-effect.js';\nimport { ark } from '../factory.js';\nconst FocusTrap = forwardRef((props, ref) => {\n  const localRef = useRef(null);\n  const [trapProps, localProps] = createSplitProps()(props, [\"disabled\", \"onActivate\", \"onDeactivate\", \"initialFocus\", \"fallbackFocus\", \"returnFocusOnDeactivate\", \"setReturnFocus\"]);\n  useSafeLayoutEffect(() => {\n    const node = localRef.current;\n    if (!node || trapProps.disabled) return;\n    return trapFocus(node, trapProps);\n  }, [ref, trapProps]);\n  return /* @__PURE__ */jsx(ark.div, {\n    ref: composeRefs(localRef, ref),\n    ...localProps\n  });\n});\nFocusTrap.displayName = \"FocusTrap\";\nexport { FocusTrap };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}