{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\Tudu-app\\\\TUDU\\\\frontend\\\\src\\\\components\\\\Chat\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport { Box, Input, IconButton, VStack, HStack, Text, Spinner, useToast, Badge, Menu, MenuButton, MenuList, MenuItem, Portal, Tooltip } from '@chakra-ui/react';\nimport { Send, Edit2, Trash2, MoreVertical, Reply, X } from 'react-feather';\nimport { useSocket } from '../../contexts/SocketContext';\nimport { API_URL } from '../../config/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  receiverId\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [typing, setTyping] = useState(false);\n  const [replyTo, setReplyTo] = useState(null);\n  const [editingMessage, setEditingMessage] = useState(null);\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n  const toast = useToast();\n  const {\n    socket,\n    connected,\n    sendMessage,\n    editMessage,\n    deleteMessage,\n    startTyping,\n    stopTyping,\n    markMessageRead\n  } = useSocket();\n\n  // Load messages\n  const loadMessages = useCallback(async () => {\n    try {\n      const response = await axios.get(`${API_URL}/messages/${receiverId}`);\n      setMessages(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error loading messages:', error);\n      toast({\n        title: 'Error loading messages',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  }, [receiverId, toast]);\n\n  // Initial load\n  useEffect(() => {\n    loadMessages();\n  }, [loadMessages]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Socket event handlers\n  useEffect(() => {\n    if (!socket) return;\n    const handleMessageReceived = message => {\n      if (message.sender_id === receiverId || message.receiver_id === receiverId) {\n        setMessages(prev => [...prev, message]);\n        if (message.sender_id === receiverId) {\n          markMessageRead(message.id);\n        }\n      }\n    };\n    const handleMessageUpdated = message => {\n      if (message.sender_id === receiverId || message.receiver_id === receiverId) {\n        setMessages(prev => prev.map(m => m.id === message.id ? message : m));\n      }\n    };\n    const handleMessageDeleted = ({\n      messageId\n    }) => {\n      setMessages(prev => prev.filter(m => m.id !== messageId));\n    };\n    const handleUserTyping = ({\n      userId\n    }) => {\n      if (userId === receiverId) {\n        setTyping(true);\n      }\n    };\n    const handleUserStoppedTyping = ({\n      userId\n    }) => {\n      if (userId === receiverId) {\n        setTyping(false);\n      }\n    };\n    socket.on('message_received', handleMessageReceived);\n    socket.on('message_updated', handleMessageUpdated);\n    socket.on('message_deleted', handleMessageDeleted);\n    socket.on('user_typing', handleUserTyping);\n    socket.on('user_stopped_typing', handleUserStoppedTyping);\n    return () => {\n      socket.off('message_received', handleMessageReceived);\n      socket.off('message_updated', handleMessageUpdated);\n      socket.off('message_deleted', handleMessageDeleted);\n      socket.off('user_typing', handleUserTyping);\n      socket.off('user_stopped_typing', handleUserStoppedTyping);\n    };\n  }, [socket, receiverId, markMessageRead]);\n\n  // Handle typing notifications\n  const handleTyping = useCallback(() => {\n    startTyping(receiverId);\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n    typingTimeoutRef.current = setTimeout(() => {\n      stopTyping(receiverId);\n    }, 2000);\n  }, [receiverId, startTyping, stopTyping]);\n\n  // Handle message sending\n  const handleSend = useCallback(async () => {\n    if (!newMessage.trim() || !connected) return;\n    try {\n      const messageData = {\n        receiverId,\n        content: newMessage,\n        replyTo: replyTo === null || replyTo === void 0 ? void 0 : replyTo.id\n      };\n      const response = await axios.post(`${API_URL}/messages`, messageData);\n      if (connected) {\n        sendMessage(receiverId, newMessage, replyTo === null || replyTo === void 0 ? void 0 : replyTo.id);\n        setMessages(prev => [...prev, response.data]);\n        setNewMessage('');\n        setReplyTo(null);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      toast({\n        title: 'Error sending message',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  }, [newMessage, connected, receiverId, replyTo, sendMessage, toast]);\n\n  // Handle message editing\n  const handleEdit = useCallback(async (messageId, newContent) => {\n    try {\n      await axios.put(`${API_URL}/messages/${messageId}`, {\n        content: newContent\n      });\n      editMessage(messageId, newContent);\n      setEditingMessage(null);\n    } catch (error) {\n      console.error('Error editing message:', error);\n      toast({\n        title: 'Error editing message',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  }, [editMessage, toast]);\n\n  // Handle message deletion\n  const handleDelete = useCallback(async messageId => {\n    try {\n      await axios.delete(`${API_URL}/messages/${messageId}`);\n      deleteMessage(messageId);\n    } catch (error) {\n      console.error('Error deleting message:', error);\n      toast({\n        title: 'Error deleting message',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  }, [deleteMessage, toast]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      h: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    h: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(VStack, {\n      flex: \"1\",\n      overflowY: \"auto\",\n      spacing: 4,\n      p: 4,\n      children: [messages.map(message => {\n        var _messages$find;\n        return /*#__PURE__*/_jsxDEV(Box, {\n          alignSelf: message.sender === 'you' ? 'flex-end' : 'flex-start',\n          maxW: \"70%\",\n          children: [message.replyTo && /*#__PURE__*/_jsxDEV(Box, {\n            borderLeftWidth: \"2px\",\n            borderLeftColor: \"gray.300\",\n            pl: 2,\n            mb: 1,\n            opacity: 0.7,\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"sm\",\n              children: (_messages$find = messages.find(m => m.id === message.replyTo)) === null || _messages$find === void 0 ? void 0 : _messages$find.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            alignItems: \"flex-start\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              bg: message.sender === 'you' ? 'blue.500' : 'gray.100',\n              color: message.sender === 'you' ? 'white' : 'black',\n              px: 4,\n              py: 2,\n              borderRadius: \"lg\",\n              position: \"relative\",\n              children: (editingMessage === null || editingMessage === void 0 ? void 0 : editingMessage.id) === message.id ? /*#__PURE__*/_jsxDEV(HStack, {\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  value: editingMessage.content,\n                  onChange: e => setEditingMessage({\n                    ...editingMessage,\n                    content: e.target.value\n                  }),\n                  size: \"sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  icon: /*#__PURE__*/_jsxDEV(Send, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 29\n                  }, this),\n                  size: \"sm\",\n                  onClick: () => handleEdit(message.id, editingMessage.content)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  icon: /*#__PURE__*/_jsxDEV(X, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 29\n                  }, this),\n                  size: \"sm\",\n                  onClick: () => setEditingMessage(null)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  children: message.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"xs\",\n                  opacity: 0.7,\n                  mt: 1,\n                  children: [new Date(message.time).toLocaleTimeString(), message.isEdited && ' (edited)']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), message.sender === 'you' && !editingMessage && /*#__PURE__*/_jsxDEV(Menu, {\n              children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n                as: IconButton,\n                icon: /*#__PURE__*/_jsxDEV(MoreVertical, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 27\n                }, this),\n                variant: \"ghost\",\n                size: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Portal, {\n                children: /*#__PURE__*/_jsxDEV(MenuList, {\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    icon: /*#__PURE__*/_jsxDEV(Reply, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 31\n                    }, this),\n                    onClick: () => setReplyTo(message),\n                    children: \"Reply\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    icon: /*#__PURE__*/_jsxDEV(Edit2, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 31\n                    }, this),\n                    onClick: () => setEditingMessage({\n                      id: message.id,\n                      content: message.text\n                    }),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    icon: /*#__PURE__*/_jsxDEV(Trash2, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 31\n                    }, this),\n                    onClick: () => handleDelete(message.id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this);\n      }), typing && /*#__PURE__*/_jsxDEV(Badge, {\n        colorScheme: \"gray\",\n        alignSelf: \"flex-start\",\n        children: \"Typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), replyTo && /*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      borderTopWidth: \"1px\",\n      borderColor: \"gray.200\",\n      bg: \"gray.50\",\n      children: /*#__PURE__*/_jsxDEV(HStack, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          flex: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"sm\",\n            fontWeight: \"medium\",\n            children: \"Replying to message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"sm\",\n            noOfLines: 1,\n            children: replyTo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          icon: /*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 21\n          }, this),\n          size: \"sm\",\n          onClick: () => setReplyTo(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      p: 4,\n      borderTopWidth: \"1px\",\n      borderColor: \"gray.200\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Type a message...\",\n        value: newMessage,\n        onChange: e => {\n          setNewMessage(e.target.value);\n          handleTyping();\n        },\n        onKeyPress: e => {\n          if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSend();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        label: connected ? 'Send message' : 'Connecting...',\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          icon: /*#__PURE__*/_jsxDEV(Send, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 19\n          }, this),\n          colorScheme: \"blue\",\n          isDisabled: !connected || !newMessage.trim(),\n          onClick: handleSend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"AV3DhCBRAaT5y5mawSYF0sc2fZo=\", false, function () {\n  return [useToast, useSocket];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","axios","Box","Input","IconButton","VStack","HStack","Text","Spinner","useToast","Badge","Menu","MenuButton","MenuList","MenuItem","Portal","Tooltip","Send","Edit2","Trash2","MoreVertical","Reply","X","useSocket","API_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","receiverId","_s","messages","setMessages","newMessage","setNewMessage","loading","setLoading","typing","setTyping","replyTo","setReplyTo","editingMessage","setEditingMessage","messagesEndRef","typingTimeoutRef","toast","socket","connected","sendMessage","editMessage","deleteMessage","startTyping","stopTyping","markMessageRead","loadMessages","response","get","data","error","console","title","status","duration","isClosable","_messagesEndRef$curre","current","scrollIntoView","behavior","handleMessageReceived","message","sender_id","receiver_id","prev","id","handleMessageUpdated","map","m","handleMessageDeleted","messageId","filter","handleUserTyping","userId","handleUserStoppedTyping","on","off","handleTyping","clearTimeout","setTimeout","handleSend","trim","messageData","content","post","handleEdit","newContent","put","handleDelete","delete","display","justifyContent","alignItems","h","children","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","flex","overflowY","spacing","p","_messages$find","alignSelf","sender","maxW","borderLeftWidth","borderLeftColor","pl","mb","opacity","fontSize","find","text","bg","color","px","py","borderRadius","position","value","onChange","e","target","size","icon","onClick","mt","Date","time","toLocaleTimeString","isEdited","as","variant","colorScheme","ref","borderTopWidth","borderColor","fontWeight","noOfLines","placeholder","onKeyPress","key","shiftKey","preventDefault","label","isDisabled","_c","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/Tudu-app/TUDU/frontend/src/components/Chat/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Box,\r\n  Input,\r\n  IconButton,\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Spinner,\r\n  useToast,\r\n  Badge,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  Portal,\r\n  Tooltip\r\n} from '@chakra-ui/react';\r\nimport { Send, Edit2, Trash2, MoreVertical, Reply, X } from 'react-feather';\r\nimport { useSocket } from '../../contexts/SocketContext';\r\nimport { API_URL } from '../../config/api';\r\n\r\nconst Chat = ({ receiverId }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [typing, setTyping] = useState(false);\r\n  const [replyTo, setReplyTo] = useState(null);\r\n  const [editingMessage, setEditingMessage] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const typingTimeoutRef = useRef(null);\r\n  const toast = useToast();\r\n\r\n  const {\r\n    socket,\r\n    connected,\r\n    sendMessage,\r\n    editMessage,\r\n    deleteMessage,\r\n    startTyping,\r\n    stopTyping,\r\n    markMessageRead\r\n  } = useSocket();\r\n\r\n  // Load messages\r\n  const loadMessages = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/messages/${receiverId}`);\r\n      setMessages(response.data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error loading messages:', error);\r\n      toast({\r\n        title: 'Error loading messages',\r\n        status: 'error',\r\n        duration: 3000,\r\n        isClosable: true\r\n      });\r\n    }\r\n  }, [receiverId, toast]);\r\n\r\n  // Initial load\r\n  useEffect(() => {\r\n    loadMessages();\r\n  }, [loadMessages]);\r\n\r\n  // Scroll to bottom when messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  // Socket event handlers\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    const handleMessageReceived = (message) => {\r\n      if (message.sender_id === receiverId || message.receiver_id === receiverId) {\r\n        setMessages(prev => [...prev, message]);\r\n        if (message.sender_id === receiverId) {\r\n          markMessageRead(message.id);\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleMessageUpdated = (message) => {\r\n      if (message.sender_id === receiverId || message.receiver_id === receiverId) {\r\n        setMessages(prev => prev.map(m => \r\n          m.id === message.id ? message : m\r\n        ));\r\n      }\r\n    };\r\n\r\n    const handleMessageDeleted = ({ messageId }) => {\r\n      setMessages(prev => prev.filter(m => m.id !== messageId));\r\n    };\r\n\r\n    const handleUserTyping = ({ userId }) => {\r\n      if (userId === receiverId) {\r\n        setTyping(true);\r\n      }\r\n    };\r\n\r\n    const handleUserStoppedTyping = ({ userId }) => {\r\n      if (userId === receiverId) {\r\n        setTyping(false);\r\n      }\r\n    };\r\n\r\n    socket.on('message_received', handleMessageReceived);\r\n    socket.on('message_updated', handleMessageUpdated);\r\n    socket.on('message_deleted', handleMessageDeleted);\r\n    socket.on('user_typing', handleUserTyping);\r\n    socket.on('user_stopped_typing', handleUserStoppedTyping);\r\n\r\n    return () => {\r\n      socket.off('message_received', handleMessageReceived);\r\n      socket.off('message_updated', handleMessageUpdated);\r\n      socket.off('message_deleted', handleMessageDeleted);\r\n      socket.off('user_typing', handleUserTyping);\r\n      socket.off('user_stopped_typing', handleUserStoppedTyping);\r\n    };\r\n  }, [socket, receiverId, markMessageRead]);\r\n\r\n  // Handle typing notifications\r\n  const handleTyping = useCallback(() => {\r\n    startTyping(receiverId);\r\n\r\n    if (typingTimeoutRef.current) {\r\n      clearTimeout(typingTimeoutRef.current);\r\n    }\r\n\r\n    typingTimeoutRef.current = setTimeout(() => {\r\n      stopTyping(receiverId);\r\n    }, 2000);\r\n  }, [receiverId, startTyping, stopTyping]);\r\n\r\n  // Handle message sending\r\n  const handleSend = useCallback(async () => {\r\n    if (!newMessage.trim() || !connected) return;\r\n\r\n    try {\r\n      const messageData = {\r\n        receiverId,\r\n        content: newMessage,\r\n        replyTo: replyTo?.id\r\n      };\r\n\r\n      const response = await axios.post(`${API_URL}/messages`, messageData);\r\n      \r\n      if (connected) {\r\n        sendMessage(receiverId, newMessage, replyTo?.id);\r\n        setMessages(prev => [...prev, response.data]);\r\n        setNewMessage('');\r\n        setReplyTo(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      toast({\r\n        title: 'Error sending message',\r\n        status: 'error',\r\n        duration: 3000,\r\n        isClosable: true\r\n      });\r\n    }\r\n  }, [newMessage, connected, receiverId, replyTo, sendMessage, toast]);\r\n\r\n  // Handle message editing\r\n  const handleEdit = useCallback(async (messageId, newContent) => {\r\n    try {\r\n      await axios.put(`${API_URL}/messages/${messageId}`, { content: newContent });\r\n      editMessage(messageId, newContent);\r\n      setEditingMessage(null);\r\n    } catch (error) {\r\n      console.error('Error editing message:', error);\r\n      toast({\r\n        title: 'Error editing message',\r\n        status: 'error',\r\n        duration: 3000,\r\n        isClosable: true\r\n      });\r\n    }\r\n  }, [editMessage, toast]);\r\n\r\n  // Handle message deletion\r\n  const handleDelete = useCallback(async (messageId) => {\r\n    try {\r\n      await axios.delete(`${API_URL}/messages/${messageId}`);\r\n      deleteMessage(messageId);\r\n    } catch (error) {\r\n      console.error('Error deleting message:', error);\r\n      toast({\r\n        title: 'Error deleting message',\r\n        status: 'error',\r\n        duration: 3000,\r\n        isClosable: true\r\n      });\r\n    }\r\n  }, [deleteMessage, toast]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" h=\"100%\">\r\n        <Spinner />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box h=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <VStack flex=\"1\" overflowY=\"auto\" spacing={4} p={4}>\r\n        {messages.map((message) => (\r\n          <Box\r\n            key={message.id}\r\n            alignSelf={message.sender === 'you' ? 'flex-end' : 'flex-start'}\r\n            maxW=\"70%\"\r\n          >\r\n            {message.replyTo && (\r\n              <Box\r\n                borderLeftWidth=\"2px\"\r\n                borderLeftColor=\"gray.300\"\r\n                pl={2}\r\n                mb={1}\r\n                opacity={0.7}\r\n              >\r\n                <Text fontSize=\"sm\">\r\n                  {messages.find(m => m.id === message.replyTo)?.text}\r\n                </Text>\r\n              </Box>\r\n            )}\r\n\r\n            <HStack alignItems=\"flex-start\" spacing={2}>\r\n              <Box\r\n                bg={message.sender === 'you' ? 'blue.500' : 'gray.100'}\r\n                color={message.sender === 'you' ? 'white' : 'black'}\r\n                px={4}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                position=\"relative\"\r\n              >\r\n                {editingMessage?.id === message.id ? (\r\n                  <HStack>\r\n                    <Input\r\n                      value={editingMessage.content}\r\n                      onChange={(e) => setEditingMessage({\r\n                        ...editingMessage,\r\n                        content: e.target.value\r\n                      })}\r\n                      size=\"sm\"\r\n                    />\r\n                    <IconButton\r\n                      icon={<Send size={16} />}\r\n                      size=\"sm\"\r\n                      onClick={() => handleEdit(message.id, editingMessage.content)}\r\n                    />\r\n                    <IconButton\r\n                      icon={<X size={16} />}\r\n                      size=\"sm\"\r\n                      onClick={() => setEditingMessage(null)}\r\n                    />\r\n                  </HStack>\r\n                ) : (\r\n                  <>\r\n                    <Text>{message.text}</Text>\r\n                    <Text fontSize=\"xs\" opacity={0.7} mt={1}>\r\n                      {new Date(message.time).toLocaleTimeString()}\r\n                      {message.isEdited && ' (edited)'}\r\n                    </Text>\r\n                  </>\r\n                )}\r\n              </Box>\r\n\r\n              {message.sender === 'you' && !editingMessage && (\r\n                <Menu>\r\n                  <MenuButton\r\n                    as={IconButton}\r\n                    icon={<MoreVertical size={16} />}\r\n                    variant=\"ghost\"\r\n                    size=\"sm\"\r\n                  />\r\n                  <Portal>\r\n                    <MenuList>\r\n                      <MenuItem\r\n                        icon={<Reply size={16} />}\r\n                        onClick={() => setReplyTo(message)}\r\n                      >\r\n                        Reply\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        icon={<Edit2 size={16} />}\r\n                        onClick={() => setEditingMessage({\r\n                          id: message.id,\r\n                          content: message.text\r\n                        })}\r\n                      >\r\n                        Edit\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        icon={<Trash2 size={16} />}\r\n                        onClick={() => handleDelete(message.id)}\r\n                      >\r\n                        Delete\r\n                      </MenuItem>\r\n                    </MenuList>\r\n                  </Portal>\r\n                </Menu>\r\n              )}\r\n            </HStack>\r\n          </Box>\r\n        ))}\r\n\r\n        {typing && (\r\n          <Badge colorScheme=\"gray\" alignSelf=\"flex-start\">\r\n            Typing...\r\n          </Badge>\r\n        )}\r\n\r\n        <div ref={messagesEndRef} />\r\n      </VStack>\r\n\r\n      {replyTo && (\r\n        <Box\r\n          p={2}\r\n          borderTopWidth=\"1px\"\r\n          borderColor=\"gray.200\"\r\n          bg=\"gray.50\"\r\n        >\r\n          <HStack>\r\n            <Box flex=\"1\">\r\n              <Text fontSize=\"sm\" fontWeight=\"medium\">\r\n                Replying to message\r\n              </Text>\r\n              <Text fontSize=\"sm\" noOfLines={1}>\r\n                {replyTo.text}\r\n              </Text>\r\n            </Box>\r\n            <IconButton\r\n              icon={<X size={16} />}\r\n              size=\"sm\"\r\n              onClick={() => setReplyTo(null)}\r\n            />\r\n          </HStack>\r\n        </Box>\r\n      )}\r\n\r\n      <HStack p={4} borderTopWidth=\"1px\" borderColor=\"gray.200\">\r\n        <Input\r\n          placeholder=\"Type a message...\"\r\n          value={newMessage}\r\n          onChange={(e) => {\r\n            setNewMessage(e.target.value);\r\n            handleTyping();\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === 'Enter' && !e.shiftKey) {\r\n              e.preventDefault();\r\n              handleSend();\r\n            }\r\n          }}\r\n        />\r\n        <Tooltip label={connected ? 'Send message' : 'Connecting...'}>\r\n          <IconButton\r\n            icon={<Send size={20} />}\r\n            colorScheme=\"blue\"\r\n            isDisabled={!connected || !newMessage.trim()}\r\n            onClick={handleSend}\r\n          />\r\n        </Tooltip>\r\n      </HStack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}