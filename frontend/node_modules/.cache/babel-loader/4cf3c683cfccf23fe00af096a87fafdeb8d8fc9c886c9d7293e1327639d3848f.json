{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { splitRenderStrategyProps, RenderStrategyPropsProvider } from '../../utils/render-strategy.js';\nimport { ark } from '../factory.js';\nimport { useAccordion } from './use-accordion.js';\nimport { AccordionProvider } from './use-accordion-context.js';\nconst AccordionRoot = forwardRef((props, ref) => {\n  const [renderStrategyProps, accordionProps] = splitRenderStrategyProps(props);\n  const [useAccordionProps, localProps] = createSplitProps()(accordionProps, [\"collapsible\", \"defaultValue\", \"disabled\", \"id\", \"ids\", \"multiple\", \"onFocusChange\", \"onValueChange\", \"orientation\", \"value\"]);\n  const accordion = useAccordion(useAccordionProps);\n  const mergedProps = mergeProps(accordion.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(AccordionProvider, {\n    value: accordion,\n    children: /* @__PURE__ */jsx(RenderStrategyPropsProvider, {\n      value: renderStrategyProps,\n      children: /* @__PURE__ */jsx(ark.div, {\n        ...mergedProps,\n        ref\n      })\n    })\n  });\n});\nAccordionRoot.displayName = \"AccordionRoot\";\nexport { AccordionRoot };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}