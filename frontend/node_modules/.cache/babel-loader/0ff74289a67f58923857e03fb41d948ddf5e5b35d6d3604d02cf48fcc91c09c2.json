{"ast":null,"code":"'use client';\n\nimport { dataAttr } from '@zag-js/dom-query';\nimport { useControllableState } from '../../utils/use-controllable-state.js';\nimport { parts } from './toggle.anatomy.js';\nfunction useToggle(props) {\n  const {\n    defaultPressed,\n    pressed,\n    onPressedChange,\n    disabled\n  } = props;\n  const [pressedState, setPressedState] = useControllableState({\n    defaultValue: !!defaultPressed,\n    value: pressed,\n    onChange: onPressedChange\n  });\n  return {\n    pressed: pressedState,\n    disabled: !!disabled,\n    setPressed: setPressedState,\n    getRootProps() {\n      return {\n        ...parts.root.attrs,\n        type: \"button\",\n        disabled,\n        \"aria-pressed\": pressedState,\n        \"data-state\": pressedState ? \"on\" : \"off\",\n        \"data-pressed\": dataAttr(pressedState),\n        \"data-disabled\": dataAttr(disabled),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          setPressedState(!pressedState);\n        }\n      };\n    },\n    getIndicatorProps() {\n      return {\n        ...parts.indicator.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-pressed\": dataAttr(pressedState),\n        \"data-state\": pressedState ? \"on\" : \"off\"\n      };\n    }\n  };\n}\nexport { useToggle };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}