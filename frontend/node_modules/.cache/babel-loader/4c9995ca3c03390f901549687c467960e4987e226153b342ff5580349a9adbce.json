{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\TUDU-app\\\\TUDU\\\\frontend\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSocket } from '../contexts/SocketContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport { getMessages, sendMessage, markMessageRead } from '../services/messageApi';\nimport { getProfileImageUrl, handleImageError } from '../utils/imageUtils';\nimport { Avatar, Box, Flex, Text, Input, Button, VStack, HStack, Spinner, Icon } from '@chakra-ui/react';\nimport { SendHorizontal, Phone, Video, MoreVertical } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const {\n    socket,\n    connected\n  } = useSocket();\n  const [messages, setMessages] = useState([]);\n  const [chatPartner, setChatPartner] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Load messages\n  useEffect(() => {\n    const loadMessages = async () => {\n      try {\n        setLoading(true);\n        const data = await getMessages(userId);\n\n        // Extract chat partner details from the first message\n        if (data && data.length > 0) {\n          const firstMessage = data[0];\n          const partnerDetails = firstMessage.sender === 'you' ? firstMessage.receiverDetails : firstMessage.senderDetails;\n          setChatPartner({\n            id: partnerDetails.id,\n            name: `${partnerDetails.first_name} ${partnerDetails.last_name}`,\n            image: partnerDetails.profile_image,\n            isOnline: partnerDetails.isOnline,\n            lastSeen: partnerDetails.lastSeen\n          });\n        }\n        setMessages(data);\n        setError(null);\n      } catch (err) {\n        console.error('Error loading messages:', err);\n        setError('Failed to load messages');\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (userId) {\n      loadMessages();\n    }\n  }, [userId]);\n\n  // Focus input field when chat partner changes\n  useEffect(() => {\n    var _inputRef$current;\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }, [chatPartner]);\n\n  // Socket event handlers\n  useEffect(() => {\n    if (!socket || !connected) return;\n    const handleMessageReceived = message => {\n      if (message.sender_id === userId || message.receiver_id === userId) {\n        setMessages(prev => [...prev, {\n          ...message,\n          sender: message.sender_id === user.id ? 'you' : 'them'\n        }]);\n        if (message.sender_id === userId) {\n          markMessageRead(message.id).catch(console.error);\n        }\n      }\n    };\n    const handleMessageUpdated = message => {\n      if (message.sender_id === userId || message.receiver_id === userId) {\n        setMessages(prev => prev.map(m => m.id === message.id ? {\n          ...message,\n          sender: message.sender_id === user.id ? 'you' : 'them'\n        } : m));\n      }\n    };\n    const handleMessageDeleted = ({\n      messageId\n    }) => {\n      setMessages(prev => prev.filter(m => m.id !== messageId));\n    };\n    socket.on('message_received', handleMessageReceived);\n    socket.on('message_updated', handleMessageUpdated);\n    socket.on('message_deleted', handleMessageDeleted);\n    return () => {\n      socket.off('message_received', handleMessageReceived);\n      socket.off('message_updated', handleMessageUpdated);\n      socket.off('message_deleted', handleMessageDeleted);\n    };\n  }, [socket, connected, userId, user.id]);\n\n  // Group messages by date\n  const groupMessagesByDate = () => {\n    const groups = [];\n    let currentGroup = null;\n    messages.forEach(message => {\n      const messageDate = new Date(message.time).toDateString();\n      if (!currentGroup || currentGroup.date !== messageDate) {\n        currentGroup = {\n          date: messageDate,\n          messages: []\n        };\n        groups.push(currentGroup);\n      }\n      currentGroup.messages.push(message);\n    });\n    return groups;\n  };\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Format date for display\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (date.toDateString() === today.toDateString()) {\n      return 'Today';\n    } else if (date.toDateString() === yesterday.toDateString()) {\n      return 'Yesterday';\n    } else {\n      return date.toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric',\n        year: date.getFullYear() !== today.getFullYear() ? 'numeric' : undefined\n      });\n    }\n  };\n\n  // Send message\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    try {\n      var _inputRef$current2;\n      const sentMessage = await sendMessage(userId, newMessage.trim());\n      setNewMessage('');\n\n      // Add the sent message to the messages state locally\n      // This ensures the message appears immediately without waiting for socket\n      setMessages(prev => [...prev, {\n        id: sentMessage.id,\n        text: sentMessage.content,\n        time: sentMessage.created_at,\n        sender: 'you',\n        isRead: false,\n        isEdited: false\n      }]);\n\n      // Focus back on input field\n      (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.focus();\n    } catch (err) {\n      console.error('Error sending message:', err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      height: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        color: \"blue.500\",\n        size: \"xl\",\n        thickness: \"4px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      height: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        color: \"red.500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this);\n  }\n  const messageGroups = groupMessagesByDate();\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    direction: \"column\",\n    height: \"100%\",\n    bg: \"gray.50\",\n    overflow: \"hidden\",\n    children: [chatPartner && /*#__PURE__*/_jsxDEV(Flex, {\n      p: 3,\n      bg: \"white\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      borderBottom: \"1px solid\",\n      borderColor: \"gray.200\",\n      position: \"sticky\",\n      top: 0,\n      zIndex: 1,\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          name: chatPartner.name,\n          src: getProfileImageUrl(chatPartner),\n          size: \"md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            children: chatPartner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xs\",\n            color: chatPartner.isOnline ? \"green.500\" : \"gray.500\",\n            children: chatPartner.isOnline ? 'Online' : 'Offline'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          as: Phone,\n          boxSize: 6,\n          color: \"blue.500\",\n          cursor: \"pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Icon, {\n          as: Video,\n          boxSize: 6,\n          color: \"blue.500\",\n          cursor: \"pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Icon, {\n          as: MoreVertical,\n          boxSize: 6,\n          color: \"gray.500\",\n          cursor: \"pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      flex: \"1\",\n      overflowY: \"auto\",\n      spacing: 4,\n      p: 4,\n      align: \"stretch\",\n      height: \"calc(100% - 120px)\",\n      css: {\n        '&::-webkit-scrollbar': {\n          width: '6px'\n        },\n        '&::-webkit-scrollbar-track': {\n          background: 'transparent'\n        },\n        '&::-webkit-scrollbar-thumb': {\n          background: '#CBD5E0',\n          borderRadius: '24px'\n        },\n        '&::-webkit-scrollbar-thumb:hover': {\n          background: '#A0AEC0'\n        }\n      },\n      children: [messageGroups.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 4,\n        align: \"stretch\",\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"center\",\n          my: 2,\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xs\",\n            color: \"gray.500\",\n            bg: \"gray.100\",\n            px: 3,\n            py: 1,\n            borderRadius: \"full\",\n            children: formatDate(group.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), group.messages.map((message, index) => {\n          const prevMessage = group.messages[index - 1];\n          const nextMessage = group.messages[index + 1];\n          const isFirstInSequence = !prevMessage || prevMessage.sender !== message.sender;\n          const isLastInSequence = !nextMessage || nextMessage.sender !== message.sender;\n          return /*#__PURE__*/_jsxDEV(Flex, {\n            justify: message.sender === 'you' ? 'flex-end' : 'flex-start',\n            mb: isLastInSequence ? 3 : 1,\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              maxWidth: \"75%\",\n              direction: \"column\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                bg: message.sender === 'you' ? 'blue.500' : 'white',\n                color: message.sender === 'you' ? 'white' : 'black',\n                px: 4,\n                py: 2,\n                borderRadius: 12,\n                boxShadow: \"sm\",\n                borderTopLeftRadius: message.sender !== 'you' && !isFirstInSequence ? 4 : 12,\n                borderTopRightRadius: message.sender === 'you' && !isFirstInSequence ? 4 : 12,\n                borderBottomLeftRadius: message.sender !== 'you' && !isLastInSequence ? 4 : 12,\n                borderBottomRightRadius: message.sender === 'you' && !isLastInSequence ? 4 : 12,\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  children: message.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                spacing: 1,\n                alignSelf: message.sender === 'you' ? 'flex-end' : 'flex-start',\n                mt: 1,\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"xs\",\n                  color: \"gray.500\",\n                  children: new Date(message.time).toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    hour12: false\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this), message.isEdited && /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"xs\",\n                  color: \"gray.500\",\n                  children: \"(edited)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this)\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this);\n        })]\n      }, groupIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      as: \"form\",\n      onSubmit: handleSendMessage,\n      p: 4,\n      bg: \"white\",\n      borderTop: \"1px solid\",\n      borderColor: \"gray.200\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: inputRef,\n        flex: \"1\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        borderRadius: \"full\",\n        mr: 2,\n        bg: \"gray.100\",\n        _focus: {\n          bg: \"white\",\n          borderColor: \"blue.500\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        isDisabled: !newMessage.trim(),\n        colorScheme: \"blue\",\n        borderRadius: \"full\",\n        px: 5,\n        leftIcon: /*#__PURE__*/_jsxDEV(SendHorizontal, {\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"eWuCZEN4Gyarj4cipmXphOBIGbg=\", false, function () {\n  return [useParams, useAuth, useSocket];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useSocket","useAuth","getMessages","sendMessage","markMessageRead","getProfileImageUrl","handleImageError","Avatar","Box","Flex","Text","Input","Button","VStack","HStack","Spinner","Icon","SendHorizontal","Phone","Video","MoreVertical","jsxDEV","_jsxDEV","Chat","_s","userId","user","socket","connected","messages","setMessages","chatPartner","setChatPartner","newMessage","setNewMessage","loading","setLoading","error","setError","messagesEndRef","inputRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","loadMessages","data","length","firstMessage","partnerDetails","sender","receiverDetails","senderDetails","id","name","first_name","last_name","image","profile_image","isOnline","lastSeen","err","console","_inputRef$current","focus","handleMessageReceived","message","sender_id","receiver_id","prev","catch","handleMessageUpdated","map","m","handleMessageDeleted","messageId","filter","on","off","groupMessagesByDate","groups","currentGroup","forEach","messageDate","Date","time","toDateString","date","push","formatDate","dateString","today","yesterday","setDate","getDate","toLocaleDateString","month","day","year","getFullYear","undefined","handleSendMessage","e","preventDefault","trim","_inputRef$current2","sentMessage","text","content","created_at","isRead","isEdited","height","alignItems","justifyContent","children","color","size","thickness","fileName","_jsxFileName","lineNumber","columnNumber","messageGroups","direction","bg","overflow","p","borderBottom","borderColor","position","top","zIndex","spacing","src","fontWeight","fontSize","as","boxSize","cursor","flex","overflowY","align","css","width","background","borderRadius","group","groupIndex","justify","my","px","py","index","prevMessage","nextMessage","isFirstInSequence","isLastInSequence","mb","maxWidth","boxShadow","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","alignSelf","mt","toLocaleTimeString","hour","minute","hour12","ref","onSubmit","borderTop","value","onChange","target","placeholder","mr","_focus","type","isDisabled","colorScheme","leftIcon","_c","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/TUDU-app/TUDU/frontend/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSocket } from '../contexts/SocketContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { getMessages, sendMessage, markMessageRead } from '../services/messageApi';\r\nimport { getProfileImageUrl, handleImageError } from '../utils/imageUtils';\r\nimport { Avatar, Box, Flex, Text, Input, Button, VStack, HStack, Spinner, Icon } from '@chakra-ui/react';\r\nimport { SendHorizontal, Phone, Video, MoreVertical } from 'lucide-react';\r\n\r\nconst Chat = () => {\r\n  const { userId } = useParams();\r\n  const { user } = useAuth();\r\n  const { socket, connected } = useSocket();\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatPartner, setChatPartner] = useState(null);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  // Scroll to bottom of messages\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // Load messages\r\n  useEffect(() => {\r\n    const loadMessages = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getMessages(userId);\r\n        \r\n        // Extract chat partner details from the first message\r\n        if (data && data.length > 0) {\r\n          const firstMessage = data[0];\r\n          const partnerDetails = firstMessage.sender === 'you' \r\n            ? firstMessage.receiverDetails \r\n            : firstMessage.senderDetails;\r\n            \r\n          setChatPartner({\r\n            id: partnerDetails.id,\r\n            name: `${partnerDetails.first_name} ${partnerDetails.last_name}`,\r\n            image: partnerDetails.profile_image,\r\n            isOnline: partnerDetails.isOnline,\r\n            lastSeen: partnerDetails.lastSeen\r\n          });\r\n        }\r\n        \r\n        setMessages(data);\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error('Error loading messages:', err);\r\n        setError('Failed to load messages');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (userId) {\r\n      loadMessages();\r\n    }\r\n  }, [userId]);\r\n\r\n  // Focus input field when chat partner changes\r\n  useEffect(() => {\r\n    inputRef.current?.focus();\r\n  }, [chatPartner]);\r\n\r\n  // Socket event handlers\r\n  useEffect(() => {\r\n    if (!socket || !connected) return;\r\n\r\n    const handleMessageReceived = (message) => {\r\n      if (message.sender_id === userId || message.receiver_id === userId) {\r\n        setMessages(prev => [...prev, {\r\n          ...message,\r\n          sender: message.sender_id === user.id ? 'you' : 'them'\r\n        }]);\r\n        if (message.sender_id === userId) {\r\n          markMessageRead(message.id).catch(console.error);\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleMessageUpdated = (message) => {\r\n      if (message.sender_id === userId || message.receiver_id === userId) {\r\n        setMessages(prev => prev.map(m => \r\n          m.id === message.id ? {\r\n            ...message,\r\n            sender: message.sender_id === user.id ? 'you' : 'them'\r\n          } : m\r\n        ));\r\n      }\r\n    };\r\n\r\n    const handleMessageDeleted = ({ messageId }) => {\r\n      setMessages(prev => prev.filter(m => m.id !== messageId));\r\n    };\r\n\r\n    socket.on('message_received', handleMessageReceived);\r\n    socket.on('message_updated', handleMessageUpdated);\r\n    socket.on('message_deleted', handleMessageDeleted);\r\n\r\n    return () => {\r\n      socket.off('message_received', handleMessageReceived);\r\n      socket.off('message_updated', handleMessageUpdated);\r\n      socket.off('message_deleted', handleMessageDeleted);\r\n    };\r\n  }, [socket, connected, userId, user.id]);\r\n\r\n  // Group messages by date\r\n  const groupMessagesByDate = () => {\r\n    const groups = [];\r\n    let currentGroup = null;\r\n    \r\n    messages.forEach(message => {\r\n      const messageDate = new Date(message.time).toDateString();\r\n      \r\n      if (!currentGroup || currentGroup.date !== messageDate) {\r\n        currentGroup = { date: messageDate, messages: [] };\r\n        groups.push(currentGroup);\r\n      }\r\n      \r\n      currentGroup.messages.push(message);\r\n    });\r\n    \r\n    return groups;\r\n  };\r\n\r\n  // Scroll to bottom when messages change\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Format date for display\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const today = new Date();\r\n    const yesterday = new Date(today);\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n    \r\n    if (date.toDateString() === today.toDateString()) {\r\n      return 'Today';\r\n    } else if (date.toDateString() === yesterday.toDateString()) {\r\n      return 'Yesterday';\r\n    } else {\r\n      return date.toLocaleDateString('en-US', { \r\n        month: 'short', \r\n        day: 'numeric',\r\n        year: date.getFullYear() !== today.getFullYear() ? 'numeric' : undefined\r\n      });\r\n    }\r\n  };\r\n\r\n  // Send message\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n\r\n    try {\r\n      const sentMessage = await sendMessage(userId, newMessage.trim());\r\n      setNewMessage('');\r\n      \r\n      // Add the sent message to the messages state locally\r\n      // This ensures the message appears immediately without waiting for socket\r\n      setMessages(prev => [...prev, {\r\n        id: sentMessage.id,\r\n        text: sentMessage.content,\r\n        time: sentMessage.created_at,\r\n        sender: 'you',\r\n        isRead: false,\r\n        isEdited: false\r\n      }]);\r\n      \r\n      // Focus back on input field\r\n      inputRef.current?.focus();\r\n    } catch (err) {\r\n      console.error('Error sending message:', err);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Flex height=\"100%\" alignItems=\"center\" justifyContent=\"center\">\r\n        <Spinner color=\"blue.500\" size=\"xl\" thickness=\"4px\" />\r\n      </Flex>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Flex height=\"100%\" alignItems=\"center\" justifyContent=\"center\">\r\n        <Text color=\"red.500\">{error}</Text>\r\n      </Flex>\r\n    );\r\n  }\r\n\r\n  const messageGroups = groupMessagesByDate();\r\n\r\n  return (\r\n    <Flex direction=\"column\" height=\"100%\" bg=\"gray.50\" overflow=\"hidden\">\r\n      {/* Chat header */}\r\n      {chatPartner && (\r\n        <Flex \r\n          p={3} \r\n          bg=\"white\" \r\n          alignItems=\"center\" \r\n          justifyContent=\"space-between\"\r\n          borderBottom=\"1px solid\" \r\n          borderColor=\"gray.200\"\r\n          position=\"sticky\"\r\n          top={0}\r\n          zIndex={1}\r\n        >\r\n          <HStack spacing={3}>\r\n            <Avatar \r\n              name={chatPartner.name}\r\n              src={getProfileImageUrl(chatPartner)}\r\n              size=\"md\"\r\n            />\r\n            <Box>\r\n              <Text fontWeight=\"bold\">{chatPartner.name}</Text>\r\n              <Text fontSize=\"xs\" color={chatPartner.isOnline ? \"green.500\" : \"gray.500\"}>\r\n                {chatPartner.isOnline ? 'Online' : 'Offline'}\r\n              </Text>\r\n            </Box>\r\n          </HStack>\r\n          <HStack spacing={2}>\r\n            <Icon as={Phone} boxSize={6} color=\"blue.500\" cursor=\"pointer\" />\r\n            <Icon as={Video} boxSize={6} color=\"blue.500\" cursor=\"pointer\" />\r\n            <Icon as={MoreVertical} boxSize={6} color=\"gray.500\" cursor=\"pointer\" />\r\n          </HStack>\r\n        </Flex>\r\n      )}\r\n\r\n      {/* Messages container */}\r\n      <VStack \r\n        flex=\"1\" \r\n        overflowY=\"auto\" \r\n        spacing={4} \r\n        p={4} \r\n        align=\"stretch\"\r\n        height=\"calc(100% - 120px)\"\r\n        css={{\r\n          '&::-webkit-scrollbar': { width: '6px' },\r\n          '&::-webkit-scrollbar-track': { background: 'transparent' },\r\n          '&::-webkit-scrollbar-thumb': { background: '#CBD5E0', borderRadius: '24px' },\r\n          '&::-webkit-scrollbar-thumb:hover': { background: '#A0AEC0' }\r\n        }}\r\n      >\r\n        {messageGroups.map((group, groupIndex) => (\r\n          <VStack key={groupIndex} spacing={4} align=\"stretch\">\r\n            <Flex justify=\"center\" my={2}>\r\n              <Text fontSize=\"xs\" color=\"gray.500\" bg=\"gray.100\" px={3} py={1} borderRadius=\"full\">\r\n                {formatDate(group.date)}\r\n              </Text>\r\n            </Flex>\r\n            \r\n            {group.messages.map((message, index) => {\r\n              const prevMessage = group.messages[index - 1];\r\n              const nextMessage = group.messages[index + 1];\r\n              const isFirstInSequence = !prevMessage || prevMessage.sender !== message.sender;\r\n              const isLastInSequence = !nextMessage || nextMessage.sender !== message.sender;\r\n              \r\n              return (\r\n                <Flex \r\n                  key={message.id} \r\n                  justify={message.sender === 'you' ? 'flex-end' : 'flex-start'}\r\n                  mb={isLastInSequence ? 3 : 1}\r\n                >\r\n                  <Flex maxWidth=\"75%\" direction=\"column\">\r\n                    <Box\r\n                      bg={message.sender === 'you' ? 'blue.500' : 'white'}\r\n                      color={message.sender === 'you' ? 'white' : 'black'}\r\n                      px={4}\r\n                      py={2}\r\n                      borderRadius={12}\r\n                      boxShadow=\"sm\"\r\n                      borderTopLeftRadius={message.sender !== 'you' && !isFirstInSequence ? 4 : 12}\r\n                      borderTopRightRadius={message.sender === 'you' && !isFirstInSequence ? 4 : 12}\r\n                      borderBottomLeftRadius={message.sender !== 'you' && !isLastInSequence ? 4 : 12}\r\n                      borderBottomRightRadius={message.sender === 'you' && !isLastInSequence ? 4 : 12}\r\n                    >\r\n                      <Text>{message.text}</Text>\r\n                    </Box>\r\n                    <HStack \r\n                      spacing={1} \r\n                      alignSelf={message.sender === 'you' ? 'flex-end' : 'flex-start'}\r\n                      mt={1}\r\n                    >\r\n                      <Text fontSize=\"xs\" color=\"gray.500\">\r\n                        {new Date(message.time).toLocaleTimeString([], { \r\n                          hour: '2-digit', \r\n                          minute: '2-digit',\r\n                          hour12: false\r\n                        })}\r\n                      </Text>\r\n                      {message.isEdited && (\r\n                        <Text fontSize=\"xs\" color=\"gray.500\">(edited)</Text>\r\n                      )}\r\n                    </HStack>\r\n                  </Flex>\r\n                </Flex>\r\n              );\r\n            })}\r\n          </VStack>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </VStack>\r\n\r\n      {/* Message input */}\r\n      <Flex \r\n        as=\"form\" \r\n        onSubmit={handleSendMessage} \r\n        p={4} \r\n        bg=\"white\" \r\n        borderTop=\"1px solid\" \r\n        borderColor=\"gray.200\"\r\n      >\r\n        <Input\r\n          ref={inputRef}\r\n          flex=\"1\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n          borderRadius=\"full\"\r\n          mr={2}\r\n          bg=\"gray.100\"\r\n          _focus={{ bg: \"white\", borderColor: \"blue.500\" }}\r\n        />\r\n        <Button \r\n          type=\"submit\"\r\n          isDisabled={!newMessage.trim()}\r\n          colorScheme=\"blue\" \r\n          borderRadius=\"full\"\r\n          px={5}\r\n          leftIcon={<SendHorizontal size={18} />}\r\n        >\r\n          Send\r\n        </Button>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}