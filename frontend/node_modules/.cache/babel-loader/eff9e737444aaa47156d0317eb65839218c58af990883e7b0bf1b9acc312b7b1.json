{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\TUDU-app\\\\TUDU\\\\frontend\\\\src\\\\components\\\\UserRating.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport RatingStars from './RatingStars';\nimport { submitUserRating, fetchUserRatings } from '../services/serviceApi';\nimport { Loader, AlertTriangle, MessageSquare, Send, Info } from 'lucide-react';\nimport './UserRating.css';\n\n// Importăm API_BASE_URL din config.js\nimport { API_BASE_URL } from '../config/api';\n\n/**\r\n * UserRating component for displaying and submitting user ratings\r\n * @param {Object} props - Component props\r\n * @param {string} props.userId - ID of the user being rated\r\n * @returns {JSX.Element} UserRating component\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserRating = ({\n  userId\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [userRating, setUserRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [ratings, setRatings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [averageRating, setAverageRating] = useState(0);\n  const [reviewCount, setReviewCount] = useState(0);\n  const [showCommentInput, setShowCommentInput] = useState(false);\n  const [userHasRated, setUserHasRated] = useState(false);\n  const [existingUserRating, setExistingUserRating] = useState(null);\n  const [apiNotAvailable, setApiNotAvailable] = useState(false);\n\n  // Fetch user ratings when component mounts\n  useEffect(() => {\n    const loadRatings = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        console.log(\"Fetching ratings for user:\", userId);\n        console.log(\"API URL being used:\", `${API_BASE_URL}/api/users/${userId}/ratings`);\n        const ratingsData = await fetchUserRatings(userId);\n        console.log(\"Ratings data:\", ratingsData);\n\n        // Set ratings data\n        setRatings(ratingsData.ratings || []);\n        setAverageRating(ratingsData.averageRating || 0);\n        setReviewCount(ratingsData.reviewCount || 0);\n\n        // Check if current user has already rated\n        if (user && ratingsData.ratings) {\n          const userRating = ratingsData.ratings.find(r => r.ratedBy === user.id);\n          if (userRating) {\n            setUserHasRated(true);\n            setExistingUserRating(userRating);\n            setUserRating(userRating.rating);\n          }\n        }\n        setApiNotAvailable(false);\n      } catch (err) {\n        console.error('Error loading ratings:', err);\n\n        // Check if the error is a 404 (API endpoint not found)\n        if (err.message && (err.message.includes('404') || err.message.includes('Not Found'))) {\n          console.log(\"API endpoint not available, setting apiNotAvailable to true\");\n          setApiNotAvailable(true);\n        } else {\n          setError('Nu am putut încărca evaluările. Te rugăm să încerci din nou.');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (userId) {\n      loadRatings();\n    }\n  }, [userId, user]);\n  const handleRatingChange = rating => {\n    setUserRating(rating);\n    setShowCommentInput(true);\n  };\n  const handleCommentChange = e => {\n    setComment(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!user) {\n      setError('Trebuie să fii autentificat pentru a evalua un utilizator.');\n      return;\n    }\n    if (userRating === 0) {\n      setError('Te rugăm să selectezi un rating înainte de a trimite.');\n      return;\n    }\n    try {\n      setIsSubmitting(true);\n      setError(null);\n\n      // Verificăm token-ul din localStorage\n      const storedToken = localStorage.getItem('token');\n      console.log(\"Token from localStorage:\", storedToken);\n      console.log(\"Token from user object:\", user.token);\n\n      // Folosim token-ul din localStorage în loc de cel din user object\n      console.log(\"Submitting rating:\", userRating, \"for user:\", userId);\n      const result = await submitUserRating(userId, userRating, comment, storedToken);\n      console.log(\"Rating submitted:\", result);\n      setSuccess(true);\n      setUserHasRated(true);\n\n      // Refresh ratings after submission\n      const ratingsData = await fetchUserRatings(userId);\n      setRatings(ratingsData.ratings || []);\n      setAverageRating(ratingsData.averageRating || 0);\n      setReviewCount(ratingsData.reviewCount || 0);\n\n      // Find the user's rating in the updated ratings\n      if (ratingsData.ratings) {\n        const updatedUserRating = ratingsData.ratings.find(r => r.ratedBy === user.id);\n        if (updatedUserRating) {\n          setExistingUserRating(updatedUserRating);\n        }\n      }\n\n      // Clear comment\n      setComment('');\n      setShowCommentInput(false);\n\n      // Show success message temporarily\n      setTimeout(() => {\n        setSuccess(false);\n      }, 3000);\n    } catch (err) {\n      console.error('Error submitting rating:', err);\n      setError(err.message || 'Nu am putut trimite evaluarea. Te rugăm să încerci din nou.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Show loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-rating-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-rating-loading\",\n        children: [/*#__PURE__*/_jsxDEV(Loader, {\n          className: \"spinner\",\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Se \\xEEncarc\\u0103 evalu\\u0103rile...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If API is not available, show a message\n  if (apiNotAvailable) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-rating-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-rating-unavailable\",\n        children: [/*#__PURE__*/_jsxDEV(Info, {\n          size: 32\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sistemul de evalu\\u0103ri nu este disponibil momentan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Lucr\\u0103m la implementarea sistemului de evalu\\u0103ri pentru utilizatori. V\\u0103 mul\\u021Bumim pentru \\xEEn\\u021Belegere!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"technical-info\",\n          children: \"Detalii tehnice: Endpoint-ul API pentru evalu\\u0103ri nu este disponibil. Verifica\\u021Bi consola pentru mai multe informa\\u021Bii.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-rating-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating-summary\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"average-rating\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-value\",\n          children: averageRating.toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RatingStars, {\n          initialRating: averageRating,\n          readOnly: true,\n          size: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-count\",\n          children: [\"(\", reviewCount, \" \", reviewCount === 1 ? 'evaluare' : 'evaluări', \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), !userHasRated && user && user.id !== userId ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Evalueaz\\u0103 acest utilizator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Selecteaz\\u0103 un rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RatingStars, {\n            initialRating: userRating,\n            onRatingChange: handleRatingChange,\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), showCommentInput && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textarea-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n              size: 16,\n              className: \"textarea-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: comment,\n              onChange: handleCommentChange,\n              placeholder: \"Adaug\\u0103 un comentariu (op\\u021Bional)\",\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-rating-btn\",\n            disabled: isSubmitting || userRating === 0,\n            children: isSubmitting ? /*#__PURE__*/_jsxDEV(Loader, {\n              size: 16,\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Send, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Trimite evaluarea\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-error\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-success\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Evaluarea a fost trimis\\u0103 cu succes!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this) : userHasRated && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-already-rated\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Ai evaluat deja acest utilizator cu \", existingUserRating === null || existingUserRating === void 0 ? void 0 : existingUserRating.rating, \" \", (existingUserRating === null || existingUserRating === void 0 ? void 0 : existingUserRating.rating) === 1 ? 'stea' : 'stele']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), (existingUserRating === null || existingUserRating === void 0 ? void 0 : existingUserRating.comment) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"existing-comment\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\\"\", existingUserRating.comment, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this), ratings.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ratings-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Toate evalu\\u0103rile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), ratings.map(rating => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rater-name\",\n            children: rating.raterName || 'Utilizator'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-date\",\n            children: new Date(rating.createdAt).toLocaleDateString('ro-RO')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(RatingStars, {\n          initialRating: rating.rating,\n          readOnly: true,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }, this), rating.comment && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-comment\",\n          children: rating.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 34\n        }, this)]\n      }, rating.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-ratings-message\",\n      children: [/*#__PURE__*/_jsxDEV(Info, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Acest utilizator nu a primit \\xEEnc\\u0103 nicio evaluare.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(UserRating, \"UfFWrD6Sn+7XG4k9gpk/8ghPFhg=\", false, function () {\n  return [useAuth];\n});\n_c = UserRating;\nexport default UserRating;\nvar _c;\n$RefreshReg$(_c, \"UserRating\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","RatingStars","submitUserRating","fetchUserRatings","Loader","AlertTriangle","MessageSquare","Send","Info","API_BASE_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","UserRating","userId","_s","user","userRating","setUserRating","comment","setComment","isSubmitting","setIsSubmitting","error","setError","success","setSuccess","ratings","setRatings","loading","setLoading","averageRating","setAverageRating","reviewCount","setReviewCount","showCommentInput","setShowCommentInput","userHasRated","setUserHasRated","existingUserRating","setExistingUserRating","apiNotAvailable","setApiNotAvailable","loadRatings","console","log","ratingsData","find","r","ratedBy","id","rating","err","message","includes","handleRatingChange","handleCommentChange","e","target","value","handleSubmit","preventDefault","storedToken","localStorage","getItem","token","result","updatedUserRating","setTimeout","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","initialRating","readOnly","onSubmit","onRatingChange","onChange","placeholder","rows","type","disabled","length","map","raterName","Date","createdAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/TUDU-app/TUDU/frontend/src/components/UserRating.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport RatingStars from './RatingStars';\r\nimport { submitUserRating, fetchUserRatings } from '../services/serviceApi';\r\nimport { Loader, AlertTriangle, MessageSquare, Send, Info } from 'lucide-react';\r\nimport './UserRating.css';\r\n\r\n// Importăm API_BASE_URL din config.js\r\nimport { API_BASE_URL } from '../config/api';\r\n\r\n/**\r\n * UserRating component for displaying and submitting user ratings\r\n * @param {Object} props - Component props\r\n * @param {string} props.userId - ID of the user being rated\r\n * @returns {JSX.Element} UserRating component\r\n */\r\nconst UserRating = ({ userId }) => {\r\n  const { user } = useAuth();\r\n  const [userRating, setUserRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [ratings, setRatings] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [averageRating, setAverageRating] = useState(0);\r\n  const [reviewCount, setReviewCount] = useState(0);\r\n  const [showCommentInput, setShowCommentInput] = useState(false);\r\n  const [userHasRated, setUserHasRated] = useState(false);\r\n  const [existingUserRating, setExistingUserRating] = useState(null);\r\n  const [apiNotAvailable, setApiNotAvailable] = useState(false);\r\n\r\n  // Fetch user ratings when component mounts\r\n  useEffect(() => {\r\n    const loadRatings = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        console.log(\"Fetching ratings for user:\", userId);\r\n        console.log(\"API URL being used:\", `${API_BASE_URL}/api/users/${userId}/ratings`);\r\n        \r\n        const ratingsData = await fetchUserRatings(userId);\r\n        console.log(\"Ratings data:\", ratingsData);\r\n        \r\n        // Set ratings data\r\n        setRatings(ratingsData.ratings || []);\r\n        setAverageRating(ratingsData.averageRating || 0);\r\n        setReviewCount(ratingsData.reviewCount || 0);\r\n        \r\n        // Check if current user has already rated\r\n        if (user && ratingsData.ratings) {\r\n          const userRating = ratingsData.ratings.find(r => r.ratedBy === user.id);\r\n          if (userRating) {\r\n            setUserHasRated(true);\r\n            setExistingUserRating(userRating);\r\n            setUserRating(userRating.rating);\r\n          }\r\n        }\r\n        \r\n        setApiNotAvailable(false);\r\n      } catch (err) {\r\n        console.error('Error loading ratings:', err);\r\n        \r\n        // Check if the error is a 404 (API endpoint not found)\r\n        if (err.message && (err.message.includes('404') || err.message.includes('Not Found'))) {\r\n          console.log(\"API endpoint not available, setting apiNotAvailable to true\");\r\n          setApiNotAvailable(true);\r\n        } else {\r\n          setError('Nu am putut încărca evaluările. Te rugăm să încerci din nou.');\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    if (userId) {\r\n      loadRatings();\r\n    }\r\n  }, [userId, user]);\r\n\r\n  const handleRatingChange = (rating) => {\r\n    setUserRating(rating);\r\n    setShowCommentInput(true);\r\n  };\r\n\r\n  const handleCommentChange = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!user) {\r\n      setError('Trebuie să fii autentificat pentru a evalua un utilizator.');\r\n      return;\r\n    }\r\n    \r\n    if (userRating === 0) {\r\n      setError('Te rugăm să selectezi un rating înainte de a trimite.');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setIsSubmitting(true);\r\n      setError(null);\r\n      \r\n      // Verificăm token-ul din localStorage\r\n      const storedToken = localStorage.getItem('token');\r\n      console.log(\"Token from localStorage:\", storedToken);\r\n      console.log(\"Token from user object:\", user.token);\r\n      \r\n      // Folosim token-ul din localStorage în loc de cel din user object\r\n      console.log(\"Submitting rating:\", userRating, \"for user:\", userId);\r\n      const result = await submitUserRating(userId, userRating, comment, storedToken);\r\n      console.log(\"Rating submitted:\", result);\r\n      \r\n      setSuccess(true);\r\n      setUserHasRated(true);\r\n      \r\n      // Refresh ratings after submission\r\n      const ratingsData = await fetchUserRatings(userId);\r\n      setRatings(ratingsData.ratings || []);\r\n      setAverageRating(ratingsData.averageRating || 0);\r\n      setReviewCount(ratingsData.reviewCount || 0);\r\n      \r\n      // Find the user's rating in the updated ratings\r\n      if (ratingsData.ratings) {\r\n        const updatedUserRating = ratingsData.ratings.find(r => r.ratedBy === user.id);\r\n        if (updatedUserRating) {\r\n          setExistingUserRating(updatedUserRating);\r\n        }\r\n      }\r\n      \r\n      // Clear comment\r\n      setComment('');\r\n      setShowCommentInput(false);\r\n      \r\n      // Show success message temporarily\r\n      setTimeout(() => {\r\n        setSuccess(false);\r\n      }, 3000);\r\n    } catch (err) {\r\n      console.error('Error submitting rating:', err);\r\n      setError(err.message || 'Nu am putut trimite evaluarea. Te rugăm să încerci din nou.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Show loading state\r\n  if (loading) {\r\n    return (\r\n      <div className=\"user-rating-container\">\r\n        <div className=\"user-rating-loading\">\r\n          <Loader className=\"spinner\" size={24} />\r\n          <span>Se încarcă evaluările...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If API is not available, show a message\r\n  if (apiNotAvailable) {\r\n    return (\r\n      <div className=\"user-rating-container\">\r\n        <div className=\"user-rating-unavailable\">\r\n          <Info size={32} />\r\n          <h3>Sistemul de evaluări nu este disponibil momentan</h3>\r\n          <p>Lucrăm la implementarea sistemului de evaluări pentru utilizatori. Vă mulțumim pentru înțelegere!</p>\r\n          <p className=\"technical-info\">Detalii tehnice: Endpoint-ul API pentru evaluări nu este disponibil. Verificați consola pentru mai multe informații.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-rating-container\">\r\n      <div className=\"rating-summary\">\r\n        <div className=\"average-rating\">\r\n          <div className=\"rating-value\">{averageRating.toFixed(1)}</div>\r\n          <RatingStars initialRating={averageRating} readOnly={true} size=\"medium\" />\r\n          <div className=\"rating-count\">({reviewCount} {reviewCount === 1 ? 'evaluare' : 'evaluări'})</div>\r\n        </div>\r\n      </div>\r\n      \r\n      {!userHasRated && user && user.id !== userId ? (\r\n        <div className=\"rating-form\">\r\n          <h3>Evaluează acest utilizator</h3>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"rating-selection\">\r\n              <label>Selectează un rating:</label>\r\n              <RatingStars \r\n                initialRating={userRating} \r\n                onRatingChange={handleRatingChange} \r\n                size=\"large\" \r\n              />\r\n            </div>\r\n            \r\n            {showCommentInput && (\r\n              <div className=\"comment-input\">\r\n                <div className=\"textarea-wrapper\">\r\n                  <MessageSquare size={16} className=\"textarea-icon\" />\r\n                  <textarea\r\n                    value={comment}\r\n                    onChange={handleCommentChange}\r\n                    placeholder=\"Adaugă un comentariu (opțional)\"\r\n                    rows={3}\r\n                  />\r\n                </div>\r\n                \r\n                <button \r\n                  type=\"submit\" \r\n                  className=\"submit-rating-btn\"\r\n                  disabled={isSubmitting || userRating === 0}\r\n                >\r\n                  {isSubmitting ? (\r\n                    <Loader size={16} className=\"spinner\" />\r\n                  ) : (\r\n                    <>\r\n                      <Send size={16} />\r\n                      <span>Trimite evaluarea</span>\r\n                    </>\r\n                  )}\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            {error && (\r\n              <div className=\"rating-error\">\r\n                <AlertTriangle size={16} />\r\n                <span>{error}</span>\r\n              </div>\r\n            )}\r\n            \r\n            {success && (\r\n              <div className=\"rating-success\">\r\n                <span>Evaluarea a fost trimisă cu succes!</span>\r\n              </div>\r\n            )}\r\n          </form>\r\n        </div>\r\n      ) : userHasRated && (\r\n        <div className=\"user-already-rated\">\r\n          <p>Ai evaluat deja acest utilizator cu {existingUserRating?.rating} {existingUserRating?.rating === 1 ? 'stea' : 'stele'}</p>\r\n          {existingUserRating?.comment && (\r\n            <div className=\"existing-comment\">\r\n              <p>\"{existingUserRating.comment}\"</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      {ratings.length > 0 ? (\r\n        <div className=\"ratings-list\">\r\n          <h3>Toate evaluările</h3>\r\n          {ratings.map((rating) => (\r\n            <div key={rating.id} className=\"rating-item\">\r\n              <div className=\"rating-header\">\r\n                <div className=\"rater-name\">{rating.raterName || 'Utilizator'}</div>\r\n                <div className=\"rating-date\">{new Date(rating.createdAt).toLocaleDateString('ro-RO')}</div>\r\n              </div>\r\n              <RatingStars initialRating={rating.rating} readOnly={true} size=\"small\" />\r\n              {rating.comment && <div className=\"rating-comment\">{rating.comment}</div>}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"no-ratings-message\">\r\n          <Info size={24} />\r\n          <p>Acest utilizator nu a primit încă nicio evaluare.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserRating; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}