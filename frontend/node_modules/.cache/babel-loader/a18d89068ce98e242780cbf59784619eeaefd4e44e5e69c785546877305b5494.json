{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\Tudu-app\\\\TUDU\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setAuthToken } from \"../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Încarcă datele utilizatorului din localStorage la inițializare\n  useEffect(() => {\n    const loadUserData = async () => {\n      setLoading(true);\n      const storedUser = localStorage.getItem('user');\n      const token = localStorage.getItem('token');\n      if (storedUser && token) {\n        try {\n          const userData = JSON.parse(storedUser);\n          // Procesăm datele de tip dată\n          if (userData.memberSince) {\n            userData.memberSince = new Date(userData.memberSince).toISOString();\n          }\n          // Adăugăm token-ul în obiectul user\n          userData.token = token;\n          setUser(userData);\n          // Setăm token-ul în header-ele axios\n          setAuthToken(token);\n        } catch (error) {\n          console.error('Error parsing user data from localStorage:', error);\n          localStorage.removeItem('user');\n          localStorage.removeItem('token');\n        }\n      }\n      setLoading(false);\n    };\n    loadUserData();\n  }, []);\n  const loginUser = userData => {\n    console.log('Actualizare date utilizator:', userData);\n    // Procesăm datele de tip dată înainte de salvare\n    const processedData = {\n      ...userData,\n      memberSince: userData.memberSince ? new Date(userData.memberSince).toISOString() : null\n    };\n\n    // Ne asigurăm că avem token-ul în userData\n    if (userData.token) {\n      // Salvăm token-ul separat în localStorage\n      localStorage.setItem('token', userData.token);\n      // Setăm token-ul în header-ele axios\n      setAuthToken(userData.token);\n    }\n    setUser(processedData);\n    // Salvează datele utilizatorului în localStorage\n    localStorage.setItem('user', JSON.stringify(processedData));\n  };\n  const updateUserProfile = profileData => {\n    if (!user) return;\n    const updatedUser = {\n      ...user,\n      ...profileData,\n      memberSince: profileData.memberSince ? new Date(profileData.memberSince).toISOString() : user.memberSince\n    };\n    console.log('Actualizare profil utilizator:', updatedUser);\n    setUser(updatedUser);\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n  };\n  const logoutUser = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    // Ștergem token-ul din header-ele axios\n    setAuthToken(null);\n    navigate('/login');\n  };\n  const value = {\n    user,\n    loading,\n    loginUser,\n    updateUserProfile,\n    logoutUser,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useNavigate","setAuthToken","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","navigate","loadUserData","storedUser","localStorage","getItem","token","userData","JSON","parse","memberSince","Date","toISOString","error","console","removeItem","loginUser","log","processedData","setItem","stringify","updateUserProfile","profileData","updatedUser","logoutUser","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/Tudu-app/TUDU/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { setAuthToken } from \"../services/authService\"\n\nconst AuthContext = createContext()\n\nexport const useAuth = () => {\n  return useContext(AuthContext)\n}\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const navigate = useNavigate()\n\n  // Încarcă datele utilizatorului din localStorage la inițializare\n  useEffect(() => {\n    const loadUserData = async () => {\n      setLoading(true)\n      const storedUser = localStorage.getItem('user')\n      const token = localStorage.getItem('token')\n      \n      if (storedUser && token) {\n        try {\n          const userData = JSON.parse(storedUser)\n          // Procesăm datele de tip dată\n          if (userData.memberSince) {\n            userData.memberSince = new Date(userData.memberSince).toISOString()\n          }\n          // Adăugăm token-ul în obiectul user\n          userData.token = token\n          setUser(userData)\n          // Setăm token-ul în header-ele axios\n          setAuthToken(token)\n        } catch (error) {\n          console.error('Error parsing user data from localStorage:', error)\n          localStorage.removeItem('user')\n          localStorage.removeItem('token')\n        }\n      }\n      setLoading(false)\n    }\n\n    loadUserData()\n  }, [])\n\n  const loginUser = (userData) => {\n    console.log('Actualizare date utilizator:', userData);\n    // Procesăm datele de tip dată înainte de salvare\n    const processedData = {\n      ...userData,\n      memberSince: userData.memberSince ? new Date(userData.memberSince).toISOString() : null\n    };\n    \n    // Ne asigurăm că avem token-ul în userData\n    if (userData.token) {\n      // Salvăm token-ul separat în localStorage\n      localStorage.setItem('token', userData.token)\n      // Setăm token-ul în header-ele axios\n      setAuthToken(userData.token)\n    }\n    setUser(processedData)\n    // Salvează datele utilizatorului în localStorage\n    localStorage.setItem('user', JSON.stringify(processedData))\n  }\n\n  const updateUserProfile = (profileData) => {\n    if (!user) return;\n    \n    const updatedUser = { \n      ...user, \n      ...profileData,\n      memberSince: profileData.memberSince ? new Date(profileData.memberSince).toISOString() : user.memberSince\n    };\n    console.log('Actualizare profil utilizator:', updatedUser);\n    setUser(updatedUser);\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n  }\n\n  const logoutUser = () => {\n    setUser(null)\n    localStorage.removeItem('token')\n    localStorage.removeItem('user')\n    // Ștergem token-ul din header-ele axios\n    setAuthToken(null)\n    navigate('/login')\n  }\n\n  const value = {\n    user,\n    loading,\n    loginUser,\n    updateUserProfile,\n    logoutUser,\n    isAuthenticated: !!user\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  )\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}