{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { usePagination } from './use-pagination.js';\nimport { PaginationProvider } from './use-pagination-context.js';\nconst PaginationRoot = forwardRef((props, ref) => {\n  const [paginationProps, localProps] = createSplitProps()(props, [\"count\", \"defaultPage\", \"id\", \"ids\", \"onPageChange\", \"onPageSizeChange\", \"page\", \"pageSize\", \"siblingCount\", \"translations\", \"type\"]);\n  const pagination = usePagination(paginationProps);\n  const mergedProps = mergeProps(pagination.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(PaginationProvider, {\n    value: pagination,\n    children: /* @__PURE__ */jsx(ark.nav, {\n      ...mergedProps,\n      ref\n    })\n  });\n});\nPaginationRoot.displayName = \"PaginationRoot\";\nexport { PaginationRoot };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}