{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { splitItemProps } from '@zag-js/accordion';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { useAccordionContext } from './use-accordion-context.js';\nimport { AccordionItemProvider } from './use-accordion-item-context.js';\nimport { CollapsibleRoot } from '../collapsible/collapsible-root.js';\nimport '@zag-js/color-picker';\nimport '@zag-js/date-picker';\nimport '@internationalized/date';\nimport { useRenderStrategyPropsContext } from '../../utils/render-strategy.js';\nimport { AccordionItemPropsProvider } from './use-accordion-item-props-context.js';\nconst AccordionItem = forwardRef((props, ref) => {\n  const [itemProps, localProps] = splitItemProps(props);\n  const accordion = useAccordionContext();\n  const renderStrategy = useRenderStrategyPropsContext();\n  const mergedProps = mergeProps(accordion.getItemProps(itemProps), localProps);\n  const item = accordion.getItemState(itemProps);\n  const itemContentProps = accordion.getItemContentProps(itemProps);\n  return /* @__PURE__ */jsx(AccordionItemPropsProvider, {\n    value: itemProps,\n    children: /* @__PURE__ */jsx(AccordionItemProvider, {\n      value: item,\n      children: /* @__PURE__ */jsx(CollapsibleRoot, {\n        ref,\n        open: item.expanded,\n        ids: {\n          content: itemContentProps.id\n        },\n        ...renderStrategy,\n        ...mergedProps\n      })\n    })\n  });\n});\nAccordionItem.displayName = \"AccordionItem\";\nexport { AccordionItem };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}