{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { useCallback } from 'react';\nimport { useEffectOnce } from '../../utils/use-effect-once.js';\nimport { splitPresenceProps } from '../presence/split-presence-props.js';\nimport { usePresence } from '../presence/use-presence.js';\nimport { PresenceProvider } from '../presence/use-presence-context.js';\nimport { useMenuContext, MenuProvider } from './use-menu-context.js';\nimport { useMenuMachineContext, MenuMachineProvider } from './use-menu-machine-context.js';\nimport { MenuTriggerItemProvider } from './use-menu-trigger-item-context.js';\nconst MenuRootProvider = props => {\n  const parentApi = useMenuContext();\n  const parentMachine = useMenuMachineContext();\n  const [presenceProps, {\n    value: menu,\n    children\n  }] = splitPresenceProps(props);\n  const {\n    api,\n    machine\n  } = menu;\n  const presence = usePresence(mergeProps({\n    present: api.open\n  }, presenceProps));\n  useEffectOnce(() => {\n    if (!parentMachine) return;\n    if (!parentApi) return;\n    parentApi.setChild(machine);\n    api.setParent(parentMachine);\n  });\n  const triggerItemContext = useCallback(() => parentApi?.getTriggerItemProps(api), [api, parentApi]);\n  return /* @__PURE__ */jsx(MenuTriggerItemProvider, {\n    value: triggerItemContext,\n    children: /* @__PURE__ */jsx(MenuMachineProvider, {\n      value: machine,\n      children: /* @__PURE__ */jsx(MenuProvider, {\n        value: api,\n        children: /* @__PURE__ */jsx(PresenceProvider, {\n          value: presence,\n          children\n        })\n      })\n    })\n  });\n};\nexport { MenuRootProvider };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}