{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { splitRenderStrategyProps, RenderStrategyPropsProvider } from '../../utils/render-strategy.js';\nimport { ark } from '../factory.js';\nimport { useTabs } from './use-tabs.js';\nimport { TabsProvider } from './use-tabs-context.js';\nconst TabsRoot = forwardRef((props, ref) => {\n  const [renderStrategyProps, tabsProps] = splitRenderStrategyProps(props);\n  const [useTabsProps, localprops] = createSplitProps()(tabsProps, [\"activationMode\", \"composite\", \"defaultValue\", \"deselectable\", \"id\", \"ids\", \"loopFocus\", \"navigate\", \"onFocusChange\", \"onValueChange\", \"orientation\", \"translations\", \"value\"]);\n  const tabs = useTabs(useTabsProps);\n  const mergedProps = mergeProps(tabs.getRootProps(), localprops);\n  return /* @__PURE__ */jsx(TabsProvider, {\n    value: tabs,\n    children: /* @__PURE__ */jsx(RenderStrategyPropsProvider, {\n      value: renderStrategyProps,\n      children: /* @__PURE__ */jsx(ark.div, {\n        ...mergedProps,\n        ref\n      })\n    })\n  });\n});\nTabsRoot.displayName = \"TabsRoot\";\nexport { TabsRoot };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}