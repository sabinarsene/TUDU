{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\Tudu-app\\\\TUDU\\\\frontend\\\\src\\\\components\\\\Chat\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ... existing imports ...\n\nexport function Chat({\n  receiverId,\n  receiverName\n}) {\n  _s();\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadError, setUploadError] = useState(null);\n  const uploadManager = useRef(new UploadStateManager());\n  const currentUpload = useRef(null);\n  const handleFileUpload = async file => {\n    const fileId = `${file.name}-${Date.now()}`;\n    currentUpload.current = fileId;\n    try {\n      setIsUploading(true);\n      setUploadError(null);\n      const existingState = uploadManager.current.getUploadState(fileId);\n      let uploadedChunks = [];\n      if (existingState) {\n        uploadedChunks = existingState.uploadedChunks;\n        setUploadProgress(Math.round(uploadedChunks.length / existingState.totalChunks * 100));\n      }\n      const upload = async () => {\n        const chunks = await ChunkedFileService.uploadChunks(file, fileId, uploadedChunks, progress => {\n          if (currentUpload.current === fileId) {\n            setUploadProgress(progress);\n          }\n        });\n        const {\n          encryptedData,\n          metadata\n        } = await SecureFileService.encryptFile(file, encryptionService.getCurrentKey());\n        const messageData = {\n          encryptedData,\n          metadata,\n          chunks,\n          receiverId,\n          type: 'file'\n        };\n        const response = await axios.post(`${process.env.REACT_APP_API_URL}/messages/attachment`, messageData);\n        socket.emit('send_message', {\n          ...response.data,\n          receiverId,\n          type: 'file'\n        });\n        uploadManager.current.clearUploadState(fileId);\n        return response;\n      };\n      const response = await retry(upload, {\n        retries: 3,\n        onRetry: (error, attempt) => {\n          console.log(`Retrying upload (${attempt}/3)...`);\n          setUploadError(`Upload failed. Retrying... (${attempt}/3)`);\n        }\n      });\n      if (currentUpload.current === fileId) {\n        setIsUploading(false);\n        setUploadProgress(0);\n        setUploadError(null);\n        setSelectedFile(null);\n      }\n      return response;\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      if (currentUpload.current === fileId) {\n        setUploadError('Upload failed. Click to retry.');\n        setIsUploading(false);\n      }\n      throw error;\n    }\n  };\n  const retryUpload = () => {\n    if (selectedFile && uploadError) {\n      handleFileUpload(selectedFile);\n    }\n  };\n  useEffect(() => {\n    return () => {\n      currentUpload.current = null;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    w: \"100%\",\n    h: \"500px\",\n    borderWidth: \"1px\",\n    borderRadius: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      h: \"100%\",\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        p: 2,\n        borderBottomWidth: \"1px\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: \"bold\",\n          children: receiverName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          ml: 2,\n          w: 2,\n          h: 2,\n          borderRadius: \"full\",\n          bg: receiverStatus === 'online' ? 'green.500' : 'gray.400'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        p: 4,\n        w: \"100%\",\n        direction: \"column\",\n        children: [isUploading && /*#__PURE__*/_jsxDEV(Box, {\n          mb: 4,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"sm\",\n            mb: 2,\n            children: uploadError || `Uploading... ${uploadProgress}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Progress, {\n            value: uploadProgress,\n            size: \"sm\",\n            colorScheme: uploadError ? \"red\" : \"blue\",\n            borderRadius: \"full\",\n            cursor: uploadError ? \"pointer\" : \"default\",\n            onClick: uploadError ? retryUpload : undefined\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            onChange: e => {\n              const file = e.target.files[0];\n              if (file) {\n                handleFileUpload(file);\n              }\n            },\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            icon: /*#__PURE__*/_jsxDEV(AttachmentIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this),\n            onClick: () => fileInputRef.current.click(),\n            isDisabled: isUploading && !uploadError,\n            mr: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"jl6kf/BHVt/cx9X05mKh1Hlunic=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["Chat","receiverId","receiverName","_s","uploadProgress","setUploadProgress","useState","isUploading","setIsUploading","uploadError","setUploadError","uploadManager","useRef","UploadStateManager","currentUpload","handleFileUpload","file","fileId","name","Date","now","current","existingState","getUploadState","uploadedChunks","Math","round","length","totalChunks","upload","chunks","ChunkedFileService","uploadChunks","progress","encryptedData","metadata","SecureFileService","encryptFile","encryptionService","getCurrentKey","messageData","type","response","axios","post","process","env","REACT_APP_API_URL","socket","emit","data","clearUploadState","retry","retries","onRetry","error","attempt","console","log","setSelectedFile","retryUpload","selectedFile","useEffect","_jsxDEV","Box","w","h","borderWidth","borderRadius","children","VStack","spacing","Flex","p","borderBottomWidth","alignItems","Text","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","ml","bg","receiverStatus","direction","mb","fontSize","Progress","value","size","colorScheme","cursor","onClick","undefined","ref","fileInputRef","onChange","e","target","files","style","display","IconButton","icon","AttachmentIcon","click","isDisabled","mr","_c","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/Tudu-app/TUDU/frontend/src/components/Chat/Chat.jsx"],"sourcesContent":["// ... existing imports ...\r\n\r\nexport function Chat({ receiverId, receiverName }) {\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [uploadError, setUploadError] = useState(null);\r\n  const uploadManager = useRef(new UploadStateManager());\r\n  const currentUpload = useRef(null);\r\n\r\n  const handleFileUpload = async (file) => {\r\n    const fileId = `${file.name}-${Date.now()}`;\r\n    currentUpload.current = fileId;\r\n\r\n    try {\r\n      setIsUploading(true);\r\n      setUploadError(null);\r\n\r\n      const existingState = uploadManager.current.getUploadState(fileId);\r\n      let uploadedChunks = [];\r\n\r\n      if (existingState) {\r\n        uploadedChunks = existingState.uploadedChunks;\r\n        setUploadProgress(Math.round((uploadedChunks.length / existingState.totalChunks) * 100));\r\n      }\r\n\r\n      const upload = async () => {\r\n        const chunks = await ChunkedFileService.uploadChunks(\r\n          file,\r\n          fileId,\r\n          uploadedChunks,\r\n          (progress) => {\r\n            if (currentUpload.current === fileId) {\r\n              setUploadProgress(progress);\r\n            }\r\n          }\r\n        );\r\n\r\n        const { encryptedData, metadata } = await SecureFileService.encryptFile(\r\n          file,\r\n          encryptionService.getCurrentKey()\r\n        );\r\n\r\n        const messageData = {\r\n          encryptedData,\r\n          metadata,\r\n          chunks,\r\n          receiverId,\r\n          type: 'file'\r\n        };\r\n\r\n        const response = await axios.post(\r\n          `${process.env.REACT_APP_API_URL}/messages/attachment`,\r\n          messageData\r\n        );\r\n\r\n        socket.emit('send_message', {\r\n          ...response.data,\r\n          receiverId,\r\n          type: 'file'\r\n        });\r\n\r\n        uploadManager.current.clearUploadState(fileId);\r\n        return response;\r\n      };\r\n\r\n      const response = await retry(upload, {\r\n        retries: 3,\r\n        onRetry: (error, attempt) => {\r\n          console.log(`Retrying upload (${attempt}/3)...`);\r\n          setUploadError(`Upload failed. Retrying... (${attempt}/3)`);\r\n        }\r\n      });\r\n\r\n      if (currentUpload.current === fileId) {\r\n        setIsUploading(false);\r\n        setUploadProgress(0);\r\n        setUploadError(null);\r\n        setSelectedFile(null);\r\n      }\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      if (currentUpload.current === fileId) {\r\n        setUploadError('Upload failed. Click to retry.');\r\n        setIsUploading(false);\r\n      }\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const retryUpload = () => {\r\n    if (selectedFile && uploadError) {\r\n      handleFileUpload(selectedFile);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      currentUpload.current = null;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Box w=\"100%\" h=\"500px\" borderWidth=\"1px\" borderRadius=\"lg\">\r\n      <VStack h=\"100%\" spacing={4}>\r\n        <Flex p={2} borderBottomWidth=\"1px\" alignItems=\"center\">\r\n          <Text fontWeight=\"bold\">{receiverName}</Text>\r\n          <Box ml={2} w={2} h={2} borderRadius=\"full\" bg={receiverStatus === 'online' ? 'green.500' : 'gray.400'} />\r\n        </Flex>\r\n        {/* ... existing chat UI ... */}\r\n        <Flex p={4} w=\"100%\" direction=\"column\">\r\n          {isUploading && (\r\n            <Box mb={4}>\r\n              <Text fontSize=\"sm\" mb={2}>\r\n                {uploadError || `Uploading... ${uploadProgress}%`}\r\n              </Text>\r\n              <Progress\r\n                value={uploadProgress}\r\n                size=\"sm\"\r\n                colorScheme={uploadError ? \"red\" : \"blue\"}\r\n                borderRadius=\"full\"\r\n                cursor={uploadError ? \"pointer\" : \"default\"}\r\n                onClick={uploadError ? retryUpload : undefined}\r\n              />\r\n            </Box>\r\n          )}\r\n          <Flex>\r\n            <input\r\n              type=\"file\"\r\n              ref={fileInputRef}\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                if (file) {\r\n                  handleFileUpload(file);\r\n                }\r\n              }}\r\n              style={{ display: 'none' }}\r\n            />\r\n            <IconButton\r\n              icon={<AttachmentIcon />}\r\n              onClick={() => fileInputRef.current.click()}\r\n              isDisabled={isUploading && !uploadError}\r\n              mr={2}\r\n            />\r\n            {/* ... existing message input ... */}\r\n          </Flex>\r\n        </Flex>\r\n      </VStack>\r\n    </Box>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}