{"ast":null,"code":"// src/index.ts\nvar ID = \"__live-region__\";\nfunction createLiveRegion(opts = {}) {\n  const {\n    level = \"polite\",\n    document: doc = document,\n    root,\n    delay: _delay = 0\n  } = opts;\n  const win = doc.defaultView ?? window;\n  const parent = root ?? doc.body;\n  function announce(message, delay) {\n    const oldRegion = doc.getElementById(ID);\n    oldRegion?.remove();\n    delay = delay ?? _delay;\n    const region = doc.createElement(\"span\");\n    region.id = ID;\n    region.dataset.liveAnnouncer = \"true\";\n    const role = level !== \"assertive\" ? \"status\" : \"alert\";\n    region.setAttribute(\"aria-live\", level);\n    region.setAttribute(\"role\", role);\n    Object.assign(region.style, {\n      border: \"0\",\n      clip: \"rect(0 0 0 0)\",\n      height: \"1px\",\n      margin: \"-1px\",\n      overflow: \"hidden\",\n      padding: \"0\",\n      position: \"absolute\",\n      width: \"1px\",\n      whiteSpace: \"nowrap\",\n      wordWrap: \"normal\"\n    });\n    parent.appendChild(region);\n    win.setTimeout(() => {\n      region.textContent = message;\n    }, delay);\n  }\n  function destroy() {\n    const oldRegion = doc.getElementById(ID);\n    oldRegion?.remove();\n  }\n  return {\n    announce,\n    destroy,\n    toJSON() {\n      return ID;\n    }\n  };\n}\nexport { createLiveRegion };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}