{"ast":null,"code":"// src/track-size.ts\nfunction trackElementSize(element, callback) {\n  if (!element) {\n    callback(void 0);\n    return;\n  }\n  callback({\n    width: element.offsetWidth,\n    height: element.offsetHeight\n  });\n  const win = element.ownerDocument.defaultView ?? window;\n  const observer = new win.ResizeObserver(entries => {\n    if (!Array.isArray(entries) || !entries.length) return;\n    const [entry] = entries;\n    let width;\n    let height;\n    if (\"borderBoxSize\" in entry) {\n      const borderSizeEntry = entry[\"borderBoxSize\"];\n      const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n      width = borderSize[\"inlineSize\"];\n      height = borderSize[\"blockSize\"];\n    } else {\n      width = element.offsetWidth;\n      height = element.offsetHeight;\n    }\n    callback({\n      width,\n      height\n    });\n  });\n  observer.observe(element, {\n    box: \"border-box\"\n  });\n  return () => observer.unobserve(element);\n}\n\n// src/track-sizes.ts\nfunction trackElementsSize(options) {\n  const {\n    getNodes,\n    observeMutation = true,\n    callback\n  } = options;\n  const cleanups = [];\n  let firstNode = null;\n  function trigger() {\n    const elements = getNodes();\n    firstNode = elements[0];\n    const fns = elements.map((element, index) => trackElementSize(element, size => {\n      callback(size, index);\n    }));\n    cleanups.push(...fns);\n  }\n  trigger();\n  if (observeMutation) {\n    const fn = trackMutation(firstNode, trigger);\n    cleanups.push(fn);\n  }\n  return () => {\n    cleanups.forEach(cleanup => {\n      cleanup?.();\n    });\n  };\n}\nfunction trackMutation(el, cb) {\n  if (!el || !el.parentElement) return;\n  const win = el.ownerDocument?.defaultView ?? window;\n  const observer = new win.MutationObserver(() => {\n    cb();\n  });\n  observer.observe(el.parentElement, {\n    childList: true\n  });\n  return () => {\n    observer.disconnect();\n  };\n}\nexport { trackElementSize, trackElementsSize };\n//# sourceMappingURL=index.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}