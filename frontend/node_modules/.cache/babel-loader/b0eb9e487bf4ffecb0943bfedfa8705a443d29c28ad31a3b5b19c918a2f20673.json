{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useFileUpload } from './use-file-upload.js';\nimport { FileUploadProvider } from './use-file-upload-context.js';\nconst FileUploadRoot = forwardRef((props, ref) => {\n  const [useFileUploadProps, localProps] = createSplitProps()(props, [\"accept\", \"allowDrop\", \"capture\", \"directory\", \"disabled\", \"id\", \"ids\", \"invalid\", \"locale\", \"maxFiles\", \"maxFileSize\", \"minFileSize\", \"name\", \"onFileAccept\", \"onFileChange\", \"onFileReject\", \"preventDocumentDrop\", \"required\", \"translations\", \"validate\"]);\n  const fileUpload = useFileUpload(useFileUploadProps);\n  const mergedProps = mergeProps(fileUpload.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(FileUploadProvider, {\n    value: fileUpload,\n    children: /* @__PURE__ */jsx(ark.div, {\n      ...mergedProps,\n      ref\n    })\n  });\n});\nFileUploadRoot.displayName = \"FileUploadRoot\";\nexport { FileUploadRoot };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}