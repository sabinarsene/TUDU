{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\Tudu-app\\\\TUDU\\\\frontend\\\\src\\\\contexts\\\\SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport function SocketProvider({\n  children\n}) {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.log('[Socket] No authentication token found');\n      return;\n    }\n    const socket = io(process.env.REACT_APP_API_URL, {\n      path: '/socket.io',\n      namespace: '/chat',\n      transports: ['websocket', 'polling'],\n      cors: {\n        origin: process.env.REACT_APP_API_URL,\n        methods: ['GET', 'POST']\n      },\n      auth: {\n        token\n      },\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      autoConnect: true\n    });\n    socket.on('connect', () => {\n      console.log('[Socket] Connected to chat namespace');\n      setConnected(true);\n    });\n    socket.on('connect_error', error => {\n      console.error('[Socket] Connection error:', error.message);\n      setConnected(false);\n    });\n    socket.on('disconnect', reason => {\n      console.log('[Socket] Disconnected:', reason);\n      setConnected(false);\n    });\n    setSocket(socket);\n    return () => {\n      if (socket) {\n        console.log('[Socket] Cleaning up connection');\n        socket.removeAllListeners();\n        socket.close();\n      }\n    };\n  }, [user]); // Re-initialize socket when user changes\n\n  const value = {\n    socket,\n    connected,\n    sendMessage: (receiverId, message) => {\n      if (socket) {\n        socket.emit('send_message', {\n          receiverId,\n          message,\n          senderId: user === null || user === void 0 ? void 0 : user.id\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(SocketProvider, \"OKPP+mnOeJfwAAivly0/xMlqf4U=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nexport const useSocket = () => {\n  _s2();\n  return useContext(SocketContext);\n};\n_s2(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","jsxDEV","_jsxDEV","SocketContext","SocketProvider","children","_s","socket","setSocket","connected","setConnected","user","token","localStorage","getItem","console","log","process","env","REACT_APP_API_URL","path","namespace","transports","cors","origin","methods","auth","reconnection","reconnectionAttempts","reconnectionDelay","autoConnect","on","error","message","reason","removeAllListeners","close","value","sendMessage","receiverId","emit","senderId","id","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSocket","_s2","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/Tudu-app/TUDU/frontend/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst SocketContext = createContext();\r\n\r\nexport function SocketProvider({ children }) {\r\n  const [socket, setSocket] = useState(null);\r\n  const [connected, setConnected] = useState(false);\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      console.log('[Socket] No authentication token found');\r\n      return;\r\n    }\r\n\r\n    const socket = io(process.env.REACT_APP_API_URL, {\r\n      path: '/socket.io',\r\n      namespace: '/chat',\r\n      transports: ['websocket', 'polling'],\r\n      cors: {\r\n        origin: process.env.REACT_APP_API_URL,\r\n        methods: ['GET', 'POST']\r\n      },\r\n      auth: {\r\n        token\r\n      },\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n      autoConnect: true\r\n    });\r\n    \r\n    socket.on('connect', () => {\r\n      console.log('[Socket] Connected to chat namespace');\r\n      setConnected(true);\r\n    });\r\n\r\n    socket.on('connect_error', (error) => {\r\n      console.error('[Socket] Connection error:', error.message);\r\n      setConnected(false);\r\n    });\r\n\r\n    socket.on('disconnect', (reason) => {\r\n      console.log('[Socket] Disconnected:', reason);\r\n      setConnected(false);\r\n    });\r\n\r\n    setSocket(socket);\r\n\r\n    return () => {\r\n      if (socket) {\r\n        console.log('[Socket] Cleaning up connection');\r\n        socket.removeAllListeners();\r\n        socket.close();\r\n      }\r\n    };\r\n  }, [user]); // Re-initialize socket when user changes\r\n\r\n  const value = {\r\n    socket,\r\n    connected,\r\n    sendMessage: (receiverId, message) => {\r\n      if (socket) {\r\n        socket.emit('send_message', {\r\n          receiverId,\r\n          message,\r\n          senderId: user?.id\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useSocket = () => useContext(SocketContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}