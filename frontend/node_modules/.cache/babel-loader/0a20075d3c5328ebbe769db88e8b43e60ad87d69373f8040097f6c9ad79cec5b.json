{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { useState, useCallback } from 'react';\nimport { useCallbackRef } from './use-callback-ref.js';\nfunction useDisclosure(props = {}) {\n  const handleOpen = useCallbackRef(props.onOpen);\n  const handleClose = useCallbackRef(props.onClose);\n  const [openState, setOpen] = useState(props.defaultOpen || false);\n  const open = props.open !== void 0 ? props.open : openState;\n  const controlled = props.open !== void 0;\n  const onClose = useCallback(() => {\n    if (!controlled) setOpen(false);\n    handleClose?.();\n  }, [controlled, handleClose]);\n  const onOpen = useCallback(() => {\n    if (!controlled) setOpen(true);\n    handleOpen?.();\n  }, [controlled, handleOpen]);\n  const onToggle = useCallback(() => {\n    if (open) {\n      onClose();\n    } else {\n      onOpen();\n    }\n  }, [open, onOpen, onClose]);\n  return {\n    open,\n    onOpen,\n    onClose,\n    onToggle,\n    setOpen\n  };\n}\nexport { useDisclosure };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}