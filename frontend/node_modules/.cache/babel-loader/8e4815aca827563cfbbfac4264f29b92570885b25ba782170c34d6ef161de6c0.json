{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useMemo } from 'react';\nimport { ButtonGroupProvider } from './button-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst attachedStyles = {\n  horizontal: {\n    \"> *:first-of-type:not(:last-of-type)\": {\n      borderEndRadius: 0\n    },\n    \"> *:not(:first-of-type):not(:last-of-type)\": {\n      borderRadius: 0\n    },\n    \"> *:not(:first-of-type):last-of-type\": {\n      borderStartRadius: 0\n    }\n  },\n  vertical: {\n    \"> *:first-of-type:not(:last-of-type)\": {\n      borderBottomRadius: 0\n    },\n    \"> *:not(:first-of-type):not(:last-of-type)\": {\n      borderRadius: 0\n    },\n    \"> *:not(:first-of-type):last-of-type\": {\n      borderTopRadius: 0\n    }\n  }\n};\nconst gapStyles = {\n  horizontal: spacing => ({\n    \"& > *:not(style) ~ *:not(style)\": {\n      marginStart: spacing\n    }\n  }),\n  vertical: spacing => ({\n    \"& > *:not(style) ~ *:not(style)\": {\n      marginTop: spacing\n    }\n  })\n};\nconst ButtonGroup = forwardRef(function ButtonGroup2(props, ref) {\n  const {\n    size,\n    colorScheme,\n    variant,\n    className,\n    spacing = \"0.5rem\",\n    isAttached,\n    isDisabled,\n    orientation = \"horizontal\",\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__group\", className);\n  const context = useMemo(() => ({\n    size,\n    colorScheme,\n    variant,\n    isDisabled\n  }), [size, colorScheme, variant, isDisabled]);\n  let groupStyles = {\n    display: \"inline-flex\",\n    ...(isAttached ? attachedStyles[orientation] : gapStyles[orientation](spacing))\n  };\n  const isVertical = orientation === \"vertical\";\n  return /* @__PURE__ */jsx(ButtonGroupProvider, {\n    value: context,\n    children: /* @__PURE__ */jsx(chakra.div, {\n      ref,\n      role: \"group\",\n      __css: groupStyles,\n      className: _className,\n      \"data-attached\": isAttached ? \"\" : void 0,\n      \"data-orientation\": orientation,\n      flexDir: isVertical ? \"column\" : void 0,\n      ...rest\n    })\n  });\n});\nButtonGroup.displayName = \"ButtonGroup\";\nexport { ButtonGroup };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}