{"ast":null,"code":"'use client';\n\nfunction getIds(id) {\n  return {\n    root: `slider-root-${id}`,\n    getThumb: i => `slider-thumb-${id}-${i}`,\n    getInput: i => `slider-input-${id}-${i}`,\n    track: `slider-track-${id}`,\n    innerTrack: `slider-filled-track-${id}`,\n    getMarker: i => `slider-marker-${id}-${i}`,\n    output: `slider-output-${id}`\n  };\n}\nfunction orient(options) {\n  const {\n    orientation,\n    vertical,\n    horizontal\n  } = options;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\nfunction getStyles(options) {\n  const {\n    orientation,\n    thumbPercents,\n    isReversed\n  } = options;\n  const getThumbStyle = i => {\n    return {\n      position: \"absolute\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n      touchAction: \"none\",\n      ...orient({\n        orientation,\n        vertical: {\n          bottom: `calc(${thumbPercents[i]}% - var(--slider-thumb-size) / 2)`\n        },\n        horizontal: {\n          left: `calc(${thumbPercents[i]}% - var(--slider-thumb-size) / 2)`\n        }\n      })\n    };\n  };\n  const rootStyle = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0\n  };\n  const trackStyle = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\"\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\"\n      }\n    })\n  };\n  const isSingleThumb = thumbPercents.length === 1;\n  const fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]];\n  const range = isSingleThumb ? fallback : thumbPercents;\n  let start = range[0];\n  if (!isSingleThumb && isReversed) {\n    start = 100 - start;\n  }\n  const percent = Math.abs(range[range.length - 1] - range[0]);\n  const innerTrackStyle = {\n    ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed ? {\n        height: `${percent}%`,\n        top: `${start}%`\n      } : {\n        height: `${percent}%`,\n        bottom: `${start}%`\n      },\n      horizontal: isReversed ? {\n        width: `${percent}%`,\n        right: `${start}%`\n      } : {\n        width: `${percent}%`,\n        left: `${start}%`\n      }\n    })\n  };\n  return {\n    trackStyle,\n    innerTrackStyle,\n    rootStyle,\n    getThumbStyle\n  };\n}\nfunction getIsReversed(options) {\n  const {\n    isReversed,\n    direction,\n    orientation\n  } = options;\n  if (direction === \"ltr\" || orientation === \"vertical\") {\n    return isReversed;\n  }\n  return !isReversed;\n}\nexport { getIds, getIsReversed, getStyles, orient };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}