{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\Tudu-app\\\\TUDU\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setAuthToken } from \"../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n\n  // Încarcă datele utilizatorului din localStorage la inițializare\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    if (storedUser && token) {\n      try {\n        const userData = JSON.parse(storedUser);\n        // Procesăm datele de tip dată\n        if (userData.memberSince) {\n          userData.memberSince = new Date(userData.memberSince).toISOString();\n        }\n        // Adăugăm token-ul în obiectul user\n        userData.token = token;\n        setUser(userData);\n        // Setăm token-ul în header-ele axios\n        setAuthToken(token);\n      } catch (error) {\n        console.error('Error parsing user data from localStorage:', error);\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n      }\n    }\n  }, []);\n  const loginUser = userData => {\n    console.log('Actualizare date utilizator:', userData);\n    // Procesăm datele de tip dată înainte de salvare\n    const processedData = {\n      ...userData,\n      memberSince: userData.memberSince ? new Date(userData.memberSince).toISOString() : null\n    };\n\n    // Ne asigurăm că avem token-ul în userData\n    if (userData.token) {\n      // Salvăm token-ul separat în localStorage\n      localStorage.setItem('token', userData.token);\n      // Setăm token-ul în header-ele axios\n      setAuthToken(userData.token);\n    }\n    setUser(processedData);\n    // Salvează datele utilizatorului în localStorage\n    localStorage.setItem('user', JSON.stringify(processedData));\n  };\n  const updateUserProfile = profileData => {\n    if (!user) return;\n    const updatedUser = {\n      ...user,\n      ...profileData,\n      memberSince: profileData.memberSince ? new Date(profileData.memberSince).toISOString() : user.memberSince\n    };\n    console.log('Actualizare profil utilizator:', updatedUser);\n    setUser(updatedUser);\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n  };\n  const logoutUser = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    // Ștergem token-ul din header-ele axios\n    setAuthToken(null);\n    navigate('/login');\n  };\n  const value = {\n    user,\n    loginUser,\n    updateUserProfile,\n    logoutUser,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useNavigate","setAuthToken","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","navigate","storedUser","localStorage","getItem","token","userData","JSON","parse","memberSince","Date","toISOString","error","console","removeItem","loginUser","log","processedData","setItem","stringify","updateUserProfile","profileData","updatedUser","logoutUser","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/Tudu-app/TUDU/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { setAuthToken } from \"../services/authService\"\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null)\r\n  const navigate = useNavigate()\r\n\r\n  // Încarcă datele utilizatorului din localStorage la inițializare\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user')\r\n    const token = localStorage.getItem('token')\r\n    \r\n    if (storedUser && token) {\r\n      try {\r\n        const userData = JSON.parse(storedUser)\r\n        // Procesăm datele de tip dată\r\n        if (userData.memberSince) {\r\n          userData.memberSince = new Date(userData.memberSince).toISOString()\r\n        }\r\n        // Adăugăm token-ul în obiectul user\r\n        userData.token = token\r\n        setUser(userData)\r\n        // Setăm token-ul în header-ele axios\r\n        setAuthToken(token)\r\n      } catch (error) {\r\n        console.error('Error parsing user data from localStorage:', error)\r\n        localStorage.removeItem('user')\r\n        localStorage.removeItem('token')\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const loginUser = (userData) => {\r\n    console.log('Actualizare date utilizator:', userData);\r\n    // Procesăm datele de tip dată înainte de salvare\r\n    const processedData = {\r\n      ...userData,\r\n      memberSince: userData.memberSince ? new Date(userData.memberSince).toISOString() : null\r\n    };\r\n    \r\n    // Ne asigurăm că avem token-ul în userData\r\n    if (userData.token) {\r\n      // Salvăm token-ul separat în localStorage\r\n      localStorage.setItem('token', userData.token)\r\n      // Setăm token-ul în header-ele axios\r\n      setAuthToken(userData.token)\r\n    }\r\n    setUser(processedData)\r\n    // Salvează datele utilizatorului în localStorage\r\n    localStorage.setItem('user', JSON.stringify(processedData))\r\n  }\r\n\r\n  const updateUserProfile = (profileData) => {\r\n    if (!user) return;\r\n    \r\n    const updatedUser = { \r\n      ...user, \r\n      ...profileData,\r\n      memberSince: profileData.memberSince ? new Date(profileData.memberSince).toISOString() : user.memberSince\r\n    };\r\n    console.log('Actualizare profil utilizator:', updatedUser);\r\n    setUser(updatedUser);\r\n    localStorage.setItem('user', JSON.stringify(updatedUser));\r\n  }\r\n\r\n  const logoutUser = () => {\r\n    setUser(null)\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('user')\r\n    // Ștergem token-ul din header-ele axios\r\n    setAuthToken(null)\r\n    navigate('/login')\r\n  }\r\n\r\n  const value = {\r\n    user,\r\n    loginUser,\r\n    updateUserProfile,\r\n    logoutUser,\r\n    isAuthenticated: !!user\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}