{"ast":null,"code":"import { toArray } from './array';\nexport var tabSort = function (a, b) {\n  var aTab = Math.max(0, a.tabIndex);\n  var bTab = Math.max(0, b.tabIndex);\n  var tabDiff = aTab - bTab;\n  var indexDiff = a.index - b.index;\n  if (tabDiff) {\n    if (!aTab) {\n      return 1;\n    }\n    if (!bTab) {\n      return -1;\n    }\n  }\n  return tabDiff || indexDiff;\n};\nvar getTabIndex = function (node) {\n  if (node.tabIndex < 0) {\n    // all \"focusable\" elements are already preselected\n    // but some might have implicit negative tabIndex\n    // return 0 for <audio without tabIndex attribute - it is \"tabbable\"\n    if (!node.hasAttribute('tabindex')) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\nexport var orderByTabIndex = function (nodes, filterNegative, keepGuards) {\n  return toArray(nodes).map(function (node, index) {\n    var tabIndex = getTabIndex(node);\n    return {\n      node: node,\n      index: index,\n      tabIndex: keepGuards && tabIndex === -1 ? (node.dataset || {}).focusGuard ? 0 : -1 : tabIndex\n    };\n  }).filter(function (data) {\n    return !filterNegative || data.tabIndex >= 0;\n  }).sort(tabSort);\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}