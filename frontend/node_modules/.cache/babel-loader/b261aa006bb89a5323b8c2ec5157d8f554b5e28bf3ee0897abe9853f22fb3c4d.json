{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\TUDU-app\\\\TUDU\\\\frontend\\\\src\\\\pages\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSocket } from '../contexts/SocketContext';\nimport { getConversations, markAllMessagesRead } from '../services/messageApi';\nimport Chat from '../components/Chat';\nimport { Avatar, Badge, Box, HStack, VStack, Text, Input, InputGroup, InputLeftElement } from '@chakra-ui/react';\nimport { Search, ArrowLeft } from 'lucide-react';\nimport './ChatPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  var _conversations$find, _conversations$find2;\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    user\n  } = useAuth();\n  const {\n    socket,\n    connected\n  } = useSocket();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [markingAsRead, setMarkingAsRead] = useState(false);\n\n  // Load conversations\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        var _location$state;\n        setLoading(true);\n        const data = await getConversations();\n\n        // Verificăm dacă avem date valide\n        if (!data || !Array.isArray(data)) {\n          setConversations([]);\n          setError('Nu s-au putut încărca conversațiile');\n          setLoading(false);\n          return;\n        }\n\n        // Nu mai filtrăm conversațiile, deoarece backend-ul ar trebui să returneze doar conversațiile utilizatorului curent\n        setConversations(data);\n        setError(null);\n\n        // Check if we have a receiverId in the location state (from profile page)\n        const receiverId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.receiverId;\n\n        // If we have a receiverId in state, navigate to that chat\n        if (receiverId && !userId) {\n          navigate(`/chat/${receiverId}`);\n          return;\n        }\n      } catch (err) {\n        console.error('Error fetching chats:', err);\n        setError('Failed to load conversations');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchChats();\n  }, [userId, navigate, user.id, location.state]);\n\n  // Mark messages as read when a user opens a conversation\n  useEffect(() => {\n    const markMessagesAsRead = async () => {\n      if (!userId || markingAsRead) return;\n      try {\n        setMarkingAsRead(true);\n        // Mark all messages from this sender as read\n        await markAllMessagesRead(userId);\n\n        // Update the conversations list to reflect the read status\n        const updatedConversations = await getConversations();\n        setConversations(updatedConversations);\n      } catch (err) {\n        console.error('Error marking messages as read:', err);\n      } finally {\n        setMarkingAsRead(false);\n      }\n    };\n    markMessagesAsRead();\n  }, [userId]);\n\n  // Listen for new messages to update conversations list\n  useEffect(() => {\n    if (!socket || !connected) return;\n    const handleMessageReceived = async message => {\n      // If this message is relevant to the current user (sender or receiver)\n      if (message.sender_id === user.id || message.receiver_id === user.id) {\n        // If the message is from the current open conversation, mark it as read immediately\n        if (message.sender_id === parseInt(userId) && message.receiver_id === user.id) {\n          try {\n            await markAllMessagesRead(userId);\n          } catch (err) {\n            console.error('Error marking message as read:', err);\n          }\n        }\n\n        // Refresh the conversations list\n        try {\n          const data = await getConversations();\n          if (data && Array.isArray(data)) {\n            setConversations(data);\n          }\n        } catch (err) {\n          console.error('Error refreshing conversations after new message:', err);\n        }\n      }\n    };\n    socket.on('message_received', handleMessageReceived);\n    return () => {\n      socket.off('message_received', handleMessageReceived);\n    };\n  }, [socket, connected, user.id, userId]);\n\n  // Filter conversations by search query\n  const filteredConversations = searchQuery.trim() ? conversations.filter(conv => conv.user.name.toLowerCase().includes(searchQuery.toLowerCase())) : conversations;\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      className: \"chat-page-loading\",\n      children: \"Loading chats...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      className: \"chat-page-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"chat-page\",\n    h: \"100vh\",\n    bg: \"gray.50\",\n    children: userId ?\n    /*#__PURE__*/\n    // Chat view with conversation open\n    _jsxDEV(Box, {\n      h: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        p: 4,\n        bg: \"white\",\n        borderBottomWidth: \"1px\",\n        borderColor: \"gray.200\",\n        position: \"sticky\",\n        top: 0,\n        zIndex: 1,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          as: \"button\",\n          onClick: () => navigate('/chat'),\n          \"aria-label\": \"Back to chat list\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          borderRadius: \"full\",\n          p: 2,\n          _hover: {\n            bg: \"gray.100\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: \"bold\",\n          children: ((_conversations$find = conversations.find(c => c.user.id === parseInt(userId))) === null || _conversations$find === void 0 ? void 0 : _conversations$find.user.name) || 'Chat'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        h: \"calc(100% - 60px)\",\n        children: /*#__PURE__*/_jsxDEV(Chat, {\n          otherUser: (_conversations$find2 = conversations.find(c => c.user.id === parseInt(userId))) === null || _conversations$find2 === void 0 ? void 0 : _conversations$find2.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Conversations list view\n    _jsxDEV(Box, {\n      h: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        p: 4,\n        bg: \"white\",\n        borderBottomWidth: \"1px\",\n        borderColor: \"gray.200\",\n        position: \"sticky\",\n        top: 0,\n        zIndex: 1,\n        children: [/*#__PURE__*/_jsxDEV(HStack, {\n          mb: 4,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            as: \"button\",\n            onClick: () => navigate('/home'),\n            \"aria-label\": \"Back to homepage\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            borderRadius: \"full\",\n            p: 2,\n            _hover: {\n              bg: \"gray.100\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xl\",\n            fontWeight: \"bold\",\n            children: \"Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n            pointerEvents: \"none\",\n            children: /*#__PURE__*/_jsxDEV(Search, {\n              size: 18,\n              color: \"gray.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Search conversations...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            borderRadius: \"full\",\n            bg: \"gray.100\",\n            _focus: {\n              bg: \"white\",\n              borderColor: \"blue.500\",\n              boxShadow: \"0 0 0 1px blue.500\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 0,\n        align: \"stretch\",\n        pb: 4,\n        overflowY: \"auto\",\n        h: \"calc(100% - 110px)\",\n        children: filteredConversations.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n          p: 4,\n          textAlign: \"center\",\n          color: \"gray.500\",\n          children: searchQuery ? /*#__PURE__*/_jsxDEV(Text, {\n            children: [\"No conversations matching \\\"\", searchQuery, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: \"No conversations yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"sm\",\n              opacity: 0.7,\n              children: \"Start a chat from a user's profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this) : filteredConversations.map(conv => /*#__PURE__*/_jsxDEV(Box, {\n          p: 4,\n          bg: \"white\",\n          borderBottomWidth: \"1px\",\n          borderColor: \"gray.100\",\n          cursor: \"pointer\",\n          onClick: () => navigate(`/chat/${conv.user.id}`),\n          _hover: {\n            bg: \"gray.50\"\n          },\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              position: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                size: \"md\",\n                name: conv.user.name // Acest lucru va afișa inițialele când nu există imagine\n                ,\n                src: conv.user.image,\n                bg: \"blue.500\" // Culoarea de fundal pentru avatar când afișează inițiale\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 23\n              }, this), conv.user.isOnline && /*#__PURE__*/_jsxDEV(Badge, {\n                position: \"absolute\",\n                bottom: \"0\",\n                right: \"0\",\n                bg: \"green.400\",\n                borderRadius: \"full\",\n                transform: \"translate(20%, 20%)\",\n                boxSize: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              flex: \"1\",\n              children: [/*#__PURE__*/_jsxDEV(HStack, {\n                justify: \"space-between\",\n                mb: 1,\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontWeight: \"bold\",\n                  children: conv.user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"sm\",\n                  color: \"gray.500\",\n                  children: formatTimestamp(conv.lastMessage.time)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                justify: \"space-between\",\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"sm\",\n                  color: \"gray.600\",\n                  noOfLines: 1,\n                  flex: \"1\",\n                  children: [conv.lastMessage.sender === 'you' && 'You: ', conv.lastMessage.text]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 25\n                }, this), conv.unreadCount > 0 && /*#__PURE__*/_jsxDEV(Badge, {\n                  colorScheme: \"blue\",\n                  borderRadius: \"full\",\n                  px: 2,\n                  children: conv.unreadCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 19\n          }, this)\n        }, conv.user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to format timestamp\n_s(ChatPage, \"p8e+FLmCg6EfrKnpzucp3jT1wo4=\", false, function () {\n  return [useParams, useNavigate, useLocation, useAuth, useSocket];\n});\n_c = ChatPage;\nconst formatTimestamp = timestamp => {\n  const date = new Date(timestamp);\n  const now = new Date();\n  const diff = now - date;\n\n  // If less than 24 hours, show only time\n  if (diff < 24 * 60 * 60 * 1000) {\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n\n  // If less than a week, show day name\n  if (diff < 7 * 24 * 60 * 60 * 1000) {\n    return date.toLocaleDateString([], {\n      weekday: 'short'\n    });\n  }\n\n  // Otherwise show date\n  return date.toLocaleDateString([], {\n    month: 'short',\n    day: 'numeric'\n  });\n};\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","useAuth","useSocket","getConversations","markAllMessagesRead","Chat","Avatar","Badge","Box","HStack","VStack","Text","Input","InputGroup","InputLeftElement","Search","ArrowLeft","jsxDEV","_jsxDEV","ChatPage","_s","_conversations$find","_conversations$find2","userId","navigate","location","user","socket","connected","conversations","setConversations","loading","setLoading","error","setError","searchQuery","setSearchQuery","markingAsRead","setMarkingAsRead","fetchChats","_location$state","data","Array","isArray","receiverId","state","err","console","id","markMessagesAsRead","updatedConversations","handleMessageReceived","message","sender_id","receiver_id","parseInt","on","off","filteredConversations","trim","filter","conv","name","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","h","bg","p","borderBottomWidth","borderColor","position","top","zIndex","as","onClick","display","alignItems","justifyContent","borderRadius","_hover","size","fontWeight","find","c","otherUser","mb","fontSize","pointerEvents","color","placeholder","value","onChange","e","target","_focus","boxShadow","spacing","align","pb","overflowY","length","textAlign","opacity","map","cursor","src","image","isOnline","bottom","right","transform","boxSize","flex","justify","formatTimestamp","lastMessage","time","noOfLines","sender","text","unreadCount","colorScheme","px","_c","timestamp","date","Date","now","diff","toLocaleTimeString","hour","minute","toLocaleDateString","weekday","month","day","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/TUDU-app/TUDU/frontend/src/pages/ChatPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSocket } from '../contexts/SocketContext';\nimport { getConversations, markAllMessagesRead } from '../services/messageApi';\nimport Chat from '../components/Chat';\nimport { Avatar, Badge, Box, HStack, VStack, Text, Input, InputGroup, InputLeftElement } from '@chakra-ui/react';\nimport { Search, ArrowLeft } from 'lucide-react';\nimport './ChatPage.css';\n\nconst ChatPage = () => {\n  const { userId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { user } = useAuth();\n  const { socket, connected } = useSocket();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [markingAsRead, setMarkingAsRead] = useState(false);\n\n  // Load conversations\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        setLoading(true);\n        const data = await getConversations();\n        \n        // Verificăm dacă avem date valide\n        if (!data || !Array.isArray(data)) {\n          setConversations([]);\n          setError('Nu s-au putut încărca conversațiile');\n          setLoading(false);\n          return;\n        }\n        \n        // Nu mai filtrăm conversațiile, deoarece backend-ul ar trebui să returneze doar conversațiile utilizatorului curent\n        setConversations(data);\n        setError(null);\n\n        // Check if we have a receiverId in the location state (from profile page)\n        const receiverId = location.state?.receiverId;\n        \n        // If we have a receiverId in state, navigate to that chat\n        if (receiverId && !userId) {\n          navigate(`/chat/${receiverId}`);\n          return;\n        }\n      } catch (err) {\n        console.error('Error fetching chats:', err);\n        setError('Failed to load conversations');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchChats();\n  }, [userId, navigate, user.id, location.state]);\n\n  // Mark messages as read when a user opens a conversation\n  useEffect(() => {\n    const markMessagesAsRead = async () => {\n      if (!userId || markingAsRead) return;\n      \n      try {\n        setMarkingAsRead(true);\n        // Mark all messages from this sender as read\n        await markAllMessagesRead(userId);\n        \n        // Update the conversations list to reflect the read status\n        const updatedConversations = await getConversations();\n        setConversations(updatedConversations);\n      } catch (err) {\n        console.error('Error marking messages as read:', err);\n      } finally {\n        setMarkingAsRead(false);\n      }\n    };\n\n    markMessagesAsRead();\n  }, [userId]);\n\n  // Listen for new messages to update conversations list\n  useEffect(() => {\n    if (!socket || !connected) return;\n\n    const handleMessageReceived = async (message) => {\n      // If this message is relevant to the current user (sender or receiver)\n      if (message.sender_id === user.id || message.receiver_id === user.id) {\n        // If the message is from the current open conversation, mark it as read immediately\n        if (message.sender_id === parseInt(userId) && message.receiver_id === user.id) {\n          try {\n            await markAllMessagesRead(userId);\n          } catch (err) {\n            console.error('Error marking message as read:', err);\n          }\n        }\n        \n        // Refresh the conversations list\n        try {\n          const data = await getConversations();\n          if (data && Array.isArray(data)) {\n            setConversations(data);\n          }\n        } catch (err) {\n          console.error('Error refreshing conversations after new message:', err);\n        }\n      }\n    };\n\n    socket.on('message_received', handleMessageReceived);\n\n    return () => {\n      socket.off('message_received', handleMessageReceived);\n    };\n  }, [socket, connected, user.id, userId]);\n\n  // Filter conversations by search query\n  const filteredConversations = searchQuery.trim() \n    ? conversations.filter(conv => \n        conv.user.name.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n    : conversations;\n\n  if (loading) {\n    return <Box className=\"chat-page-loading\">Loading chats...</Box>;\n  }\n\n  if (error) {\n    return <Box className=\"chat-page-error\">{error}</Box>;\n  }\n\n  return (\n    <Box className=\"chat-page\" h=\"100vh\" bg=\"gray.50\">\n      {userId ? (\n        // Chat view with conversation open\n        <Box h=\"100%\">\n          <HStack\n            p={4}\n            bg=\"white\"\n            borderBottomWidth=\"1px\"\n            borderColor=\"gray.200\"\n            position=\"sticky\"\n            top={0}\n            zIndex={1}\n          >\n            <Box \n              as=\"button\"\n              onClick={() => navigate('/chat')}\n              aria-label=\"Back to chat list\"\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              borderRadius=\"full\"\n              p={2}\n              _hover={{ bg: \"gray.100\" }}\n            >\n              <ArrowLeft size={24} />\n            </Box>\n            <Text fontWeight=\"bold\">\n              {conversations.find(c => c.user.id === parseInt(userId))?.user.name || 'Chat'}\n            </Text>\n          </HStack>\n\n          <Box h=\"calc(100% - 60px)\">\n            <Chat \n              otherUser={conversations.find(c => c.user.id === parseInt(userId))?.user}\n            />\n          </Box>\n        </Box>\n      ) : (\n        // Conversations list view\n        <Box h=\"100%\">\n          <Box\n            p={4}\n            bg=\"white\"\n            borderBottomWidth=\"1px\"\n            borderColor=\"gray.200\"\n            position=\"sticky\"\n            top={0}\n            zIndex={1}\n          >\n            <HStack mb={4}>\n              <Box \n                as=\"button\"\n                onClick={() => navigate('/home')}\n                aria-label=\"Back to homepage\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                borderRadius=\"full\"\n                p={2}\n                _hover={{ bg: \"gray.100\" }}\n              >\n                <ArrowLeft size={24} />\n              </Box>\n              <Text fontSize=\"xl\" fontWeight=\"bold\">\n                Messages\n              </Text>\n            </HStack>\n\n            <InputGroup>\n              <InputLeftElement pointerEvents=\"none\">\n                <Search size={18} color=\"gray.400\" />\n              </InputLeftElement>\n              <Input\n                placeholder=\"Search conversations...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                borderRadius=\"full\"\n                bg=\"gray.100\"\n                _focus={{ bg: \"white\", borderColor: \"blue.500\", boxShadow: \"0 0 0 1px blue.500\" }}\n              />\n            </InputGroup>\n          </Box>\n\n          <VStack spacing={0} align=\"stretch\" pb={4} overflowY=\"auto\" h=\"calc(100% - 110px)\">\n            {filteredConversations.length === 0 ? (\n              <Box p={4} textAlign=\"center\" color=\"gray.500\">\n                {searchQuery ? (\n                  <Text>No conversations matching \"{searchQuery}\"</Text>\n                ) : (\n                  <VStack spacing={2}>\n                    <Text>No conversations yet</Text>\n                    <Text fontSize=\"sm\" opacity={0.7}>Start a chat from a user's profile</Text>\n                  </VStack>\n                )}\n              </Box>\n            ) : (\n              filteredConversations.map((conv) => (\n                <Box\n                  key={conv.user.id}\n                  p={4}\n                  bg=\"white\"\n                  borderBottomWidth=\"1px\"\n                  borderColor=\"gray.100\"\n                  cursor=\"pointer\"\n                  onClick={() => navigate(`/chat/${conv.user.id}`)}\n                  _hover={{ bg: \"gray.50\" }}\n                >\n                  <HStack spacing={4}>\n                    <Box position=\"relative\">\n                      <Avatar\n                        size=\"md\"\n                        name={conv.user.name} // Acest lucru va afișa inițialele când nu există imagine\n                        src={conv.user.image}\n                        bg=\"blue.500\" // Culoarea de fundal pentru avatar când afișează inițiale\n                      />\n                      {conv.user.isOnline && (\n                        <Badge\n                          position=\"absolute\"\n                          bottom=\"0\"\n                          right=\"0\"\n                          bg=\"green.400\"\n                          borderRadius=\"full\"\n                          transform=\"translate(20%, 20%)\"\n                          boxSize=\"3\"\n                        />\n                      )}\n                    </Box>\n\n                    <Box flex=\"1\">\n                      <HStack justify=\"space-between\" mb={1}>\n                        <Text fontWeight=\"bold\">\n                          {conv.user.name}\n                        </Text>\n                        <Text fontSize=\"sm\" color=\"gray.500\">\n                          {formatTimestamp(conv.lastMessage.time)}\n                        </Text>\n                      </HStack>\n\n                      <HStack justify=\"space-between\">\n                        <Text\n                          fontSize=\"sm\"\n                          color=\"gray.600\"\n                          noOfLines={1}\n                          flex=\"1\"\n                        >\n                          {conv.lastMessage.sender === 'you' && 'You: '}\n                          {conv.lastMessage.text}\n                        </Text>\n\n                        {conv.unreadCount > 0 && (\n                          <Badge\n                            colorScheme=\"blue\"\n                            borderRadius=\"full\"\n                            px={2}\n                          >\n                            {conv.unreadCount}\n                          </Badge>\n                        )}\n                      </HStack>\n                    </Box>\n                  </HStack>\n                </Box>\n              ))\n            )}\n          </VStack>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\n// Helper function to format timestamp\nconst formatTimestamp = (timestamp) => {\n  const date = new Date(timestamp);\n  const now = new Date();\n  const diff = now - date;\n  \n  // If less than 24 hours, show only time\n  if (diff < 24 * 60 * 60 * 1000) {\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  }\n  \n  // If less than a week, show day name\n  if (diff < 7 * 24 * 60 * 60 * 1000) {\n    return date.toLocaleDateString([], { weekday: 'short' });\n  }\n  \n  // Otherwise show date\n  return date.toLocaleDateString([], { month: 'short', day: 'numeric' });\n};\n\nexport default ChatPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}