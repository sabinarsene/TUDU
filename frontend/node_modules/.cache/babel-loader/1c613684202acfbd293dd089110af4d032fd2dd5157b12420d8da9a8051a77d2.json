{"ast":null,"code":"import { checkboxAnatomy } from '@chakra-ui/anatomy';\nimport { createMultiStyleConfigHelpers, cssVar, defineStyle } from '@chakra-ui/styled-system';\nimport { mode } from '@chakra-ui/theme-tools';\nimport { runIfFn } from '../utils/run-if-fn.mjs';\nconst {\n  definePartsStyle,\n  defineMultiStyleConfig\n} = createMultiStyleConfigHelpers(checkboxAnatomy.keys);\nconst $size = cssVar(\"checkbox-size\");\nconst baseStyleControl = defineStyle(props => {\n  const {\n    colorScheme: c\n  } = props;\n  return {\n    w: $size.reference,\n    h: $size.reference,\n    transitionProperty: \"box-shadow\",\n    transitionDuration: \"normal\",\n    border: \"2px solid\",\n    borderRadius: \"sm\",\n    borderColor: \"inherit\",\n    color: \"white\",\n    _checked: {\n      bg: mode(`${c}.500`, `${c}.200`)(props),\n      borderColor: mode(`${c}.500`, `${c}.200`)(props),\n      color: mode(\"white\", \"gray.900\")(props),\n      _hover: {\n        bg: mode(`${c}.600`, `${c}.300`)(props),\n        borderColor: mode(`${c}.600`, `${c}.300`)(props)\n      },\n      _disabled: {\n        borderColor: mode(\"gray.200\", \"transparent\")(props),\n        bg: mode(\"gray.200\", \"whiteAlpha.300\")(props),\n        color: mode(\"gray.500\", \"whiteAlpha.500\")(props)\n      }\n    },\n    _indeterminate: {\n      bg: mode(`${c}.500`, `${c}.200`)(props),\n      borderColor: mode(`${c}.500`, `${c}.200`)(props),\n      color: mode(\"white\", \"gray.900\")(props)\n    },\n    _disabled: {\n      bg: mode(\"gray.100\", \"whiteAlpha.100\")(props),\n      borderColor: mode(\"gray.100\", \"transparent\")(props)\n    },\n    _focusVisible: {\n      boxShadow: \"outline\"\n    },\n    _invalid: {\n      borderColor: mode(\"red.500\", \"red.300\")(props)\n    }\n  };\n});\nconst baseStyleContainer = defineStyle({\n  _disabled: {\n    cursor: \"not-allowed\"\n  }\n});\nconst baseStyleLabel = defineStyle({\n  userSelect: \"none\",\n  _disabled: {\n    opacity: 0.4\n  }\n});\nconst baseStyleIcon = defineStyle({\n  transitionProperty: \"transform\",\n  transitionDuration: \"normal\"\n});\nconst baseStyle = definePartsStyle(props => ({\n  icon: baseStyleIcon,\n  container: baseStyleContainer,\n  control: runIfFn(baseStyleControl, props),\n  label: baseStyleLabel\n}));\nconst sizes = {\n  sm: definePartsStyle({\n    control: {\n      [$size.variable]: \"sizes.3\"\n    },\n    label: {\n      fontSize: \"sm\"\n    },\n    icon: {\n      fontSize: \"3xs\"\n    }\n  }),\n  md: definePartsStyle({\n    control: {\n      [$size.variable]: \"sizes.4\"\n    },\n    label: {\n      fontSize: \"md\"\n    },\n    icon: {\n      fontSize: \"2xs\"\n    }\n  }),\n  lg: definePartsStyle({\n    control: {\n      [$size.variable]: \"sizes.5\"\n    },\n    label: {\n      fontSize: \"lg\"\n    },\n    icon: {\n      fontSize: \"2xs\"\n    }\n  })\n};\nconst checkboxTheme = defineMultiStyleConfig({\n  baseStyle,\n  sizes,\n  defaultProps: {\n    size: \"md\",\n    colorScheme: \"blue\"\n  }\n});\nexport { checkboxTheme };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}