{"ast":null,"code":"'use client';\n\nimport { useEffect } from 'react';\nfunction useAttributeObserver(ref, attributes, fn, enabled) {\n  useEffect(() => {\n    if (!ref.current || !enabled) return;\n    const win = ref.current.ownerDocument.defaultView ?? window;\n    const attrs = Array.isArray(attributes) ? attributes : [attributes];\n    const obs = new win.MutationObserver(changes => {\n      for (const change of changes) {\n        if (change.type === \"attributes\" && change.attributeName && attrs.includes(change.attributeName)) {\n          fn(change);\n        }\n      }\n    });\n    obs.observe(ref.current, {\n      attributes: true,\n      attributeFilter: attrs\n    });\n    return () => obs.disconnect();\n  });\n}\nexport { useAttributeObserver };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}