{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { Slider, useSliderContext } from '@ark-ui/react/slider';\nimport { forwardRef } from 'react';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nimport { For } from '../for/for.js';\nconst {\n  withProvider,\n  withContext,\n  useStyles: useSliderStyles,\n  PropsProvider\n} = createSlotRecipeContext({\n  key: \"slider\"\n});\nconst SliderRootProvider = withProvider(Slider.RootProvider, \"root\", {\n  forwardAsChild: true\n});\nconst SliderRoot = withProvider(Slider.Root, \"root\", {\n  forwardAsChild: true\n});\nconst SliderPropsProvider = PropsProvider;\nconst SliderTrack = withContext(Slider.Track, \"track\", {\n  forwardAsChild: true\n});\nconst SliderRange = withContext(Slider.Range, \"range\", {\n  forwardAsChild: true\n});\nconst SliderThumb = withContext(Slider.Thumb, \"thumb\", {\n  forwardAsChild: true\n});\nconst SliderValueText = withContext(Slider.ValueText, \"valueText\", {\n  forwardAsChild: true\n});\nconst SliderLabel = withContext(Slider.Label, \"label\", {\n  forwardAsChild: true\n});\nconst SliderMarkerGroup = withContext(Slider.MarkerGroup, \"markerGroup\", {\n  forwardAsChild: true\n});\nconst SliderMarker = withContext(Slider.Marker, \"marker\", {\n  forwardAsChild: true\n});\nconst SliderMarkerIndicator = withContext(\"div\", \"markerIndicator\");\nconst SliderDraggingIndicator = withContext(Slider.DraggingIndicator, \"draggingIndicator\", {\n  forwardAsChild: true\n});\nconst SliderThumbs = props => {\n  const api = useSliderContext();\n  return /* @__PURE__ */jsx(For, {\n    each: api.value,\n    children: (_, index) => /* @__PURE__ */jsx(SliderThumb, {\n      index,\n      ...props,\n      children: /* @__PURE__ */jsx(SliderHiddenInput, {})\n    }, index)\n  });\n};\nconst SliderMarks = forwardRef(function SliderMarks2(props, ref) {\n  const {\n    marks,\n    ...rest\n  } = props;\n  if (!marks?.length) return null;\n  return /* @__PURE__ */jsx(SliderMarkerGroup, {\n    ref,\n    ...rest,\n    children: marks.map((mark, index) => {\n      const value = typeof mark === \"number\" ? mark : mark.value;\n      const label = typeof mark === \"number\" ? void 0 : mark.label;\n      return /* @__PURE__ */jsxs(SliderMarker, {\n        value,\n        children: [/* @__PURE__ */jsx(SliderMarkerIndicator, {}), label != null && /* @__PURE__ */jsx(\"span\", {\n          className: \"chakra-slider__marker-label\",\n          children: label\n        })]\n      }, index);\n    })\n  });\n});\nconst SliderControl = withContext(Slider.Control, \"control\", {\n  forwardAsChild: true\n});\nconst SliderContext = Slider.Context;\nconst SliderHiddenInput = Slider.HiddenInput;\nexport { SliderContext, SliderControl, SliderDraggingIndicator, SliderHiddenInput, SliderLabel, SliderMarker, SliderMarkerGroup, SliderMarkerIndicator, SliderMarks, SliderPropsProvider, SliderRange, SliderRoot, SliderRootProvider, SliderThumb, SliderThumbs, SliderTrack, SliderValueText, useSliderStyles };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}