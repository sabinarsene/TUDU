{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, Children } from 'react';\nimport { defineStyle } from '../../styled-system/config.js';\nimport { chakra } from '../../styled-system/factory.js';\nimport { cx } from '../../utils/cx.js';\nimport { mapObject } from '../../utils/walk-object.js';\nconst baseStyle = defineStyle({\n  \"& > *:not(style)\": {\n    overflow: \"hidden\",\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    bottom: \"0\",\n    left: \"0\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  \"& > img, & > video\": {\n    objectFit: \"cover\"\n  }\n});\nconst AspectRatio = forwardRef(function AspectRatio2(props, ref) {\n  const {\n    ratio = 4 / 3,\n    children,\n    className,\n    ...rest\n  } = props;\n  const child = Children.only(children);\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    position: \"relative\",\n    className: cx(\"chakra-aspect-ratio\", className),\n    _before: {\n      height: 0,\n      content: `\"\"`,\n      display: \"block\",\n      paddingBottom: mapObject(ratio, r => `${1 / r * 100}%`)\n    },\n    ...rest,\n    css: [baseStyle, props.css],\n    children: child\n  });\n});\nexport { AspectRatio };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}