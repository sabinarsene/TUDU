{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { cx, callAll } from '@chakra-ui/utils';\nimport { motion } from 'framer-motion';\nimport { useMenuStyles } from './menu.mjs';\nimport { useMenuContext, useMenuList, useMenuPositioner } from './use-menu.mjs';\nimport { chakra } from '../system/factory.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nconst motionVariants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1]\n    }\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\"\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\"\n    }\n  }\n};\nconst MenuTransition = chakra(motion.div);\nconst MenuList = forwardRef(function MenuList2(props, ref) {\n  const {\n    rootProps,\n    motionProps,\n    ...rest\n  } = props;\n  const {\n    isOpen,\n    onTransitionEnd,\n    unstable__animationState: animated\n  } = useMenuContext();\n  const listProps = useMenuList(rest, ref);\n  const positionerProps = useMenuPositioner(rootProps);\n  const styles = useMenuStyles();\n  return /* @__PURE__ */jsx(chakra.div, {\n    ...positionerProps,\n    __css: {\n      zIndex: props.zIndex ?? styles.list?.zIndex\n    },\n    children: /* @__PURE__ */jsx(MenuTransition, {\n      variants: motionVariants,\n      initial: false,\n      animate: isOpen ? \"enter\" : \"exit\",\n      __css: {\n        outline: 0,\n        ...styles.list\n      },\n      ...motionProps,\n      ...listProps,\n      className: cx(\"chakra-menu__menu-list\", listProps.className),\n      onUpdate: onTransitionEnd,\n      onAnimationComplete: callAll(animated.onComplete, listProps.onAnimationComplete)\n    })\n  });\n});\nMenuList.displayName = \"MenuList\";\nexport { MenuList };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}