{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { splitPresenceProps } from '../presence/split-presence-props.js';\nimport { usePresence } from '../presence/use-presence.js';\nimport { PresenceProvider } from '../presence/use-presence-context.js';\nimport { useSelect } from './use-select.js';\nimport { SelectProvider } from './use-select-context.js';\nconst SelectImpl = (props, ref) => {\n  const [presenceProps, selectProps] = splitPresenceProps(props);\n  const [useSelectProps, localProps] = createSplitProps()(selectProps, [\"closeOnSelect\", \"collection\", \"composite\", \"defaultOpen\", \"defaultValue\", \"deselectable\", \"disabled\", \"form\", \"highlightedValue\", \"id\", \"ids\", \"invalid\", \"loopFocus\", \"multiple\", \"name\", \"onFocusOutside\", \"onHighlightChange\", \"onInteractOutside\", \"onOpenChange\", \"onPointerDownOutside\", \"onValueChange\", \"open\", \"positioning\", \"readOnly\", \"required\", \"scrollToIndexFn\", \"value\"]);\n  const select = useSelect(useSelectProps);\n  const presence = usePresence(mergeProps({\n    present: select.open\n  }, presenceProps));\n  const mergedProps = mergeProps(select.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(SelectProvider, {\n    value: select,\n    children: /* @__PURE__ */jsx(PresenceProvider, {\n      value: presence,\n      children: /* @__PURE__ */jsx(ark.div, {\n        ...mergedProps,\n        ref\n      })\n    })\n  });\n};\nconst SelectRoot = forwardRef(SelectImpl);\nexport { SelectRoot };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}