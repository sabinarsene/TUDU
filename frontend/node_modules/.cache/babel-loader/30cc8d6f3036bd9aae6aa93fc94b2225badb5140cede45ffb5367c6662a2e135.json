{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { getWindow, getDocument } from '@zag-js/dom-query';\nimport { useState, useMemo } from 'react';\nimport { runIfFn } from '../../utils/run-if-fn.js';\nimport { EnvironmentContextProvider } from './use-environment-context.js';\nconst EnvironmentProvider = props => {\n  const {\n    value,\n    children\n  } = props;\n  const [spanRef, setSpanRef] = useState();\n  const getRootNode = useMemo(() => {\n    return () => runIfFn(value) ?? spanRef?.ownerDocument ?? document;\n  }, [value, spanRef]);\n  const environment = useMemo(() => ({\n    getRootNode,\n    getWindow: () => getWindow(getRootNode()),\n    getDocument: () => getDocument(getRootNode())\n  }), [getRootNode]);\n  return /* @__PURE__ */jsxs(EnvironmentContextProvider, {\n    value: environment,\n    children: [children, !value && /* @__PURE__ */jsx(\"span\", {\n      hidden: true,\n      ref: setSpanRef\n    })]\n  });\n};\nexport { EnvironmentProvider };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}