{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Menu } from '@ark-ui/react/menu';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nconst {\n  withRootProvider,\n  withContext,\n  useStyles: useMenuStyles,\n  PropsProvider\n} = createSlotRecipeContext({\n  key: \"menu\"\n});\nconst MenuRootProvider = withRootProvider(Menu.RootProvider);\nconst MenuRoot = withRootProvider(Menu.Root, {\n  defaultProps: {\n    lazyMount: true,\n    unmountOnExit: true\n  }\n});\nconst MenuPropsProvider = PropsProvider;\nconst MenuTrigger = withContext(Menu.Trigger, \"trigger\", {\n  forwardAsChild: true\n});\nconst MenuContextTrigger = withContext(Menu.ContextTrigger, \"contextTrigger\", {\n  forwardAsChild: true\n});\nconst MenuPositioner = withContext(Menu.Positioner, \"positioner\", {\n  forwardAsChild: true\n});\nconst MenuSeparator = withContext(Menu.Separator, \"separator\", {\n  forwardAsChild: true\n});\nconst MenuContent = withContext(Menu.Content, \"content\", {\n  forwardAsChild: true\n});\nconst MenuArrowTip = withContext(Menu.ArrowTip, \"arrowTip\", {\n  forwardAsChild: true\n});\nconst MenuArrow = withContext(Menu.Arrow, \"arrow\", {\n  forwardAsChild: true,\n  defaultProps: {\n    children: /* @__PURE__ */jsx(MenuArrowTip, {})\n  }\n});\nconst MenuIndicator = withContext(Menu.Indicator, \"indicator\", {\n  forwardAsChild: true\n});\nconst MenuItemGroup = withContext(Menu.ItemGroup, \"itemGroup\", {\n  forwardAsChild: true\n});\nconst MenuItemGroupLabel = withContext(Menu.ItemGroupLabel, \"itemGroupLabel\", {\n  forwardAsChild: true\n});\nconst MenuItem = withContext(Menu.Item, \"item\", {\n  forwardAsChild: true\n});\nconst MenuTriggerItem = withContext(Menu.TriggerItem, \"item\", {\n  forwardAsChild: true\n});\nconst MenuItemText = withContext(Menu.ItemText, \"itemText\", {\n  forwardAsChild: true\n});\nconst MenuItemCommand = withContext(\"kbd\", \"itemCommand\");\nconst MenuItemIndicator = withContext(Menu.ItemIndicator, \"itemIndicator\", {\n  forwardAsChild: true\n});\nconst MenuCheckboxItem = withContext(Menu.CheckboxItem, \"item\", {\n  forwardAsChild: true\n});\nconst MenuRadioItemGroup = withContext(Menu.RadioItemGroup, \"itemGroup\", {\n  forwardAsChild: true\n});\nconst MenuRadioItem = withContext(Menu.RadioItem, \"item\", {\n  forwardAsChild: true\n});\nconst MenuContext = Menu.Context;\nconst MenuItemContext = Menu.ItemContext;\nexport { MenuArrow, MenuArrowTip, MenuCheckboxItem, MenuContent, MenuContext, MenuContextTrigger, MenuIndicator, MenuItem, MenuItemCommand, MenuItemContext, MenuItemGroup, MenuItemGroupLabel, MenuItemIndicator, MenuItemText, MenuPositioner, MenuPropsProvider, MenuRadioItem, MenuRadioItemGroup, MenuRoot, MenuRootProvider, MenuSeparator, MenuTrigger, MenuTriggerItem, useMenuStyles };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}