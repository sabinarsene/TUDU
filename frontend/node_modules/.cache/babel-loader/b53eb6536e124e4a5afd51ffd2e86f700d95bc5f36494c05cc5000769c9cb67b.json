{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { createRecipeContext } from '../../styled-system/create-recipe-context.js';\nimport { Circle } from '../box/circle.js';\nimport { Stack } from '../stack/stack.js';\nconst {\n  withContext,\n  PropsProvider\n} = createRecipeContext({\n  key: \"skeleton\"\n});\nconst Skeleton = withContext(\"div\");\nconst SkeletonPropsProvider = PropsProvider;\nconst SkeletonCircle = React.forwardRef(function SkeletonCircle2(props, ref) {\n  const {\n    size,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(Circle, {\n    size,\n    asChild: true,\n    ref,\n    children: /* @__PURE__ */jsx(Skeleton, {\n      ...rest\n    })\n  });\n});\nconst SkeletonText = React.forwardRef(function SkeletonText2(props, ref) {\n  const {\n    noOfLines = 3,\n    gap,\n    rootProps,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(Stack, {\n    gap,\n    width: \"full\",\n    ref,\n    ...rootProps,\n    children: Array.from({\n      length: noOfLines\n    }).map((_, index) => /* @__PURE__ */jsx(Skeleton, {\n      height: \"4\",\n      _last: {\n        maxW: noOfLines === 1 ? \"100%\" : \"80%\"\n      },\n      ...rest\n    }, index))\n  });\n});\nexport { Skeleton, SkeletonCircle, SkeletonPropsProvider, SkeletonText };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}