{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Accordion } from '@ark-ui/react/accordion';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nimport { ChevronDownIcon } from '../icons.js';\nconst {\n  withProvider,\n  withContext,\n  useStyles: useAccordionStyles,\n  PropsProvider\n} = createSlotRecipeContext({\n  key: \"accordion\"\n});\nconst AccordionRootProvider = withProvider(Accordion.RootProvider, \"root\", {\n  forwardAsChild: true\n});\nconst AccordionRoot = withProvider(Accordion.Root, \"root\", {\n  forwardAsChild: true\n});\nconst AccordionPropsProvider = PropsProvider;\nconst AccordionItem = withContext(Accordion.Item, \"item\", {\n  forwardAsChild: true\n});\nconst AccordionItemContent = withContext(Accordion.ItemContent, \"itemContent\", {\n  forwardAsChild: true\n});\nconst AccordionItemBody = withContext(\"div\", \"itemBody\");\nconst AccordionItemTrigger = withContext(Accordion.ItemTrigger, \"itemTrigger\", {\n  forwardAsChild: true\n});\nconst AccordionItemIndicator = withContext(Accordion.ItemIndicator, \"itemIndicator\", {\n  forwardAsChild: true,\n  defaultProps: {\n    children: /* @__PURE__ */jsx(ChevronDownIcon, {})\n  }\n});\nconst AccordionContext = Accordion.Context;\nconst AccordionItemContext = Accordion.ItemContext;\nexport { AccordionContext, AccordionItem, AccordionItemBody, AccordionItemContent, AccordionItemContext, AccordionItemIndicator, AccordionItemTrigger, AccordionPropsProvider, AccordionRoot, AccordionRootProvider, useAccordionStyles };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}