{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\TUDU-app\\\\TUDU\\\\frontend\\\\src\\\\pages\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSocket } from '../contexts/SocketContext';\nimport { getConversations } from '../services/messageApi';\nimport Chat from '../components/Chat/Chat';\nimport { ArrowLeft, Search, Settings, Phone, Video } from 'lucide-react';\nimport './ChatPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  var _conversations$find, _conversations$find2, _conversations$find3, _conversations$find4;\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    user\n  } = useAuth();\n  const {\n    socket,\n    connected\n  } = useSocket();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Load conversations\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        var _location$state;\n        setLoading(true);\n        const data = await getConversations();\n\n        // Verificăm dacă avem date valide\n        if (!data || !Array.isArray(data)) {\n          setConversations([]);\n          setError('Nu s-au putut încărca conversațiile');\n          setLoading(false);\n          return;\n        }\n\n        // Nu mai filtrăm conversațiile, deoarece backend-ul ar trebui să returneze doar conversațiile utilizatorului curent\n        setConversations(data);\n        setError(null);\n\n        // Check if we have a receiverId in the location state (from profile page)\n        const receiverId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.receiverId;\n\n        // If we have a receiverId in state, navigate to that chat\n        if (receiverId && !userId) {\n          navigate(`/chat/${receiverId}`);\n          return;\n        }\n      } catch (err) {\n        console.error('Error fetching chats:', err);\n        setError('Failed to load conversations');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchChats();\n  }, [userId, navigate, user.id, location.state]);\n\n  // Listen for new messages to update conversations list\n  useEffect(() => {\n    if (!socket || !connected) return;\n    const handleMessageReceived = async message => {\n      // If this message is relevant to the current user (sender or receiver)\n      if (message.sender_id === user.id || message.receiver_id === user.id) {\n        // Refresh the conversations list\n        try {\n          const data = await getConversations();\n          if (data && Array.isArray(data)) {\n            setConversations(data);\n          }\n        } catch (err) {\n          console.error('Error refreshing conversations after new message:', err);\n        }\n      }\n    };\n    socket.on('message_received', handleMessageReceived);\n    return () => {\n      socket.off('message_received', handleMessageReceived);\n    };\n  }, [socket, connected, user.id]);\n\n  // Filter conversations based on search query\n  const filteredConversations = searchQuery.trim() ? conversations.filter(conv => conv.user.name.toLowerCase().includes(searchQuery.toLowerCase())) : conversations;\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-page-loading\",\n      children: \"Loading chats...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-page-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversations-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => navigate('/home'),\n          \"aria-label\": \"Back to Homepage\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            size: 24,\n            strokeWidth: 2.5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settings-button\",\n          onClick: () => navigate('/settings'),\n          \"aria-label\": \"Settings\",\n          children: /*#__PURE__*/_jsxDEV(Settings, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            size: 16,\n            className: \"search-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search conversations...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-list\",\n        children: filteredConversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-conversations\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No conversations yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-conversations-hint\",\n            children: \"Start a chat from a user's profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this) : filteredConversations.map(conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `conversation-item ${conversation.user.id === parseInt(userId) ? 'active' : ''}`,\n          onClick: () => navigate(`/chat/${conversation.user.id}`),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-avatar\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: conversation.user.image || '/default-avatar.png',\n              alt: conversation.user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), conversation.user.isOnline && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"online-indicator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: conversation.user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"conversation-time\",\n                children: formatMessageTime(conversation.lastMessage.time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-preview\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"last-message\",\n                children: [conversation.lastMessage.sender === 'you' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"You: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 69\n                }, this), conversation.lastMessage.text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this), conversation.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"unread-count\",\n                children: conversation.unreadCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this)]\n        }, conversation.user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: userId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-chat-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: (_conversations$find = conversations.find(c => c.user.id === parseInt(userId))) === null || _conversations$find === void 0 ? void 0 : _conversations$find.user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-indicator ${(_conversations$find2 = conversations.find(c => c.user.id === parseInt(userId))) !== null && _conversations$find2 !== void 0 && _conversations$find2.user.isOnline ? 'online' : 'offline'}`,\n              children: (_conversations$find3 = conversations.find(c => c.user.id === parseInt(userId))) !== null && _conversations$find3 !== void 0 && _conversations$find3.user.isOnline ? 'Online' : 'Offline'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button\",\n              \"aria-label\": \"Voice call\",\n              children: /*#__PURE__*/_jsxDEV(Phone, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button\",\n              \"aria-label\": \"Video call\",\n              children: /*#__PURE__*/_jsxDEV(Video, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chat, {\n          otherUser: (_conversations$find4 = conversations.find(c => c.user.id === parseInt(userId))) === null || _conversations$find4 === void 0 ? void 0 : _conversations$find4.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-chat-icon\",\n          children: \"\\uD83D\\uDCAC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a conversation to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-chat-hint\",\n          children: \"or find a user to chat with from their profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to format message time\n_s(ChatPage, \"iUkqKuEp7h3VFzGibKX8TZRU4Fc=\", false, function () {\n  return [useParams, useNavigate, useLocation, useAuth, useSocket];\n});\n_c = ChatPage;\nfunction formatMessageTime(timestamp) {\n  const date = new Date(timestamp);\n  const now = new Date();\n  const diffInDays = Math.floor((now - date) / (1000 * 60 * 60 * 24));\n\n  // Today: show time\n  if (diffInDays === 0) {\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n\n  // Yesterday: show \"Yesterday\"\n  if (diffInDays === 1) {\n    return 'Yesterday';\n  }\n\n  // Within last 7 days: show day name\n  if (diffInDays < 7) {\n    return date.toLocaleDateString([], {\n      weekday: 'short'\n    });\n  }\n\n  // Otherwise: show date\n  return date.toLocaleDateString([], {\n    month: 'short',\n    day: 'numeric'\n  });\n}\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","useAuth","useSocket","getConversations","Chat","ArrowLeft","Search","Settings","Phone","Video","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatPage","_s","_conversations$find","_conversations$find2","_conversations$find3","_conversations$find4","userId","navigate","location","user","socket","connected","conversations","setConversations","loading","setLoading","error","setError","searchQuery","setSearchQuery","fetchChats","_location$state","data","Array","isArray","receiverId","state","err","console","id","handleMessageReceived","message","sender_id","receiver_id","on","off","filteredConversations","trim","filter","conv","name","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","strokeWidth","type","placeholder","value","onChange","e","target","length","map","conversation","parseInt","src","image","alt","isOnline","formatMessageTime","lastMessage","time","sender","text","unreadCount","find","c","otherUser","_c","timestamp","date","Date","now","diffInDays","Math","floor","toLocaleTimeString","hour","minute","toLocaleDateString","weekday","month","day","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/TUDU-app/TUDU/frontend/src/pages/ChatPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useSocket } from '../contexts/SocketContext';\r\nimport { getConversations } from '../services/messageApi';\r\nimport Chat from '../components/Chat/Chat';\r\nimport { ArrowLeft, Search, Settings, Phone, Video } from 'lucide-react';\r\nimport './ChatPage.css';\r\n\r\nconst ChatPage = () => {\r\n  const { userId } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { user } = useAuth();\r\n  const { socket, connected } = useSocket();\r\n  const [conversations, setConversations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  // Load conversations\r\n  useEffect(() => {\r\n    const fetchChats = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getConversations();\r\n        \r\n        // Verificăm dacă avem date valide\r\n        if (!data || !Array.isArray(data)) {\r\n          setConversations([]);\r\n          setError('Nu s-au putut încărca conversațiile');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // Nu mai filtrăm conversațiile, deoarece backend-ul ar trebui să returneze doar conversațiile utilizatorului curent\r\n        setConversations(data);\r\n        setError(null);\r\n\r\n        // Check if we have a receiverId in the location state (from profile page)\r\n        const receiverId = location.state?.receiverId;\r\n        \r\n        // If we have a receiverId in state, navigate to that chat\r\n        if (receiverId && !userId) {\r\n          navigate(`/chat/${receiverId}`);\r\n          return;\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching chats:', err);\r\n        setError('Failed to load conversations');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchChats();\r\n  }, [userId, navigate, user.id, location.state]);\r\n\r\n  // Listen for new messages to update conversations list\r\n  useEffect(() => {\r\n    if (!socket || !connected) return;\r\n\r\n    const handleMessageReceived = async (message) => {\r\n      // If this message is relevant to the current user (sender or receiver)\r\n      if (message.sender_id === user.id || message.receiver_id === user.id) {\r\n        // Refresh the conversations list\r\n        try {\r\n          const data = await getConversations();\r\n          if (data && Array.isArray(data)) {\r\n            setConversations(data);\r\n          }\r\n        } catch (err) {\r\n          console.error('Error refreshing conversations after new message:', err);\r\n        }\r\n      }\r\n    };\r\n\r\n    socket.on('message_received', handleMessageReceived);\r\n\r\n    return () => {\r\n      socket.off('message_received', handleMessageReceived);\r\n    };\r\n  }, [socket, connected, user.id]);\r\n\r\n  // Filter conversations based on search query\r\n  const filteredConversations = searchQuery.trim() \r\n    ? conversations.filter(conv => \r\n        conv.user.name.toLowerCase().includes(searchQuery.toLowerCase()))\r\n    : conversations;\r\n\r\n  if (loading) {\r\n    return <div className=\"chat-page-loading\">Loading chats...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"chat-page-error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-page\">\r\n      <div className=\"conversations-sidebar\">\r\n        <div className=\"conversations-header\">\r\n          <button \r\n            className=\"back-button\" \r\n            onClick={() => navigate('/home')}\r\n            aria-label=\"Back to Homepage\"\r\n          >\r\n            <ArrowLeft size={24} strokeWidth={2.5} />\r\n          </button>\r\n          <h2>Messages</h2>\r\n          <button \r\n            className=\"settings-button\" \r\n            onClick={() => navigate('/settings')}\r\n            aria-label=\"Settings\"\r\n          >\r\n            <Settings size={20} />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"search-container\">\r\n          <div className=\"search-input-container\">\r\n            <Search size={16} className=\"search-icon\" />\r\n            <input \r\n              type=\"text\"\r\n              placeholder=\"Search conversations...\" \r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              className=\"search-input\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"conversations-list\">\r\n          {filteredConversations.length === 0 ? (\r\n            <div className=\"no-conversations\">\r\n              <p>No conversations yet</p>\r\n              <p className=\"no-conversations-hint\">Start a chat from a user's profile</p>\r\n            </div>\r\n          ) : (\r\n            filteredConversations.map((conversation) => (\r\n              <div\r\n                key={conversation.user.id}\r\n                className={`conversation-item ${\r\n                  conversation.user.id === parseInt(userId) ? 'active' : ''\r\n                }`}\r\n                onClick={() => navigate(`/chat/${conversation.user.id}`)}\r\n              >\r\n                <div className=\"conversation-avatar\">\r\n                  <img\r\n                    src={conversation.user.image || '/default-avatar.png'}\r\n                    alt={conversation.user.name}\r\n                  />\r\n                  {conversation.user.isOnline && (\r\n                    <span className=\"online-indicator\" />\r\n                  )}\r\n                </div>\r\n                <div className=\"conversation-details\">\r\n                  <div className=\"conversation-header\">\r\n                    <h3>{conversation.user.name}</h3>\r\n                    <span className=\"conversation-time\">\r\n                      {formatMessageTime(conversation.lastMessage.time)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"conversation-preview\">\r\n                    <p className=\"last-message\">\r\n                      {conversation.lastMessage.sender === 'you' && <span>You: </span>}\r\n                      {conversation.lastMessage.text}\r\n                    </p>\r\n                    {conversation.unreadCount > 0 && (\r\n                      <span className=\"unread-count\">\r\n                        {conversation.unreadCount}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-area\">\r\n        {userId ? (\r\n          <>\r\n            <div className=\"chat-header-controls\">\r\n              <div className=\"current-chat-info\">\r\n                <h3>{conversations.find(c => c.user.id === parseInt(userId))?.user.name}</h3>\r\n                <span className={`status-indicator ${conversations.find(c => c.user.id === parseInt(userId))?.user.isOnline ? 'online' : 'offline'}`}>\r\n                  {conversations.find(c => c.user.id === parseInt(userId))?.user.isOnline ? 'Online' : 'Offline'}\r\n                </span>\r\n              </div>\r\n              <div className=\"chat-actions\">\r\n                <button className=\"action-button\" aria-label=\"Voice call\">\r\n                  <Phone size={20} />\r\n                </button>\r\n                <button className=\"action-button\" aria-label=\"Video call\">\r\n                  <Video size={20} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <Chat \r\n              otherUser={conversations.find(c => c.user.id === parseInt(userId))?.user}\r\n            />\r\n          </>\r\n        ) : (\r\n          <div className=\"no-chat-selected\">\r\n            <div className=\"no-chat-icon\">💬</div>\r\n            <h3>Your Messages</h3>\r\n            <p>Select a conversation to start chatting</p>\r\n            <p className=\"no-chat-hint\">or find a user to chat with from their profile</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Helper function to format message time\r\nfunction formatMessageTime(timestamp) {\r\n  const date = new Date(timestamp);\r\n  const now = new Date();\r\n  const diffInDays = Math.floor((now - date) / (1000 * 60 * 60 * 24));\r\n  \r\n  // Today: show time\r\n  if (diffInDays === 0) {\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  }\r\n  \r\n  // Yesterday: show \"Yesterday\"\r\n  if (diffInDays === 1) {\r\n    return 'Yesterday';\r\n  }\r\n  \r\n  // Within last 7 days: show day name\r\n  if (diffInDays < 7) {\r\n    return date.toLocaleDateString([], { weekday: 'short' });\r\n  }\r\n  \r\n  // Otherwise: show date\r\n  return date.toLocaleDateString([], { month: 'short', day: 'numeric' });\r\n}\r\n\r\nexport default ChatPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}