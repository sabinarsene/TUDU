{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\TUDU-app\\\\TUDU\\\\frontend\\\\src\\\\components\\\\Chat\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSocket } from '../../contexts/SocketContext';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { getMessages, sendMessage, markMessageRead } from '../../services/messageApi';\nimport { getImageUrl } from '../../utils/imageUtils';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  otherUser\n}) => {\n  _s();\n  // Hooks și state\n  const {\n    userId\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const {\n    socket,\n    connected\n  } = useSocket();\n  const messagesEndRef = useRef(null);\n\n  // States\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingTimeout, setTypingTimeout] = useState(null);\n\n  // Încărcarea mesajelor\n  useEffect(() => {\n    const loadMessages = async () => {\n      if (!userId) return;\n      try {\n        setLoading(true);\n        const data = await getMessages(userId);\n        setMessages(data);\n        setError(null);\n\n        // Marcăm toate mesajele necitite ca fiind citite\n        const unreadMessages = data.filter(msg => msg.sender === 'them' && !msg.isRead);\n        if (unreadMessages.length > 0) {\n          unreadMessages.forEach(msg => {\n            if (msg.id) markMessageRead(msg.id).catch(console.error);\n          });\n        }\n      } catch (err) {\n        console.error('Error loading messages:', err);\n        setError('Failed to load messages');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadMessages();\n  }, [userId]);\n\n  // Socket event handlers\n  useEffect(() => {\n    if (!socket || !connected || !(user !== null && user !== void 0 && user.id)) return;\n    const handleMessageReceived = message => {\n      if (message.sender_id === parseInt(userId) || message.receiver_id === parseInt(userId)) {\n        setMessages(prev => [...prev, {\n          ...message,\n          sender: message.sender_id === user.id ? 'you' : 'them'\n        }]);\n\n        // Mark message as read if we're the receiver\n        if (message.sender_id === parseInt(userId) && !message.read_at) {\n          markMessageRead(message.id).catch(console.error);\n        }\n      }\n    };\n    const handleMessageUpdated = message => {\n      if (message.sender_id === parseInt(userId) || message.receiver_id === parseInt(userId)) {\n        setMessages(prev => prev.map(m => m.id === message.id ? {\n          ...message,\n          sender: message.sender_id === user.id ? 'you' : 'them'\n        } : m));\n      }\n    };\n    const handleMessageDeleted = ({\n      messageId\n    }) => {\n      setMessages(prev => prev.filter(m => m.id !== messageId));\n    };\n    const handleUserTyping = ({\n      userId: typingUserId\n    }) => {\n      if (typingUserId === parseInt(userId)) {\n        setIsTyping(true);\n      }\n    };\n    const handleUserStoppedTyping = ({\n      userId: typingUserId\n    }) => {\n      if (typingUserId === parseInt(userId)) {\n        setIsTyping(false);\n      }\n    };\n\n    // Socket event listeners\n    socket.on('message_received', handleMessageReceived);\n    socket.on('message_updated', handleMessageUpdated);\n    socket.on('message_deleted', handleMessageDeleted);\n    socket.on('user_typing', handleUserTyping);\n    socket.on('user_stopped_typing', handleUserStoppedTyping);\n\n    // Cleanup\n    return () => {\n      socket.off('message_received', handleMessageReceived);\n      socket.off('message_updated', handleMessageUpdated);\n      socket.off('message_deleted', handleMessageDeleted);\n      socket.off('user_typing', handleUserTyping);\n      socket.off('user_stopped_typing', handleUserStoppedTyping);\n    };\n  }, [socket, connected, userId, user === null || user === void 0 ? void 0 : user.id]);\n\n  // Auto-scroll to bottom when messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Handle typing indicator\n  const handleTyping = () => {\n    if (!socket || !connected) return;\n\n    // Trimite eveniment de typing\n    socket.emit('typing', userId);\n\n    // Resetează timeout-ul existent\n    if (typingTimeout) clearTimeout(typingTimeout);\n\n    // Setează un nou timeout pentru a opri indicatorul de scriere\n    const timeout = setTimeout(() => {\n      socket.emit('stop_typing', userId);\n    }, 3000);\n    setTypingTimeout(timeout);\n  };\n\n  // Message handlers\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const messageText = newMessage.trim();\n    if (!messageText) return;\n    try {\n      // Oprim indicatorul de typing\n      if (socket && connected) {\n        socket.emit('stop_typing', userId);\n      }\n      const sentMessage = await sendMessage(userId, messageText);\n      setNewMessage('');\n\n      // Adăugăm mesajul trimis în state local\n      setMessages(prev => [...prev, {\n        id: sentMessage.id,\n        text: sentMessage.content,\n        time: sentMessage.created_at,\n        sender: 'you',\n        isRead: false,\n        isEdited: false\n      }]);\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError('Failed to send message');\n    }\n  };\n\n  // Render loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-loading\",\n      children: \"Loading messages...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Main render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getImageUrl(otherUser === null || otherUser === void 0 ? void 0 : otherUser.image),\n        alt: otherUser === null || otherUser === void 0 ? void 0 : otherUser.name,\n        className: \"chat-header-avatar\",\n        onError: e => {\n          e.target.onerror = null;\n          e.target.src = '/default-avatar.png';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"chat-header-name\",\n          children: otherUser === null || otherUser === void 0 ? void 0 : otherUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"chat-header-status\",\n          children: otherUser !== null && otherUser !== void 0 && otherUser.isOnline ? 'Online' : 'Offline'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-messages\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Send a message to start the conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'you' ? 'sent' : 'received'}`,\n        children: [message.sender === 'them' && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: getImageUrl(otherUser === null || otherUser === void 0 ? void 0 : otherUser.image),\n          alt: otherUser === null || otherUser === void 0 ? void 0 : otherUser.name,\n          className: \"message-avatar\",\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = '/default-avatar.png';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-metadata\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: new Date(message.time).toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), message.isEdited && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"edited-tag\",\n              children: \"(edited)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 40\n            }, this), message.sender === 'you' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-status\",\n              children: message.isRead ? 'Read' : 'Sent'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), message.sender === 'you' && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: getImageUrl(user === null || user === void 0 ? void 0 : user.image),\n          alt: user === null || user === void 0 ? void 0 : user.name,\n          className: \"message-avatar\",\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = '/default-avatar.png';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        onKeyDown: handleTyping,\n        placeholder: \"Type a message...\",\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        disabled: !newMessage.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"Ue8hxdPiVXsKx7B5PpB52zDyPno=\", false, function () {\n  return [useParams, useAuth, useSocket];\n});\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useSocket","useAuth","getMessages","sendMessage","markMessageRead","getImageUrl","jsxDEV","_jsxDEV","ChatWindow","otherUser","_s","userId","user","socket","connected","messagesEndRef","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","isTyping","setIsTyping","typingTimeout","setTypingTimeout","loadMessages","data","unreadMessages","filter","msg","sender","isRead","length","forEach","id","catch","console","err","handleMessageReceived","message","sender_id","parseInt","receiver_id","prev","read_at","handleMessageUpdated","map","m","handleMessageDeleted","messageId","handleUserTyping","typingUserId","handleUserStoppedTyping","on","off","_messagesEndRef$curre","current","scrollIntoView","behavior","handleTyping","emit","clearTimeout","timeout","setTimeout","handleSendMessage","e","preventDefault","messageText","trim","sentMessage","text","content","time","created_at","isEdited","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","name","onError","target","onerror","isOnline","Date","toLocaleTimeString","hour","minute","ref","onSubmit","type","value","onChange","onKeyDown","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/TUDU-app/TUDU/frontend/src/components/Chat/ChatWindow.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSocket } from '../../contexts/SocketContext';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { getMessages, sendMessage, markMessageRead } from '../../services/messageApi';\r\nimport { getImageUrl } from '../../utils/imageUtils';\r\nimport './Chat.css';\r\n\r\nconst ChatWindow = ({ otherUser }) => {\r\n  // Hooks și state\r\n  const { userId } = useParams();\r\n  const { user } = useAuth();\r\n  const { socket, connected } = useSocket();\r\n  const messagesEndRef = useRef(null);\r\n  \r\n  // States\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [typingTimeout, setTypingTimeout] = useState(null);\r\n\r\n  // Încărcarea mesajelor\r\n  useEffect(() => {\r\n    const loadMessages = async () => {\r\n      if (!userId) return;\r\n      \r\n      try {\r\n        setLoading(true);\r\n        const data = await getMessages(userId);\r\n        setMessages(data);\r\n        setError(null);\r\n        \r\n        // Marcăm toate mesajele necitite ca fiind citite\r\n        const unreadMessages = data.filter(\r\n          msg => msg.sender === 'them' && !msg.isRead\r\n        );\r\n        \r\n        if (unreadMessages.length > 0) {\r\n          unreadMessages.forEach(msg => {\r\n            if (msg.id) markMessageRead(msg.id).catch(console.error);\r\n          });\r\n        }\r\n      } catch (err) {\r\n        console.error('Error loading messages:', err);\r\n        setError('Failed to load messages');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadMessages();\r\n  }, [userId]);\r\n\r\n  // Socket event handlers\r\n  useEffect(() => {\r\n    if (!socket || !connected || !user?.id) return;\r\n\r\n    const handleMessageReceived = (message) => {\r\n      if (message.sender_id === parseInt(userId) || message.receiver_id === parseInt(userId)) {\r\n        setMessages(prev => [...prev, {\r\n          ...message,\r\n          sender: message.sender_id === user.id ? 'you' : 'them'\r\n        }]);\r\n        \r\n        // Mark message as read if we're the receiver\r\n        if (message.sender_id === parseInt(userId) && !message.read_at) {\r\n          markMessageRead(message.id).catch(console.error);\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleMessageUpdated = (message) => {\r\n      if (message.sender_id === parseInt(userId) || message.receiver_id === parseInt(userId)) {\r\n        setMessages(prev => prev.map(m => \r\n          m.id === message.id ? {\r\n            ...message,\r\n            sender: message.sender_id === user.id ? 'you' : 'them'\r\n          } : m\r\n        ));\r\n      }\r\n    };\r\n\r\n    const handleMessageDeleted = ({ messageId }) => {\r\n      setMessages(prev => prev.filter(m => m.id !== messageId));\r\n    };\r\n\r\n    const handleUserTyping = ({ userId: typingUserId }) => {\r\n      if (typingUserId === parseInt(userId)) {\r\n        setIsTyping(true);\r\n      }\r\n    };\r\n\r\n    const handleUserStoppedTyping = ({ userId: typingUserId }) => {\r\n      if (typingUserId === parseInt(userId)) {\r\n        setIsTyping(false);\r\n      }\r\n    };\r\n\r\n    // Socket event listeners\r\n    socket.on('message_received', handleMessageReceived);\r\n    socket.on('message_updated', handleMessageUpdated);\r\n    socket.on('message_deleted', handleMessageDeleted);\r\n    socket.on('user_typing', handleUserTyping);\r\n    socket.on('user_stopped_typing', handleUserStoppedTyping);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      socket.off('message_received', handleMessageReceived);\r\n      socket.off('message_updated', handleMessageUpdated);\r\n      socket.off('message_deleted', handleMessageDeleted);\r\n      socket.off('user_typing', handleUserTyping);\r\n      socket.off('user_stopped_typing', handleUserStoppedTyping);\r\n    };\r\n  }, [socket, connected, userId, user?.id]);\r\n\r\n  // Auto-scroll to bottom when messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  // Handle typing indicator\r\n  const handleTyping = () => {\r\n    if (!socket || !connected) return;\r\n    \r\n    // Trimite eveniment de typing\r\n    socket.emit('typing', userId);\r\n    \r\n    // Resetează timeout-ul existent\r\n    if (typingTimeout) clearTimeout(typingTimeout);\r\n    \r\n    // Setează un nou timeout pentru a opri indicatorul de scriere\r\n    const timeout = setTimeout(() => {\r\n      socket.emit('stop_typing', userId);\r\n    }, 3000);\r\n    \r\n    setTypingTimeout(timeout);\r\n  };\r\n\r\n  // Message handlers\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const messageText = newMessage.trim();\r\n    \r\n    if (!messageText) return;\r\n\r\n    try {\r\n      // Oprim indicatorul de typing\r\n      if (socket && connected) {\r\n        socket.emit('stop_typing', userId);\r\n      }\r\n      \r\n      const sentMessage = await sendMessage(userId, messageText);\r\n      setNewMessage('');\r\n      \r\n      // Adăugăm mesajul trimis în state local\r\n      setMessages(prev => [...prev, {\r\n        id: sentMessage.id,\r\n        text: sentMessage.content,\r\n        time: sentMessage.created_at,\r\n        sender: 'you',\r\n        isRead: false,\r\n        isEdited: false\r\n      }]);\r\n    } catch (err) {\r\n      console.error('Error sending message:', err);\r\n      setError('Failed to send message');\r\n    }\r\n  };\r\n\r\n  // Render loading state\r\n  if (loading) {\r\n    return <div className=\"chat-loading\">Loading messages...</div>;\r\n  }\r\n\r\n  // Render error state\r\n  if (error) {\r\n    return <div className=\"chat-error\">{error}</div>;\r\n  }\r\n\r\n  // Main render\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <img \r\n          src={getImageUrl(otherUser?.image)} \r\n          alt={otherUser?.name}\r\n          className=\"chat-header-avatar\"\r\n          onError={(e) => {\r\n            e.target.onerror = null;\r\n            e.target.src = '/default-avatar.png';\r\n          }}\r\n        />\r\n        <div className=\"chat-header-info\">\r\n          <h3 className=\"chat-header-name\">{otherUser?.name}</h3>\r\n          <p className=\"chat-header-status\">\r\n            {otherUser?.isOnline ? 'Online' : 'Offline'}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"messages-container\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"no-messages\">\r\n            <p>No messages yet</p>\r\n            <p>Send a message to start the conversation</p>\r\n          </div>\r\n        ) : (\r\n          messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              className={`message ${message.sender === 'you' ? 'sent' : 'received'}`}\r\n            >\r\n              {message.sender === 'them' && (\r\n                <img\r\n                  src={getImageUrl(otherUser?.image)}\r\n                  alt={otherUser?.name}\r\n                  className=\"message-avatar\"\r\n                  onError={(e) => {\r\n                    e.target.onerror = null;\r\n                    e.target.src = '/default-avatar.png';\r\n                  }}\r\n                />\r\n              )}\r\n              <div className=\"message-content\">\r\n                <p>{message.text}</p>\r\n                <div className=\"message-metadata\">\r\n                  <span className=\"message-time\">\r\n                    {new Date(message.time).toLocaleTimeString([], {\r\n                      hour: '2-digit',\r\n                      minute: '2-digit'\r\n                    })}\r\n                  </span>\r\n                  {message.isEdited && <span className=\"edited-tag\">(edited)</span>}\r\n                  {message.sender === 'you' && (\r\n                    <span className=\"message-status\">\r\n                      {message.isRead ? 'Read' : 'Sent'}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              {message.sender === 'you' && (\r\n                <img\r\n                  src={getImageUrl(user?.image)}\r\n                  alt={user?.name}\r\n                  className=\"message-avatar\"\r\n                  onError={(e) => {\r\n                    e.target.onerror = null;\r\n                    e.target.src = '/default-avatar.png';\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n          ))\r\n        )}\r\n        {isTyping && (\r\n          <div className=\"typing-indicator\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <form onSubmit={handleSendMessage} className=\"message-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          onKeyDown={handleTyping}\r\n          placeholder=\"Type a message...\"\r\n          className=\"message-input\"\r\n        />\r\n        <button \r\n          type=\"submit\" \r\n          className=\"send-button\"\r\n          disabled={!newMessage.trim()}\r\n        >\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}