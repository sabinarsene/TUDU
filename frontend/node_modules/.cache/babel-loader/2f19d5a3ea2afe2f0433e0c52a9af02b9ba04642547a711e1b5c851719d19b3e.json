{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps, defineStyle } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { getStatusColorScheme, AlertProvider, AlertStylesProvider } from './alert-context.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst Alert = forwardRef(function Alert2(props, ref) {\n  const {\n    status = \"info\",\n    addRole = true,\n    ...rest\n  } = omitThemingProps(props);\n  const colorScheme = props.colorScheme ?? getStatusColorScheme(status);\n  const styles = useMultiStyleConfig(\"Alert\", {\n    ...props,\n    colorScheme\n  });\n  const alertStyles = defineStyle({\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    ...styles.container\n  });\n  return /* @__PURE__ */jsx(AlertProvider, {\n    value: {\n      status\n    },\n    children: /* @__PURE__ */jsx(AlertStylesProvider, {\n      value: styles,\n      children: /* @__PURE__ */jsx(chakra.div, {\n        \"data-status\": status,\n        role: addRole ? \"alert\" : void 0,\n        ref,\n        ...rest,\n        className: cx(\"chakra-alert\", props.className),\n        __css: alertStyles\n      })\n    })\n  });\n});\nAlert.displayName = \"Alert\";\nexport { Alert };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}