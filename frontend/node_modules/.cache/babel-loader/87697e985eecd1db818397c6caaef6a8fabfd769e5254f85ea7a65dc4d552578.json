{"ast":null,"code":"'use client';\n\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport * as treeView from '@zag-js/tree-view';\nimport { useId, useEffect } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\nconst useTreeView = props => {\n  const {\n    collection,\n    ...treeViewProps\n  } = props;\n  const locale = useLocaleContext();\n  const environment = useEnvironmentContext();\n  const initialContext = {\n    id: useId(),\n    dir: locale.dir,\n    getRootNode: environment.getRootNode,\n    selectedValue: props.defaultSelectedValue,\n    expandedValue: props.defaultExpandedValue,\n    collection,\n    ...treeViewProps\n  };\n  const context = (() => {\n    const {\n      collection: _,\n      ...restProps\n    } = initialContext;\n    return {\n      ...restProps,\n      selectedValue: props.selectedValue,\n      expandedValue: props.expandedValue,\n      onFocusChange: useEvent(props.onFocusChange),\n      onExpandedChange: useEvent(props.onExpandedChange, {\n        sync: true\n      }),\n      onSelectionChange: useEvent(props.onSelectionChange, {\n        sync: true\n      })\n    };\n  })();\n  const [state, send, service] = useMachine(treeView.machine(initialContext), {\n    context\n  });\n  useEffect(() => {\n    service.setContext({\n      collection\n    });\n  }, [collection]);\n  return treeView.connect(state, send, normalizeProps);\n};\nexport { useTreeView };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}