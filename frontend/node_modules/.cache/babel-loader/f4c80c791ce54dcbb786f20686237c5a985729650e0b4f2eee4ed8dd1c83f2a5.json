{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useTimer } from './use-timer.js';\nimport { TimerProvider } from './use-timer-context.js';\nconst TimerRoot = forwardRef((props, ref) => {\n  const [useTimerProps, localProps] = createSplitProps()(props, [\"id\", \"ids\", \"autoStart\", \"interval\", \"countdown\", \"startMs\", \"targetMs\", \"onComplete\", \"onTick\"]);\n  const timer = useTimer(useTimerProps);\n  const mergedProps = mergeProps(timer.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(TimerProvider, {\n    value: timer,\n    children: /* @__PURE__ */jsx(ark.div, {\n      ...mergedProps,\n      ref\n    })\n  });\n});\nTimerRoot.displayName = \"TimerRoot\";\nexport { TimerRoot };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}