{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\Tudu-app\\\\TUDU\\\\frontend\\\\src\\\\components\\\\Chat\\\\ChatList.jsx\";\nimport React from 'react';\nimport { Box, VStack, Text, Avatar } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ChatList({\n  chats,\n  selectedChat,\n  onSelectChat\n}) {\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: 0,\n    align: \"stretch\",\n    className: \"chat-list\",\n    children: chats.map(chat => /*#__PURE__*/_jsxDEV(Box, {\n      className: `chat-item ${(selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.userId) === chat.userId ? 'active' : ''}`,\n      onClick: () => onSelectChat(chat),\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          size: \"sm\",\n          name: chat.userName,\n          src: chat.userAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          ml: 3,\n          flex: 1,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"medium\",\n            children: chat.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"sm\",\n            color: \"gray.500\",\n            noOfLines: 1,\n            children: chat.lastMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xs\",\n            color: \"gray.500\",\n            children: new Date(chat.timestamp).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), chat.unreadCount > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            bg: \"blue.500\",\n            color: \"white\",\n            borderRadius: \"full\",\n            px: 2,\n            py: 1,\n            fontSize: \"xs\",\n            textAlign: \"center\",\n            mt: 1,\n            children: chat.unreadCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)\n    }, chat.userId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","Box","VStack","Text","Avatar","jsxDEV","_jsxDEV","ChatList","chats","selectedChat","onSelectChat","spacing","align","className","children","map","chat","userId","onClick","Flex","size","name","userName","src","userAvatar","fileName","_jsxFileName","lineNumber","columnNumber","ml","flex","fontWeight","fontSize","color","noOfLines","lastMessage","Date","timestamp","toLocaleTimeString","hour","minute","unreadCount","bg","borderRadius","px","py","textAlign","mt","_c","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/Tudu-app/TUDU/frontend/src/components/Chat/ChatList.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, VStack, Text, Avatar } from '@chakra-ui/react';\r\n\r\nexport function ChatList({ chats, selectedChat, onSelectChat }) {\r\n  return (\r\n    <VStack spacing={0} align=\"stretch\" className=\"chat-list\">\r\n      {chats.map((chat) => (\r\n        <Box\r\n          key={chat.userId}\r\n          className={`chat-item ${selectedChat?.userId === chat.userId ? 'active' : ''}`}\r\n          onClick={() => onSelectChat(chat)}\r\n        >\r\n          <Flex align=\"center\">\r\n            <Avatar size=\"sm\" name={chat.userName} src={chat.userAvatar} />\r\n            <Box ml={3} flex={1}>\r\n              <Text fontWeight=\"medium\">{chat.userName}</Text>\r\n              <Text fontSize=\"sm\" color=\"gray.500\" noOfLines={1}>\r\n                {chat.lastMessage}\r\n              </Text>\r\n            </Box>\r\n            <Box>\r\n              <Text fontSize=\"xs\" color=\"gray.500\">\r\n                {new Date(chat.timestamp).toLocaleTimeString([], { \r\n                  hour: '2-digit', \r\n                  minute: '2-digit' \r\n                })}\r\n              </Text>\r\n              {chat.unreadCount > 0 && (\r\n                <Box\r\n                  bg=\"blue.500\"\r\n                  color=\"white\"\r\n                  borderRadius=\"full\"\r\n                  px={2}\r\n                  py={1}\r\n                  fontSize=\"xs\"\r\n                  textAlign=\"center\"\r\n                  mt={1}\r\n                >\r\n                  {chat.unreadCount}\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Flex>\r\n        </Box>\r\n      ))}\r\n    </VStack>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}