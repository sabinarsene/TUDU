{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, useMemo } from 'react';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nimport { chakra } from '../../styled-system/factory.js';\nimport { useSlotRecipe } from '../../styled-system/use-slot-recipe.js';\nimport { ArrowUpIcon, ArrowDownIcon } from '../icons.js';\nconst {\n  withProvider,\n  withContext,\n  useStyles: useStatStyles,\n  PropsProvider\n} = createSlotRecipeContext({\n  key: \"stat\"\n});\nconst StatRoot = withProvider(\"dl\", \"root\");\nconst StatPropsProvider = PropsProvider;\nconst StatLabel = withContext(\"dt\", \"label\");\nconst StatValueText = withContext(\"dd\", \"valueText\");\nconst StatHelpText = withContext(\"span\", \"helpText\");\nconst StatValueUnit = withContext(\"span\", \"valueUnit\");\nconst StatUpIndicator = withContext(\"span\", \"indicator\", {\n  defaultProps: {\n    \"data-type\": \"up\",\n    children: /* @__PURE__ */jsx(ArrowUpIcon, {})\n  }\n});\nconst StatDownIndicator = withContext(\"span\", \"indicator\", {\n  defaultProps: {\n    \"data-type\": \"down\",\n    children: /* @__PURE__ */jsx(ArrowDownIcon, {})\n  }\n});\nconst StatGroup = forwardRef(function StatGroup2(props, ref) {\n  const recipe = useSlotRecipe({\n    key: \"stat\"\n  });\n  const [variantProps, localProps] = useMemo(() => recipe.splitVariantProps(props), [props, recipe]);\n  return /* @__PURE__ */jsx(PropsProvider, {\n    value: variantProps,\n    children: /* @__PURE__ */jsx(chakra.div, {\n      ref,\n      role: \"group\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\",\n      alignItems: \"flex-start\",\n      ...localProps\n    })\n  });\n});\nexport { StatDownIndicator, StatGroup, StatHelpText, StatLabel, StatPropsProvider, StatRoot, StatUpIndicator, StatValueText, StatValueUnit, useStatStyles };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}