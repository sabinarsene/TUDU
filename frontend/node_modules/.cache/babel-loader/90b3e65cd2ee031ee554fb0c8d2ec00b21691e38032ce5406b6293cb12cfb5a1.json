{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\Tudu-app\\\\TUDU\\\\frontend\\\\src\\\\pages\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { getConversations } from '../services/messageApi';\nimport Chat from '../components/Chat';\nimport './ChatPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    user\n  } = useAuth();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load conversations\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        var _location$state;\n        setLoading(true);\n        const data = await getConversations();\n        // Filter out conversations with the current user\n        const filteredConversations = data.filter(conv => conv.user.id !== user.id);\n        setConversations(filteredConversations);\n        setError(null);\n\n        // Check if we have a receiverId in the location state (from profile page)\n        const receiverId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.receiverId;\n\n        // If we have a receiverId in state, navigate to that chat\n        if (receiverId && !userId) {\n          navigate(`/chat/${receiverId}`);\n          return;\n        }\n\n        // If no userId is selected and we have conversations, select the first one\n        if (!userId && filteredConversations.length > 0) {\n          navigate(`/chat/${filteredConversations[0].user.id}`);\n        }\n      } catch (err) {\n        console.error('Error fetching chats:', err);\n        setError('Failed to load conversations');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchChats();\n  }, [userId, navigate, user.id, location.state]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-page-loading\",\n      children: \"Loading chats...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-page-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversations-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-list\",\n        children: conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `conversation-item ${conversation.user.id === parseInt(userId) ? 'active' : ''}`,\n          onClick: () => navigate(`/chat/${conversation.user.id}`),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-avatar\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: conversation.user.image || '/default-avatar.png',\n              alt: conversation.user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), conversation.user.isOnline && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"online-indicator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: conversation.user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"last-message-time\",\n                children: new Date(conversation.lastMessage.time).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"last-message\",\n              children: [conversation.lastMessage.sender === 'you' && 'You: ', conversation.lastMessage.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), conversation.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"unread-count\",\n              children: conversation.unreadCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, conversation.user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: userId ? /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a conversation to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"6qTE9jGXjeAANWDREP72gsU+tj0=\", false, function () {\n  return [useParams, useNavigate, useLocation, useAuth];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","useAuth","getConversations","Chat","jsxDEV","_jsxDEV","ChatPage","_s","userId","navigate","location","user","conversations","setConversations","loading","setLoading","error","setError","fetchChats","_location$state","data","filteredConversations","filter","conv","id","receiverId","state","length","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","conversation","parseInt","onClick","src","image","alt","name","isOnline","Date","lastMessage","time","toLocaleTimeString","sender","text","unreadCount","_c","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/Tudu-app/TUDU/frontend/src/pages/ChatPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { getConversations } from '../services/messageApi';\r\nimport Chat from '../components/Chat';\r\nimport './ChatPage.css';\r\n\r\nconst ChatPage = () => {\r\n  const { userId } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { user } = useAuth();\r\n  const [conversations, setConversations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Load conversations\r\n  useEffect(() => {\r\n    const fetchChats = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getConversations();\r\n        // Filter out conversations with the current user\r\n        const filteredConversations = data.filter(conv => conv.user.id !== user.id);\r\n        setConversations(filteredConversations);\r\n        setError(null);\r\n\r\n        // Check if we have a receiverId in the location state (from profile page)\r\n        const receiverId = location.state?.receiverId;\r\n        \r\n        // If we have a receiverId in state, navigate to that chat\r\n        if (receiverId && !userId) {\r\n          navigate(`/chat/${receiverId}`);\r\n          return;\r\n        }\r\n        \r\n        // If no userId is selected and we have conversations, select the first one\r\n        if (!userId && filteredConversations.length > 0) {\r\n          navigate(`/chat/${filteredConversations[0].user.id}`);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching chats:', err);\r\n        setError('Failed to load conversations');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchChats();\r\n  }, [userId, navigate, user.id, location.state]);\r\n\r\n  if (loading) {\r\n    return <div className=\"chat-page-loading\">Loading chats...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"chat-page-error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-page\">\r\n      <div className=\"conversations-sidebar\">\r\n        <h2>Messages</h2>\r\n        <div className=\"conversations-list\">\r\n          {conversations.map((conversation) => (\r\n            <div\r\n              key={conversation.user.id}\r\n              className={`conversation-item ${\r\n                conversation.user.id === parseInt(userId) ? 'active' : ''\r\n              }`}\r\n              onClick={() => navigate(`/chat/${conversation.user.id}`)}\r\n            >\r\n              <div className=\"conversation-avatar\">\r\n                <img\r\n                  src={conversation.user.image || '/default-avatar.png'}\r\n                  alt={conversation.user.name}\r\n                />\r\n                {conversation.user.isOnline && (\r\n                  <span className=\"online-indicator\" />\r\n                )}\r\n              </div>\r\n              <div className=\"conversation-details\">\r\n                <div className=\"conversation-header\">\r\n                  <h3>{conversation.user.name}</h3>\r\n                  <span className=\"last-message-time\">\r\n                    {new Date(conversation.lastMessage.time).toLocaleTimeString()}\r\n                  </span>\r\n                </div>\r\n                <p className=\"last-message\">\r\n                  {conversation.lastMessage.sender === 'you' && 'You: '}\r\n                  {conversation.lastMessage.text}\r\n                </p>\r\n                {conversation.unreadCount > 0 && (\r\n                  <span className=\"unread-count\">\r\n                    {conversation.unreadCount}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-area\">\r\n        {userId ? (\r\n          <Chat />\r\n        ) : (\r\n          <div className=\"no-chat-selected\">\r\n            <p>Select a conversation to start chatting</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}