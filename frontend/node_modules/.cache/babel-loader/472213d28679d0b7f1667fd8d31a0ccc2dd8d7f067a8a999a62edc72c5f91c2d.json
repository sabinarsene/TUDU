{"ast":null,"code":"// Utility function to get the correct image URL\nexport const getImageUrl = path => {\n  if (!path) {\n    return 'https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y';\n  }\n\n  // If it's already a blob URL (for previews)\n  if (path.startsWith('blob:')) {\n    return path;\n  }\n\n  // If it's already an absolute URL\n  if (path.startsWith('http')) {\n    return path;\n  }\n\n  // If it's a relative path starting with /uploads\n  if (path.startsWith('/uploads')) {\n    const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n    return `${API_URL}${path}`;\n  }\n\n  // If it's a relative path not starting with /uploads\n  if (!path.startsWith('/')) {\n    path = '/uploads/' + path;\n  }\n\n  // Construct the full URL\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n  return `${API_URL}${path}`;\n};\n\n// Utility function to handle image loading errors\nexport const handleImageError = e => {\n  e.target.src = 'https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y';\n};","map":{"version":3,"names":["getImageUrl","path","startsWith","API_URL","process","env","REACT_APP_API_URL","handleImageError","e","target","src"],"sources":["C:/Users/sabin.arsene/Desktop/Tudu-app/TUDU/frontend/src/utils/imageUtils.js"],"sourcesContent":["// Utility function to get the correct image URL\r\nexport const getImageUrl = (path) => {\r\n  if (!path) {\r\n    return 'https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y';\r\n  }\r\n  \r\n  // If it's already a blob URL (for previews)\r\n  if (path.startsWith('blob:')) {\r\n    return path;\r\n  }\r\n  \r\n  // If it's already an absolute URL\r\n  if (path.startsWith('http')) {\r\n    return path;\r\n  }\r\n  \r\n  // If it's a relative path starting with /uploads\r\n  if (path.startsWith('/uploads')) {\r\n    const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n    return `${API_URL}${path}`;\r\n  }\r\n  \r\n  // If it's a relative path not starting with /uploads\r\n  if (!path.startsWith('/')) {\r\n    path = '/uploads/' + path;\r\n  }\r\n  \r\n  // Construct the full URL\r\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n  return `${API_URL}${path}`;\r\n};\r\n\r\n// Utility function to handle image loading errors\r\nexport const handleImageError = (e) => {\r\n  e.target.src = 'https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y';\r\n}; "],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAIC,IAAI,IAAK;EACnC,IAAI,CAACA,IAAI,EAAE;IACT,OAAO,2EAA2E;EACpF;;EAEA;EACA,IAAIA,IAAI,CAACC,UAAU,CAAC,OAAO,CAAC,EAAE;IAC5B,OAAOD,IAAI;EACb;;EAEA;EACA,IAAIA,IAAI,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE;IAC3B,OAAOD,IAAI;EACb;;EAEA;EACA,IAAIA,IAAI,CAACC,UAAU,CAAC,UAAU,CAAC,EAAE;IAC/B,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;IACxE,OAAO,GAAGH,OAAO,GAAGF,IAAI,EAAE;EAC5B;;EAEA;EACA,IAAI,CAACA,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;IACzBD,IAAI,GAAG,WAAW,GAAGA,IAAI;EAC3B;;EAEA;EACA,MAAME,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EACxE,OAAO,GAAGH,OAAO,GAAGF,IAAI,EAAE;AAC5B,CAAC;;AAED;AACA,OAAO,MAAMM,gBAAgB,GAAIC,CAAC,IAAK;EACrCA,CAAC,CAACC,MAAM,CAACC,GAAG,GAAG,2EAA2E;AAC5F,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}