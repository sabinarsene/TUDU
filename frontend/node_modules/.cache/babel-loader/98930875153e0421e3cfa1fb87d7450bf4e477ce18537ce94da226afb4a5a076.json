{"ast":null,"code":"import { isObject } from '@chakra-ui/utils';\nconst isImportant = value => /!(important)?$/.test(value);\nconst withoutImportant = value => typeof value === \"string\" ? value.replace(/!(important)?$/, \"\").trim() : value;\nconst tokenToCSSVar = (scale, value) => theme => {\n  const valueStr = String(value);\n  const important = isImportant(valueStr);\n  const valueWithoutImportant = withoutImportant(valueStr);\n  const key = scale ? `${scale}.${valueWithoutImportant}` : valueWithoutImportant;\n  let transformed = isObject(theme.__cssMap) && key in theme.__cssMap ? theme.__cssMap[key].varRef : value;\n  transformed = withoutImportant(transformed);\n  return important ? `${transformed} !important` : transformed;\n};\nfunction createTransform(options) {\n  const {\n    scale,\n    transform,\n    compose\n  } = options;\n  const fn = (value, theme) => {\n    const _value = tokenToCSSVar(scale, value)(theme);\n    let result = transform?.(_value, theme) ?? _value;\n    if (compose) {\n      result = compose(result, theme);\n    }\n    return result;\n  };\n  return fn;\n}\nexport { createTransform, tokenToCSSVar };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}