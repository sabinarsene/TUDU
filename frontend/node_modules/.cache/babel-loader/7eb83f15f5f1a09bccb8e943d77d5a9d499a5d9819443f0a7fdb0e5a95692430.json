{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { isCssVar } from '../../utils/is.js';\nimport { isCssUnit } from '../../utils/unit.js';\nimport { mapObject } from '../../utils/walk-object.js';\nimport { chakra } from '../../styled-system/factory.js';\nconst valueFn = v => isCssUnit(v) || isCssVar(v) ? v : `token(spacing.${v}, ${v})`;\nconst Bleed = forwardRef(function Bleed2(props, ref) {\n  const {\n    inline,\n    inlineStart,\n    inlineEnd,\n    block,\n    blockStart,\n    blockEnd,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    ...rest,\n    css: {\n      \"--bleed-inline-start\": mapObject(inline ?? inlineStart, valueFn),\n      \"--bleed-inline-end\": mapObject(inline ?? inlineEnd, valueFn),\n      \"--bleed-block-start\": mapObject(block ?? blockStart, valueFn),\n      \"--bleed-block-end\": mapObject(block ?? blockEnd, valueFn),\n      marginInlineStart: \"calc(var(--bleed-inline-start, 0) * -1)\",\n      marginInlineEnd: \"calc(var(--bleed-inline-end, 0) * -1)\",\n      marginBlockStart: \"calc(var(--bleed-block-start, 0) * -1)\",\n      marginBlockEnd: \"calc(var(--bleed-block-end, 0) * -1)\"\n    }\n  });\n});\nexport { Bleed };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}