{"ast":null,"code":"import { API_BASE_URL } from '../config/api';\n\n/**\r\n * Get the full URL for an image path\r\n * @param {string} path - The relative path to the image\r\n * @returns {string} The full URL to the image\r\n */\nexport const getImageUrl = path => {\n  if (!path) return '/default-avatar.png';\n  if (path.startsWith('blob:')) return path;\n  if (path.startsWith('http')) return path;\n  return `${API_BASE_URL}${path.startsWith('/') ? path : `/${path}`}`;\n};\n\n/**\r\n * Get the full URL for a profile image\r\n * @param {string} path - The relative path to the profile image\r\n * @returns {string} The full URL to the profile image\r\n */\nexport const getProfileImageUrl = path => {\n  if (!path) return '/default-avatar.png';\n  if (path.startsWith('blob:')) return path;\n  if (path.startsWith('http')) return path;\n  return `${API_BASE_URL}${path.startsWith('/') ? path : `/${path}`}`;\n};\n\n/**\r\n * Handle image loading errors by setting a default avatar\r\n * @param {Event} e - The error event\r\n */\nexport const handleImageError = e => {\n  e.target.src = '/default-avatar.png';\n};","map":{"version":3,"names":["API_BASE_URL","getImageUrl","path","startsWith","getProfileImageUrl","handleImageError","e","target","src"],"sources":["C:/Users/sabin.arsene/Desktop/Tudu-app/TUDU/frontend/src/utils/imageUtils.js"],"sourcesContent":["import { API_BASE_URL } from '../config/api';\r\n\r\n/**\r\n * Get the full URL for an image path\r\n * @param {string} path - The relative path to the image\r\n * @returns {string} The full URL to the image\r\n */\r\nexport const getImageUrl = (path) => {\r\n  if (!path) return '/default-avatar.png';\r\n  if (path.startsWith('blob:')) return path;\r\n  if (path.startsWith('http')) return path;\r\n  return `${API_BASE_URL}${path.startsWith('/') ? path : `/${path}`}`;\r\n};\r\n\r\n/**\r\n * Get the full URL for a profile image\r\n * @param {string} path - The relative path to the profile image\r\n * @returns {string} The full URL to the profile image\r\n */\r\nexport const getProfileImageUrl = (path) => {\r\n  if (!path) return '/default-avatar.png';\r\n  if (path.startsWith('blob:')) return path;\r\n  if (path.startsWith('http')) return path;\r\n  return `${API_BASE_URL}${path.startsWith('/') ? path : `/${path}`}`;\r\n};\r\n\r\n/**\r\n * Handle image loading errors by setting a default avatar\r\n * @param {Event} e - The error event\r\n */\r\nexport const handleImageError = (e) => {\r\n  e.target.src = '/default-avatar.png';\r\n}; "],"mappings":"AAAA,SAASA,YAAY,QAAQ,eAAe;;AAE5C;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAIC,IAAI,IAAK;EACnC,IAAI,CAACA,IAAI,EAAE,OAAO,qBAAqB;EACvC,IAAIA,IAAI,CAACC,UAAU,CAAC,OAAO,CAAC,EAAE,OAAOD,IAAI;EACzC,IAAIA,IAAI,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE,OAAOD,IAAI;EACxC,OAAO,GAAGF,YAAY,GAAGE,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,GAAGD,IAAI,GAAG,IAAIA,IAAI,EAAE,EAAE;AACrE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,kBAAkB,GAAIF,IAAI,IAAK;EAC1C,IAAI,CAACA,IAAI,EAAE,OAAO,qBAAqB;EACvC,IAAIA,IAAI,CAACC,UAAU,CAAC,OAAO,CAAC,EAAE,OAAOD,IAAI;EACzC,IAAIA,IAAI,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE,OAAOD,IAAI;EACxC,OAAO,GAAGF,YAAY,GAAGE,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,GAAGD,IAAI,GAAG,IAAIA,IAAI,EAAE,EAAE;AACrE,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMG,gBAAgB,GAAIC,CAAC,IAAK;EACrCA,CAAC,CAACC,MAAM,CAACC,GAAG,GAAG,qBAAqB;AACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}