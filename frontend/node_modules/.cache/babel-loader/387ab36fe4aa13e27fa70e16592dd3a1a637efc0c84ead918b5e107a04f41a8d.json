{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { createContext } from '@chakra-ui/utils';\nimport { AnimatePresence } from 'framer-motion';\nimport { useSyncExternalStore } from 'react';\nimport { ToastComponent } from './toast.component.mjs';\nimport { toastStore } from './toast.store.mjs';\nimport { getToastListStyle } from './toast.utils.mjs';\nimport { Portal } from '../portal/portal.mjs';\nconst [ToastOptionProvider, useToastOptionContext] = createContext({\n  name: `ToastOptionsContext`,\n  strict: false\n});\nconst ToastProvider = props => {\n  const state = useSyncExternalStore(toastStore.subscribe, toastStore.getState, toastStore.getState);\n  const {\n    motionVariants,\n    component: Component = ToastComponent,\n    portalProps,\n    animatePresenceProps\n  } = props;\n  const stateKeys = Object.keys(state);\n  const toastList = stateKeys.map(position => {\n    const toasts = state[position];\n    return /* @__PURE__ */jsx(\"div\", {\n      role: \"region\",\n      \"aria-live\": \"polite\",\n      \"aria-label\": `Notifications-${position}`,\n      id: `chakra-toast-manager-${position}`,\n      style: getToastListStyle(position),\n      children: /* @__PURE__ */jsx(AnimatePresence, {\n        ...animatePresenceProps,\n        initial: false,\n        children: toasts.map(toast => /* @__PURE__ */jsx(Component, {\n          motionVariants,\n          ...toast\n        }, toast.id))\n      })\n    }, position);\n  });\n  return /* @__PURE__ */jsx(Portal, {\n    ...portalProps,\n    children: toastList\n  });\n};\nexport { ToastOptionProvider, ToastProvider, useToastOptionContext };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}