{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useFieldContext } from '../field/use-field-context.js';\nimport { useSelectContext } from './use-select-context.js';\nconst SelectHiddenSelect = forwardRef((props, ref) => {\n  const select = useSelectContext();\n  const mergedProps = mergeProps(select.getHiddenSelectProps(), props);\n  const isValueEmpty = select.value.length === 0;\n  const field = useFieldContext();\n  return /* @__PURE__ */jsxs(ark.select, {\n    \"aria-describedby\": field?.ariaDescribedby,\n    ...mergedProps,\n    ref,\n    children: [isValueEmpty && /* @__PURE__ */jsx(\"option\", {\n      value: \"\"\n    }), select.collection.items.map((item, index) => /* @__PURE__ */jsx(\"option\", {\n      value: select.collection.getItemValue(item) ?? \"\",\n      disabled: select.collection.getItemDisabled(item),\n      children: select.collection.stringifyItem(item)\n    }, index))]\n  });\n});\nSelectHiddenSelect.displayName = \"SelectHiddenSelect\";\nexport { SelectHiddenSelect };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}