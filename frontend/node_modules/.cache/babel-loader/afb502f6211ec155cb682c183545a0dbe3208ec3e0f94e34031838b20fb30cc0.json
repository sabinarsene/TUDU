{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\Tudu-app\\\\TUDU\\\\frontend\\\\src\\\\pages\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Flex } from '@chakra-ui/react';\nimport { Chat } from '../components/Chat/Chat';\nimport { ChatList } from '../components/Chat/ChatList';\nimport { useSocket } from '../contexts/SocketContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_URL } from '../config/api';\nimport './ChatPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ChatPage() {\n  _s();\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [chats, setChats] = useState([]);\n  const {\n    socket\n  } = useSocket();\n  const {\n    user\n  } = useAuth();\n  const location = useLocation();\n  useEffect(() => {\n    var _location$state, _location$state2;\n    // Initialize chat if state is passed from profile page\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.receiverId && (_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.receiverName) {\n      setSelectedChat({\n        userId: location.state.receiverId,\n        userName: location.state.receiverName\n      });\n    }\n  }, [location.state]);\n  useEffect(() => {\n    // Încarcă lista de conversații\n    const fetchChats = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/messages/conversations`);\n        setChats(response.data);\n      } catch (error) {\n        console.error('Error fetching chats:', error);\n      }\n    };\n    fetchChats();\n  }, []);\n  useEffect(() => {\n    if (socket) {\n      socket.on('new_message', message => {\n        // Actualizează lista de chat-uri când primești un mesaj nou\n        setChats(prevChats => {\n          const chatIndex = prevChats.findIndex(chat => chat.userId === message.sender_id || chat.userId === message.receiver_id);\n          if (chatIndex === -1) {\n            // Adaugă un nou chat dacă nu există\n            return [{\n              userId: message.sender_id === user.id ? message.receiver_id : message.sender_id,\n              lastMessage: message.content,\n              timestamp: message.created_at,\n              unreadCount: message.sender_id !== user.id ? 1 : 0\n            }, ...prevChats];\n          }\n\n          // Actualizează chat-ul existent\n          const updatedChats = [...prevChats];\n          updatedChats[chatIndex] = {\n            ...updatedChats[chatIndex],\n            lastMessage: message.content,\n            timestamp: message.created_at,\n            unreadCount: message.sender_id !== user.id ? (updatedChats[chatIndex].unreadCount || 0) + 1 : updatedChats[chatIndex].unreadCount\n          };\n          return updatedChats;\n        });\n      });\n      return () => {\n        socket.off('new_message');\n      };\n    }\n  }, [socket, user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-sidebar\",\n      children: /*#__PURE__*/_jsxDEV(ChatList, {\n        chats: chats,\n        selectedChat: selectedChat,\n        onSelectChat: setSelectedChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main\",\n      children: selectedChat ? /*#__PURE__*/_jsxDEV(Chat, {\n        receiverId: selectedChat.userId,\n        receiverName: selectedChat.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n        justify: \"center\",\n        align: \"center\",\n        h: \"100%\",\n        color: \"gray.500\",\n        children: \"Selecteaz\\u0103 o conversa\\u021Bie pentru a \\xEEncepe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"xLvVjUb+MfCXbdfL91rTP+fiVDs=\", false, function () {\n  return [useSocket, useAuth, useLocation];\n});\n_c = ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","Flex","Chat","ChatList","useSocket","useAuth","useLocation","axios","API_URL","jsxDEV","_jsxDEV","ChatPage","_s","selectedChat","setSelectedChat","chats","setChats","socket","user","location","_location$state","_location$state2","state","receiverId","receiverName","userId","userName","fetchChats","response","get","data","error","console","on","message","prevChats","chatIndex","findIndex","chat","sender_id","receiver_id","id","lastMessage","content","timestamp","created_at","unreadCount","updatedChats","off","className","children","onSelectChat","fileName","_jsxFileName","lineNumber","columnNumber","justify","align","h","color","_c","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/Tudu-app/TUDU/frontend/src/pages/ChatPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Flex } from '@chakra-ui/react';\r\nimport { Chat } from '../components/Chat/Chat';\r\nimport { ChatList } from '../components/Chat/ChatList';\r\nimport { useSocket } from '../contexts/SocketContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../config/api';\r\nimport './ChatPage.css';\r\n\r\nexport function ChatPage() {\r\n  const [selectedChat, setSelectedChat] = useState(null);\r\n  const [chats, setChats] = useState([]);\r\n  const { socket } = useSocket();\r\n  const { user } = useAuth();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    // Initialize chat if state is passed from profile page\r\n    if (location.state?.receiverId && location.state?.receiverName) {\r\n      setSelectedChat({\r\n        userId: location.state.receiverId,\r\n        userName: location.state.receiverName\r\n      });\r\n    }\r\n  }, [location.state]);\r\n\r\n  useEffect(() => {\r\n    // Încarcă lista de conversații\r\n    const fetchChats = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/messages/conversations`);\r\n        setChats(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching chats:', error);\r\n      }\r\n    };\r\n\r\n    fetchChats();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('new_message', (message) => {\r\n        // Actualizează lista de chat-uri când primești un mesaj nou\r\n        setChats(prevChats => {\r\n          const chatIndex = prevChats.findIndex(\r\n            chat => chat.userId === message.sender_id || chat.userId === message.receiver_id\r\n          );\r\n\r\n          if (chatIndex === -1) {\r\n            // Adaugă un nou chat dacă nu există\r\n            return [{\r\n              userId: message.sender_id === user.id ? message.receiver_id : message.sender_id,\r\n              lastMessage: message.content,\r\n              timestamp: message.created_at,\r\n              unreadCount: message.sender_id !== user.id ? 1 : 0\r\n            }, ...prevChats];\r\n          }\r\n\r\n          // Actualizează chat-ul existent\r\n          const updatedChats = [...prevChats];\r\n          updatedChats[chatIndex] = {\r\n            ...updatedChats[chatIndex],\r\n            lastMessage: message.content,\r\n            timestamp: message.created_at,\r\n            unreadCount: message.sender_id !== user.id ? \r\n              (updatedChats[chatIndex].unreadCount || 0) + 1 : \r\n              updatedChats[chatIndex].unreadCount\r\n          };\r\n\r\n          return updatedChats;\r\n        });\r\n      });\r\n\r\n      return () => {\r\n        socket.off('new_message');\r\n      };\r\n    }\r\n  }, [socket, user]);\r\n\r\n  return (\r\n    <div className=\"chat-page\">\r\n      <div className=\"chat-sidebar\">\r\n        <ChatList\r\n          chats={chats}\r\n          selectedChat={selectedChat}\r\n          onSelectChat={setSelectedChat}\r\n        />\r\n      </div>\r\n      <div className=\"chat-main\">\r\n        {selectedChat ? (\r\n          <Chat\r\n            receiverId={selectedChat.userId}\r\n            receiverName={selectedChat.userName}\r\n          />\r\n        ) : (\r\n          <Flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            h=\"100%\"\r\n            color=\"gray.500\"\r\n          >\r\n            Selectează o conversație pentru a începe\r\n          </Flex>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}