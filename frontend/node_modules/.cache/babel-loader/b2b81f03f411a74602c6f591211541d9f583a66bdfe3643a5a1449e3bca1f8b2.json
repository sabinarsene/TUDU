{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useCheckbox } from './use-checkbox.js';\nimport { CheckboxProvider } from './use-checkbox-context.js';\nconst CheckboxRoot = forwardRef((props, ref) => {\n  const [useCheckboxProps, localProps] = createSplitProps()(props, [\"checked\", \"defaultChecked\", \"disabled\", \"form\", \"id\", \"ids\", \"invalid\", \"name\", \"onCheckedChange\", \"readOnly\", \"required\", \"value\"]);\n  const checkbox = useCheckbox(useCheckboxProps);\n  const mergedProps = mergeProps(checkbox.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(CheckboxProvider, {\n    value: checkbox,\n    children: /* @__PURE__ */jsx(ark.label, {\n      ...mergedProps,\n      ref\n    })\n  });\n});\nCheckboxRoot.displayName = \"CheckboxRoot\";\nexport { CheckboxRoot };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}