{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\Tudu-app\\\\TUDU\\\\frontend\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSocket } from '../contexts/SocketContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport { getMessages, sendMessage, markMessageRead } from '../services/messageApi';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const {\n    socket,\n    connected\n  } = useSocket();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Load messages\n  useEffect(() => {\n    const loadMessages = async () => {\n      try {\n        setLoading(true);\n        const data = await getMessages(userId);\n        setMessages(data);\n        setError(null);\n      } catch (err) {\n        console.error('Error loading messages:', err);\n        setError('Failed to load messages');\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (userId) {\n      loadMessages();\n    }\n  }, [userId]);\n\n  // Socket event handlers\n  useEffect(() => {\n    if (!socket || !connected) return;\n    const handleMessageReceived = message => {\n      if (message.sender_id === userId || message.receiver_id === userId) {\n        setMessages(prev => [...prev, message]);\n        if (message.sender_id === userId) {\n          markMessageRead(message.id).catch(console.error);\n        }\n      }\n    };\n    const handleMessageUpdated = message => {\n      if (message.sender_id === userId || message.receiver_id === userId) {\n        setMessages(prev => prev.map(m => m.id === message.id ? message : m));\n      }\n    };\n    const handleMessageDeleted = ({\n      messageId\n    }) => {\n      setMessages(prev => prev.filter(m => m.id !== messageId));\n    };\n    socket.on('message_received', handleMessageReceived);\n    socket.on('message_updated', handleMessageUpdated);\n    socket.on('message_deleted', handleMessageDeleted);\n    return () => {\n      socket.off('message_received', handleMessageReceived);\n      socket.off('message_updated', handleMessageUpdated);\n      socket.off('message_deleted', handleMessageDeleted);\n    };\n  }, [socket, connected, userId]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Send message\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    try {\n      await sendMessage(userId, newMessage.trim());\n      setNewMessage('');\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError('Failed to send message');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-loading\",\n      children: \"Loading messages...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'you' ? 'sent' : 'received'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-time\",\n            children: new Date(message.time).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), message.isEdited && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"edited-tag\",\n            children: \"(edited)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"Lw78FquazIzpALVOVBDuPLXvMcg=\", false, function () {\n  return [useParams, useAuth, useSocket];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useSocket","useAuth","getMessages","sendMessage","markMessageRead","jsxDEV","_jsxDEV","Chat","_s","userId","user","socket","connected","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","loadMessages","data","err","console","handleMessageReceived","message","sender_id","receiver_id","prev","id","catch","handleMessageUpdated","map","m","handleMessageDeleted","messageId","filter","on","off","handleSendMessage","e","preventDefault","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sender","text","Date","time","toLocaleTimeString","isEdited","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/Tudu-app/TUDU/frontend/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSocket } from '../contexts/SocketContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { getMessages, sendMessage, markMessageRead } from '../services/messageApi';\r\nimport './Chat.css';\r\n\r\nconst Chat = () => {\r\n  const { userId } = useParams();\r\n  const { user } = useAuth();\r\n  const { socket, connected } = useSocket();\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Scroll to bottom of messages\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // Load messages\r\n  useEffect(() => {\r\n    const loadMessages = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getMessages(userId);\r\n        setMessages(data);\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error('Error loading messages:', err);\r\n        setError('Failed to load messages');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (userId) {\r\n      loadMessages();\r\n    }\r\n  }, [userId]);\r\n\r\n  // Socket event handlers\r\n  useEffect(() => {\r\n    if (!socket || !connected) return;\r\n\r\n    const handleMessageReceived = (message) => {\r\n      if (message.sender_id === userId || message.receiver_id === userId) {\r\n        setMessages(prev => [...prev, message]);\r\n        if (message.sender_id === userId) {\r\n          markMessageRead(message.id).catch(console.error);\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleMessageUpdated = (message) => {\r\n      if (message.sender_id === userId || message.receiver_id === userId) {\r\n        setMessages(prev => prev.map(m => \r\n          m.id === message.id ? message : m\r\n        ));\r\n      }\r\n    };\r\n\r\n    const handleMessageDeleted = ({ messageId }) => {\r\n      setMessages(prev => prev.filter(m => m.id !== messageId));\r\n    };\r\n\r\n    socket.on('message_received', handleMessageReceived);\r\n    socket.on('message_updated', handleMessageUpdated);\r\n    socket.on('message_deleted', handleMessageDeleted);\r\n\r\n    return () => {\r\n      socket.off('message_received', handleMessageReceived);\r\n      socket.off('message_updated', handleMessageUpdated);\r\n      socket.off('message_deleted', handleMessageDeleted);\r\n    };\r\n  }, [socket, connected, userId]);\r\n\r\n  // Scroll to bottom when messages change\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Send message\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n\r\n    try {\r\n      await sendMessage(userId, newMessage.trim());\r\n      setNewMessage('');\r\n    } catch (err) {\r\n      console.error('Error sending message:', err);\r\n      setError('Failed to send message');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"chat-loading\">Loading messages...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"chat-error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"messages-container\">\r\n        {messages.map((message) => (\r\n          <div\r\n            key={message.id}\r\n            className={`message ${message.sender === 'you' ? 'sent' : 'received'}`}\r\n          >\r\n            <div className=\"message-content\">\r\n              <p>{message.text}</p>\r\n              <span className=\"message-time\">\r\n                {new Date(message.time).toLocaleTimeString()}\r\n              </span>\r\n              {message.isEdited && <span className=\"edited-tag\">(edited)</span>}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <form onSubmit={handleSendMessage} className=\"message-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n          className=\"message-input\"\r\n        />\r\n        <button type=\"submit\" className=\"send-button\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}