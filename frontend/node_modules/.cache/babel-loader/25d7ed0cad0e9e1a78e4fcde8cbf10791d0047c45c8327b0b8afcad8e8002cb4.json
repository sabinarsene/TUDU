{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { cx } from '../../utils/cx.js';\nimport { isString } from '../../utils/is.js';\nimport { omit } from '../../utils/omit.js';\nimport { createRecipeContext } from '../../styled-system/create-recipe-context.js';\nimport { chakra } from '../../styled-system/factory.js';\nconst {\n  useRecipeResult,\n  PropsProvider\n} = createRecipeContext({\n  key: \"separator\"\n});\nconst Separator = forwardRef(function Separator2(props, ref) {\n  const {\n    styles,\n    className,\n    props: otherProps\n  } = useRecipeResult(props);\n  const orientation = props.orientation || \"horizontal\";\n  return /* @__PURE__ */jsx(chakra.span, {\n    ref,\n    role: isString(orientation) ? \"separator\" : \"presentation\",\n    \"aria-orientation\": isString(orientation) ? orientation : void 0,\n    ...omit(otherProps, [\"orientation\"]),\n    className: cx(className, props.className),\n    css: [styles, props.css]\n  });\n});\nconst SeparatorPropsProvider = PropsProvider;\nexport { Separator, SeparatorPropsProvider };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}