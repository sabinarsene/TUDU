{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\Tudu-app\\\\TUDU\\\\frontend\\\\src\\\\contexts\\\\SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport { API_BASE_URL } from '../config/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport function SocketProvider({\n  children\n}) {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token || !user) {\n      console.log('[Socket] No authentication token or user');\n      return;\n    }\n\n    // Initialize socket connection\n    const socket = io(API_BASE_URL, {\n      path: '/socket.io',\n      transports: ['websocket', 'polling'],\n      auth: {\n        token\n      },\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n\n    // Connection event handlers\n    socket.on('connect', () => {\n      console.log('[Socket] Connected to server');\n      setConnected(true);\n    });\n    socket.on('connect_error', error => {\n      console.error('[Socket] Connection error:', error.message);\n      setConnected(false);\n    });\n    socket.on('disconnect', reason => {\n      console.log('[Socket] Disconnected:', reason);\n      setConnected(false);\n    });\n    setSocket(socket);\n\n    // Cleanup on unmount\n    return () => {\n      if (socket) {\n        console.log('[Socket] Cleaning up connection');\n        socket.removeAllListeners();\n        socket.close();\n      }\n    };\n  }, [user]);\n\n  // Message sending helper\n  const sendMessage = useCallback((receiverId, content, replyTo = null) => {\n    if (socket !== null && socket !== void 0 && socket.connected) {\n      socket.emit('send_message', {\n        receiverId,\n        content,\n        replyTo\n      });\n    }\n  }, [socket]);\n\n  // Message editing helper\n  const editMessage = useCallback((messageId, content) => {\n    if (socket !== null && socket !== void 0 && socket.connected) {\n      socket.emit('edit_message', {\n        messageId,\n        content\n      });\n    }\n  }, [socket]);\n\n  // Message deletion helper\n  const deleteMessage = useCallback(messageId => {\n    if (socket !== null && socket !== void 0 && socket.connected) {\n      socket.emit('delete_message', {\n        messageId\n      });\n    }\n  }, [socket]);\n\n  // Typing notification helpers\n  const startTyping = useCallback(receiverId => {\n    if (socket !== null && socket !== void 0 && socket.connected) {\n      socket.emit('typing', receiverId);\n    }\n  }, [socket]);\n  const stopTyping = useCallback(receiverId => {\n    if (socket !== null && socket !== void 0 && socket.connected) {\n      socket.emit('stop_typing', receiverId);\n    }\n  }, [socket]);\n\n  // Message read helper\n  const markMessageRead = useCallback(messageId => {\n    if (socket !== null && socket !== void 0 && socket.connected) {\n      socket.emit('message_read', {\n        messageId\n      });\n    }\n  }, [socket]);\n  const value = {\n    socket,\n    connected,\n    sendMessage,\n    editMessage,\n    deleteMessage,\n    startTyping,\n    stopTyping,\n    markMessageRead\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(SocketProvider, \"iHhaZnui0iDKUh6St1N3L8nOPgo=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nexport const useSocket = () => {\n  _s2();\n  return useContext(SocketContext);\n};\n_s2(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useCallback","io","useAuth","API_BASE_URL","jsxDEV","_jsxDEV","SocketContext","SocketProvider","children","_s","socket","setSocket","connected","setConnected","user","token","localStorage","getItem","console","log","path","transports","auth","reconnection","reconnectionAttempts","reconnectionDelay","on","error","message","reason","removeAllListeners","close","sendMessage","receiverId","content","replyTo","emit","editMessage","messageId","deleteMessage","startTyping","stopTyping","markMessageRead","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSocket","_s2","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/Tudu-app/TUDU/frontend/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, useCallback } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useAuth } from './AuthContext';\r\nimport { API_BASE_URL } from '../config/api';\r\n\r\nconst SocketContext = createContext();\r\n\r\nexport function SocketProvider({ children }) {\r\n  const [socket, setSocket] = useState(null);\r\n  const [connected, setConnected] = useState(false);\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token || !user) {\r\n      console.log('[Socket] No authentication token or user');\r\n      return;\r\n    }\r\n\r\n    // Initialize socket connection\r\n    const socket = io(API_BASE_URL, {\r\n      path: '/socket.io',\r\n      transports: ['websocket', 'polling'],\r\n      auth: { token },\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000\r\n    });\r\n\r\n    // Connection event handlers\r\n    socket.on('connect', () => {\r\n      console.log('[Socket] Connected to server');\r\n      setConnected(true);\r\n    });\r\n\r\n    socket.on('connect_error', (error) => {\r\n      console.error('[Socket] Connection error:', error.message);\r\n      setConnected(false);\r\n    });\r\n\r\n    socket.on('disconnect', (reason) => {\r\n      console.log('[Socket] Disconnected:', reason);\r\n      setConnected(false);\r\n    });\r\n\r\n    setSocket(socket);\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      if (socket) {\r\n        console.log('[Socket] Cleaning up connection');\r\n        socket.removeAllListeners();\r\n        socket.close();\r\n      }\r\n    };\r\n  }, [user]);\r\n\r\n  // Message sending helper\r\n  const sendMessage = useCallback((receiverId, content, replyTo = null) => {\r\n    if (socket?.connected) {\r\n      socket.emit('send_message', {\r\n        receiverId,\r\n        content,\r\n        replyTo\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  // Message editing helper\r\n  const editMessage = useCallback((messageId, content) => {\r\n    if (socket?.connected) {\r\n      socket.emit('edit_message', {\r\n        messageId,\r\n        content\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  // Message deletion helper\r\n  const deleteMessage = useCallback((messageId) => {\r\n    if (socket?.connected) {\r\n      socket.emit('delete_message', {\r\n        messageId\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  // Typing notification helpers\r\n  const startTyping = useCallback((receiverId) => {\r\n    if (socket?.connected) {\r\n      socket.emit('typing', receiverId);\r\n    }\r\n  }, [socket]);\r\n\r\n  const stopTyping = useCallback((receiverId) => {\r\n    if (socket?.connected) {\r\n      socket.emit('stop_typing', receiverId);\r\n    }\r\n  }, [socket]);\r\n\r\n  // Message read helper\r\n  const markMessageRead = useCallback((messageId) => {\r\n    if (socket?.connected) {\r\n      socket.emit('message_read', {\r\n        messageId\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  const value = {\r\n    socket,\r\n    connected,\r\n    sendMessage,\r\n    editMessage,\r\n    deleteMessage,\r\n    startTyping,\r\n    stopTyping,\r\n    markMessageRead\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useSocket = () => useContext(SocketContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}