{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useSplitterContext } from './use-splitter-context.js';\nconst SplitterResizeTrigger = forwardRef((props, ref) => {\n  const [triggerProps, localProps] = createSplitProps()(props, [\"disabled\", \"id\", \"step\"]);\n  const splitter = useSplitterContext();\n  const mergedProps = mergeProps(splitter.getResizeTriggerProps(triggerProps), localProps);\n  return /* @__PURE__ */jsx(ark.button, {\n    ref,\n    ...mergedProps\n  });\n});\nSplitterResizeTrigger.displayName = \"SplitterResizeTrigger\";\nexport { SplitterResizeTrigger };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}