{"ast":null,"code":"\"use strict\";\n\nimport { isFunction } from './is.js';\nconst splitPropFn = (props, predicate) => {\n  const rest = {};\n  const result = {};\n  const allKeys = Object.keys(props);\n  for (const key of allKeys) {\n    if (predicate(key)) {\n      result[key] = props[key];\n    } else {\n      rest[key] = props[key];\n    }\n  }\n  return [result, rest];\n};\nconst splitProps = (props, keys) => {\n  const predicate = isFunction(keys) ? keys : key => keys.includes(key);\n  return splitPropFn(props, predicate);\n};\nconst createSplitProps = keys => {\n  return function split(props) {\n    return splitProps(props, keys);\n  };\n};\nexport { createSplitProps, splitProps };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}