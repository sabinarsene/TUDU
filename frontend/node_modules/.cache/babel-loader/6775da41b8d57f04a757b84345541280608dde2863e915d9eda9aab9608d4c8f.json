{"ast":null,"code":"import { analyzeBreakpoints } from '@chakra-ui/utils';\nimport { createThemeVars } from './create-theme-vars.mjs';\nimport { omitVars } from './theme-tokens.mjs';\nfunction toCSSVar(rawTheme) {\n  const theme = omitVars(rawTheme);\n  const {\n    /**\r\n     * This is more like a dictionary of tokens users will type `green.500`,\r\n     * and their equivalent css variable.\r\n     */\n    cssMap,\n    /**\r\n     * The extracted css variables will be stored here, and used in\r\n     * the emotion's <Global/> component to attach variables to `:root`\r\n     */\n    cssVars\n  } = createThemeVars(theme);\n  const defaultCssVars = {\n    \"--chakra-ring-inset\": \"var(--chakra-empty,/*!*/ /*!*/)\",\n    \"--chakra-ring-offset-width\": \"0px\",\n    \"--chakra-ring-offset-color\": \"#fff\",\n    \"--chakra-ring-color\": \"rgba(66, 153, 225, 0.6)\",\n    \"--chakra-ring-offset-shadow\": \"0 0 #0000\",\n    \"--chakra-ring-shadow\": \"0 0 #0000\",\n    \"--chakra-space-x-reverse\": \"0\",\n    \"--chakra-space-y-reverse\": \"0\"\n  };\n  Object.assign(theme, {\n    __cssVars: {\n      ...defaultCssVars,\n      ...cssVars\n    },\n    __cssMap: cssMap,\n    __breakpoints: analyzeBreakpoints(theme.breakpoints)\n  });\n  return theme;\n}\nexport { toCSSVar };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}