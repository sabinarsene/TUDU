{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Switch, useSwitchContext } from '@ark-ui/react/switch';\nimport { forwardRef } from 'react';\nimport { dataAttr } from '../../utils/attr.js';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nimport { chakra } from '../../styled-system/factory.js';\nconst {\n  withProvider,\n  withContext,\n  useStyles: useSwitchStyles,\n  PropsProvider\n} = createSlotRecipeContext({\n  key: \"switch\"\n});\nconst SwitchRootProvider = withProvider(Switch.RootProvider, \"root\", {\n  forwardAsChild: true\n});\nconst SwitchRoot = withProvider(Switch.Root, \"root\", {\n  forwardAsChild: true\n});\nconst SwitchPropsProvider = PropsProvider;\nconst SwitchLabel = withContext(Switch.Label, \"label\", {\n  forwardAsChild: true\n});\nconst SwitchThumb = withContext(Switch.Thumb, \"thumb\", {\n  forwardAsChild: true\n});\nconst SwitchControl = withContext(Switch.Control, \"control\", {\n  forwardAsChild: true,\n  defaultProps: {\n    children: /* @__PURE__ */jsx(SwitchThumb, {})\n  }\n});\nconst SwitchIndicator = forwardRef(function SwitchIndicator2(props, ref) {\n  const api = useSwitchContext();\n  const styles = useSwitchStyles();\n  const {\n    fallback,\n    children,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(chakra.span, {\n    ref,\n    \"data-checked\": dataAttr(api.checked),\n    ...rest,\n    css: [styles.indicator, props.css],\n    children: api.checked ? children : fallback\n  });\n});\nconst SwitchThumbIndicator = forwardRef(function SwitchThumbIndicator2(props, ref) {\n  const api = useSwitchContext();\n  const {\n    fallback,\n    children,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(chakra.span, {\n    ref,\n    \"data-checked\": dataAttr(api.checked),\n    ...rest,\n    children: api.checked ? children : fallback\n  });\n});\nconst SwitchContext = Switch.Context;\nconst SwitchHiddenInput = Switch.HiddenInput;\nexport { SwitchContext, SwitchControl, SwitchHiddenInput, SwitchIndicator, SwitchLabel, SwitchPropsProvider, SwitchRoot, SwitchRootProvider, SwitchThumb, SwitchThumbIndicator, useSwitchStyles };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}