{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { RadioGroup } from '@ark-ui/react/radio-group';\nimport { forwardRef } from 'react';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nimport { Radiomark } from '../radiomark/radiomark.js';\nconst {\n  withProvider,\n  withContext,\n  useStyles: useRadioGroupStyles,\n  PropsProvider\n} = createSlotRecipeContext({\n  key: \"radioGroup\"\n});\nconst RadioGroupRootProvider = withProvider(RadioGroup.RootProvider, \"root\", {\n  forwardAsChild: true\n});\nconst RadioGroupRoot = withProvider(RadioGroup.Root, \"root\", {\n  forwardAsChild: true\n});\nconst RadioGroupPropsProvider = PropsProvider;\nconst RadioGroupLabel = withContext(RadioGroup.Label, \"label\", {\n  forwardAsChild: true\n});\nconst RadioGroupItem = withContext(RadioGroup.Item, \"item\", {\n  forwardAsChild: true\n});\nconst RadioGroupItemText = withContext(RadioGroup.ItemText, \"itemText\", {\n  forwardAsChild: true\n});\nconst RadioGroupItemControl = withContext(RadioGroup.ItemControl, \"itemControl\", {\n  forwardAsChild: true\n});\nconst RadioGroupItemIndicator = forwardRef(function RadioGroupItemIndicator2(props, ref) {\n  const styles = useRadioGroupStyles();\n  return /* @__PURE__ */jsx(RadioGroup.ItemContext, {\n    children: itemState => /* @__PURE__ */jsx(RadioGroup.ItemControl, {\n      asChild: true,\n      children: /* @__PURE__ */jsx(Radiomark, {\n        ref,\n        unstyled: true,\n        ...props,\n        checked: itemState.checked,\n        disabled: itemState.disabled,\n        css: [styles[\"itemControl\"], props.css]\n      })\n    })\n  });\n});\nconst RadioGroupContext = RadioGroup.Context;\nconst RadioGroupItemContext = RadioGroup.ItemContext;\nconst RadioGroupItemHiddenInput = RadioGroup.ItemHiddenInput;\nexport { RadioGroupContext, RadioGroupItem, RadioGroupItemContext, RadioGroupItemControl, RadioGroupItemHiddenInput, RadioGroupItemIndicator, RadioGroupItemText, RadioGroupLabel, RadioGroupPropsProvider, RadioGroupRoot, RadioGroupRootProvider, useRadioGroupStyles };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}