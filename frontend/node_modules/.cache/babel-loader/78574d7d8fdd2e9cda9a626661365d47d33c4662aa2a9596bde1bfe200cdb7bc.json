{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { usePopoverContext, usePopoverStyles } from './popover-context.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst resolveVar = (scale, value) => value ? `${scale}.${value}, ${value}` : void 0;\nfunction PopoverArrow(props) {\n  const {\n    bg,\n    bgColor,\n    backgroundColor,\n    shadow,\n    boxShadow,\n    shadowColor,\n    ...rest\n  } = props;\n  const {\n    getArrowProps,\n    getArrowInnerProps\n  } = usePopoverContext();\n  const styles = usePopoverStyles();\n  const arrowBg = bg ?? bgColor ?? backgroundColor;\n  const arrowShadow = shadow ?? boxShadow;\n  return /* @__PURE__ */jsx(chakra.div, {\n    ...getArrowProps(),\n    className: \"chakra-popover__arrow-positioner\",\n    children: /* @__PURE__ */jsx(chakra.div, {\n      className: cx(\"chakra-popover__arrow\", props.className),\n      ...getArrowInnerProps(rest),\n      __css: {\n        \"--popper-arrow-shadow-color\": resolveVar(\"colors\", shadowColor),\n        \"--popper-arrow-bg\": resolveVar(\"colors\", arrowBg),\n        \"--popper-arrow-shadow\": resolveVar(\"shadows\", arrowShadow),\n        ...styles.arrow\n      }\n    })\n  });\n}\nPopoverArrow.displayName = \"PopoverArrow\";\nexport { PopoverArrow };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}