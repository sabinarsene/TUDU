{"ast":null,"code":"import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\nfunction hasKeyframesChanged(keyframes) {\n  const current = keyframes[0];\n  if (keyframes.length === 1) return true;\n  for (let i = 0; i < keyframes.length; i++) {\n    if (keyframes[i] !== current) return true;\n  }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n  /**\r\n   * Check if we're able to animate between the start and end keyframes,\r\n   * and throw a warning if we're attempting to animate between one that's\r\n   * animatable and another that isn't.\r\n   */\n  const originKeyframe = keyframes[0];\n  if (originKeyframe === null) return false;\n  /**\r\n   * These aren't traditionally animatable but we do support them.\r\n   * In future we could look into making this more generic or replacing\r\n   * this function with mix() === mixImmediate\r\n   */\n  if (name === \"display\" || name === \"visibility\") return true;\n  const targetKeyframe = keyframes[keyframes.length - 1];\n  const isOriginAnimatable = isAnimatable(originKeyframe, name);\n  const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n  warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n  // Always skip if any of these are true\n  if (!isOriginAnimatable || !isTargetAnimatable) {\n    return false;\n  }\n  return hasKeyframesChanged(keyframes) || (type === \"spring\" || isGenerator(type)) && velocity;\n}\nexport { canAnimate };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}