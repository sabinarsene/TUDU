{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { ColorModeProvider } from '../color-mode/color-mode-provider.mjs';\nimport { CSSReset, CSSPolyfill } from '../css-reset/css-reset.mjs';\nimport { ThemeProvider, GlobalStyle } from '../system/providers.mjs';\nimport { PortalManager } from '../portal/portal-manager.mjs';\nimport { EnvironmentProvider } from '../env/env.mjs';\nconst Provider = props => {\n  const {\n    children,\n    colorModeManager,\n    portalZIndex,\n    resetScope,\n    resetCSS = true,\n    theme = {},\n    environment,\n    cssVarsRoot,\n    disableEnvironment,\n    disableGlobalStyle\n  } = props;\n  const _children = /* @__PURE__ */jsx(EnvironmentProvider, {\n    environment,\n    disabled: disableEnvironment,\n    children\n  });\n  return /* @__PURE__ */jsx(ThemeProvider, {\n    theme,\n    cssVarsRoot,\n    children: /* @__PURE__ */jsxs(ColorModeProvider, {\n      colorModeManager,\n      options: theme.config,\n      children: [resetCSS ? /* @__PURE__ */jsx(CSSReset, {\n        scope: resetScope\n      }) : /* @__PURE__ */jsx(CSSPolyfill, {}), !disableGlobalStyle && /* @__PURE__ */jsx(GlobalStyle, {}), portalZIndex ? /* @__PURE__ */jsx(PortalManager, {\n        zIndex: portalZIndex,\n        children: _children\n      }) : _children]\n    })\n  });\n};\nexport { Provider };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}