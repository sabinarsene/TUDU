{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { parts } from './segment-group.anatomy.js';\nimport { useSegmentGroupContext } from './use-segment-group-context.js';\nimport { SegmentGroupItemProvider } from './use-segment-group-item-context.js';\nimport { SegmentGroupItemPropsProvider } from './use-segment-group-item-props-context.js';\nconst SegmentGroupItem = forwardRef((props, ref) => {\n  const [itemProps, localProps] = createSplitProps()(props, [\"value\", \"disabled\", \"invalid\"]);\n  const segmentGroup = useSegmentGroupContext();\n  const mergedProps = mergeProps(segmentGroup.getItemProps(itemProps), parts.item.attrs, localProps);\n  const itemState = segmentGroup.getItemState(itemProps);\n  return /* @__PURE__ */jsx(SegmentGroupItemPropsProvider, {\n    value: itemProps,\n    children: /* @__PURE__ */jsx(SegmentGroupItemProvider, {\n      value: itemState,\n      children: /* @__PURE__ */jsx(ark.label, {\n        ...mergedProps,\n        ref\n      })\n    })\n  });\n});\nSegmentGroupItem.displayName = \"SegmentGroupItem\";\nexport { SegmentGroupItem };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}