{"ast":null,"code":"'use client';\n\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { Fragment as Fragment$1 } from 'react';\nimport { Mark } from './mark.mjs';\nimport { useHighlight } from './use-highlight.mjs';\nfunction Highlight(props) {\n  const {\n    children,\n    query,\n    styles\n  } = props;\n  if (typeof children !== \"string\") {\n    throw new Error(\"The children prop of Highlight must be a string\");\n  }\n  const chunks = useHighlight({\n    query,\n    text: children\n  });\n  return /* @__PURE__ */jsx(Fragment, {\n    children: chunks.map((chunk, index) => {\n      return chunk.match ? /* @__PURE__ */jsx(Mark, {\n        sx: styles,\n        children: chunk.text\n      }, index) : /* @__PURE__ */jsx(Fragment$1, {\n        children: chunk.text\n      }, index);\n    })\n  });\n}\nexport { Highlight };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}