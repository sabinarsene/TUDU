{"ast":null,"code":"import { createTransform } from './create-transform.mjs';\nimport { pipe } from './pipe.mjs';\nimport { toConfig, logical } from './prop-config.mjs';\nimport { transformFunctions } from './transform-functions.mjs';\nconst t = {\n  borderWidths: toConfig(\"borderWidths\"),\n  borderStyles: toConfig(\"borderStyles\"),\n  colors: toConfig(\"colors\"),\n  borders: toConfig(\"borders\"),\n  gradients: toConfig(\"gradients\", transformFunctions.gradient),\n  radii: toConfig(\"radii\", transformFunctions.px),\n  space: toConfig(\"space\", pipe(transformFunctions.vh, transformFunctions.px)),\n  spaceT: toConfig(\"space\", pipe(transformFunctions.vh, transformFunctions.px)),\n  degreeT(property) {\n    return {\n      property,\n      transform: transformFunctions.degree\n    };\n  },\n  prop(property, scale, transform) {\n    return {\n      property,\n      scale,\n      ...(scale && {\n        transform: createTransform({\n          scale,\n          transform\n        })\n      })\n    };\n  },\n  propT(property, transform) {\n    return {\n      property,\n      transform\n    };\n  },\n  sizes: toConfig(\"sizes\", pipe(transformFunctions.vh, transformFunctions.px)),\n  sizesT: toConfig(\"sizes\", pipe(transformFunctions.vh, transformFunctions.fraction)),\n  shadows: toConfig(\"shadows\"),\n  logical,\n  blur: toConfig(\"blur\", transformFunctions.blur)\n};\nexport { t, transformFunctions as transforms };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}