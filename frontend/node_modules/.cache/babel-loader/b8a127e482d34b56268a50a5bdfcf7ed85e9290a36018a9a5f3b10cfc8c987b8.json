{"ast":null,"code":"// src/create-anatomy.ts\nvar createAnatomy = (name, parts = []) => ({\n  parts: (...values) => {\n    if (isEmpty(parts)) {\n      return createAnatomy(name, values);\n    }\n    throw new Error(\"createAnatomy().parts(...) should only be called once. Did you mean to use .extendWith(...) ?\");\n  },\n  extendWith: (...values) => createAnatomy(name, [...parts, ...values]),\n  rename: newName => createAnatomy(newName, parts),\n  keys: () => parts,\n  build: () => [...new Set(parts)].reduce((prev, part) => Object.assign(prev, {\n    [part]: {\n      selector: [`&[data-scope=\"${toKebabCase(name)}\"][data-part=\"${toKebabCase(part)}\"]`, `& [data-scope=\"${toKebabCase(name)}\"][data-part=\"${toKebabCase(part)}\"]`].join(\", \"),\n      attrs: {\n        \"data-scope\": toKebabCase(name),\n        \"data-part\": toKebabCase(part)\n      }\n    }\n  }), {})\n});\nvar toKebabCase = value => value.replace(/([A-Z])([A-Z])/g, \"$1-$2\").replace(/([a-z])([A-Z])/g, \"$1-$2\").replace(/[\\s_]+/g, \"-\").toLowerCase();\nvar isEmpty = v => v.length === 0;\nexport { createAnatomy };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}