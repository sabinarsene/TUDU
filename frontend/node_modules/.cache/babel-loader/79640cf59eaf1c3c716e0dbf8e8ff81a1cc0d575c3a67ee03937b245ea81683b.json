{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Popover } from '@ark-ui/react/popover';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nconst {\n  withRootProvider,\n  withContext,\n  useStyles: usePopoverStyles,\n  PropsProvider\n} = createSlotRecipeContext({\n  key: \"popover\"\n});\nconst PopoverRootProvider = withRootProvider(Popover.RootProvider);\nconst PopoverRoot = withRootProvider(Popover.Root);\nconst PopoverPropsProvider = PropsProvider;\nconst PopoverTrigger = withContext(Popover.Trigger, \"trigger\", {\n  forwardAsChild: true\n});\nconst PopoverPositioner = withContext(Popover.Positioner, \"positioner\", {\n  forwardAsChild: true\n});\nconst PopoverContent = withContext(Popover.Content, \"content\", {\n  forwardAsChild: true\n});\nconst PopoverArrowTip = withContext(Popover.ArrowTip, \"arrowTip\", {\n  forwardAsChild: true\n});\nconst PopoverArrow = withContext(Popover.Arrow, \"arrow\", {\n  forwardAsChild: true,\n  defaultProps: {\n    children: /* @__PURE__ */jsx(PopoverArrowTip, {})\n  }\n});\nconst PopoverCloseTrigger = withContext(Popover.CloseTrigger, \"closeTrigger\", {\n  forwardAsChild: true\n});\nconst PopoverIndicator = withContext(Popover.Indicator, \"indicator\", {\n  forwardAsChild: true\n});\nconst PopoverTitle = withContext(Popover.Title, \"title\", {\n  forwardAsChild: true\n});\nconst PopoverDescription = withContext(Popover.Description, \"description\", {\n  forwardAsChild: true\n});\nconst PopoverFooter = withContext(\"footer\", \"footer\");\nconst PopoverHeader = withContext(\"header\", \"header\");\nconst PopoverBody = withContext(\"div\", \"body\");\nconst PopoverAnchor = withContext(Popover.Anchor, void 0, {\n  forwardAsChild: true\n});\nconst PopoverContext = Popover.Context;\nexport { PopoverAnchor, PopoverArrow, PopoverArrowTip, PopoverBody, PopoverCloseTrigger, PopoverContent, PopoverContext, PopoverDescription, PopoverFooter, PopoverHeader, PopoverIndicator, PopoverPositioner, PopoverPropsProvider, PopoverRoot, PopoverRootProvider, PopoverTitle, PopoverTrigger, usePopoverStyles };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}