{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Select } from '@ark-ui/react/select';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nimport { CheckIcon, ChevronDownIcon } from '../icons.js';\nconst {\n  withProvider,\n  withContext,\n  useStyles: useSelectStyles,\n  PropsProvider\n} = createSlotRecipeContext({\n  key: \"select\"\n});\nconst SelectRootProvider = withProvider(Select.RootProvider, \"root\", {\n  forwardAsChild: true\n});\nconst SelectRoot = withProvider(Select.Root, \"root\", {\n  forwardAsChild: true\n});\nconst SelectPropsProvider = PropsProvider;\nconst SelectTrigger = withContext(Select.Trigger, \"trigger\", {\n  forwardAsChild: true\n});\nconst SelectPositioner = withContext(Select.Positioner, \"positioner\", {\n  forwardAsChild: true\n});\nconst SelectContent = withContext(Select.Content, \"content\", {\n  forwardAsChild: true\n});\nconst SelectValueText = withContext(Select.ValueText, \"valueText\", {\n  forwardAsChild: true\n});\nconst SelectClearTrigger = withContext(Select.ClearTrigger, \"clearTrigger\", {\n  forwardAsChild: true\n});\nconst SelectItemGroup = withContext(Select.ItemGroup, \"itemGroup\", {\n  forwardAsChild: true\n});\nconst SelectItemGroupLabel = withContext(Select.ItemGroupLabel, \"itemGroupLabel\", {\n  forwardAsChild: true\n});\nconst SelectItem = withContext(Select.Item, \"item\", {\n  forwardAsChild: true\n});\nconst SelectItemText = withContext(Select.ItemText, \"itemText\", {\n  forwardAsChild: true\n});\nconst SelectItemIndicator = withContext(Select.ItemIndicator, \"itemIndicator\", {\n  forwardAsChild: true,\n  defaultProps: {\n    children: /* @__PURE__ */jsx(CheckIcon, {})\n  }\n});\nconst SelectIndicatorGroup = withContext(\"div\", \"indicatorGroup\");\nconst SelectIndicator = withContext(Select.Indicator, \"indicator\", {\n  forwardAsChild: true,\n  defaultProps: {\n    children: /* @__PURE__ */jsx(ChevronDownIcon, {})\n  }\n});\nconst SelectControl = withContext(Select.Control, \"control\", {\n  forwardAsChild: true\n});\nconst SelectLabel = withContext(Select.Label, \"label\", {\n  forwardAsChild: true\n});\nconst SelectContext = Select.Context;\nconst SelectHiddenSelect = Select.HiddenSelect;\nconst SelectItemContext = Select.ItemContext;\nexport { SelectClearTrigger, SelectContent, SelectContext, SelectControl, SelectHiddenSelect, SelectIndicator, SelectIndicatorGroup, SelectItem, SelectItemContext, SelectItemGroup, SelectItemGroupLabel, SelectItemIndicator, SelectItemText, SelectLabel, SelectPositioner, SelectPropsProvider, SelectRoot, SelectRootProvider, SelectTrigger, SelectValueText, useSelectStyles };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}