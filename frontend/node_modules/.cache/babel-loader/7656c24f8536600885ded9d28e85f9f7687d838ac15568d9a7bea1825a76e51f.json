{"ast":null,"code":"\"use strict\";\n\nimport { isString } from '../utils/is.js';\nconst REFERENCE_REGEX = /({([^}]*)})/g;\nconst CURLY_REGEX = /[{}]/g;\nconst TOKEN_PATH_REGEX = /\\w+\\.\\w+/;\nconst getReferences = value => {\n  if (!isString(value)) return [];\n  const matches = value.match(REFERENCE_REGEX);\n  if (!matches) return [];\n  return matches.map(match => match.replace(CURLY_REGEX, \"\")).map(value2 => value2.trim());\n};\nconst hasReference = value => REFERENCE_REGEX.test(value);\nfunction expandReferences(token) {\n  if (!token.extensions?.references) {\n    return token.extensions?.cssVar?.ref ?? token.value;\n  }\n  const references = token.extensions.references ?? {};\n  token.value = Object.keys(references).reduce((valueStr, key) => {\n    const referenceToken = references[key];\n    if (referenceToken.extensions.conditions) {\n      return valueStr;\n    }\n    const value = expandReferences(referenceToken);\n    return valueStr.replace(`{${key}}`, value);\n  }, token.value);\n  delete token.extensions.references;\n  return token.value;\n}\nexport { TOKEN_PATH_REGEX, expandReferences, getReferences, hasReference };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}