{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useProgress } from './use-progress.js';\nimport { ProgressProvider } from './use-progress-context.js';\nconst ProgressRoot = forwardRef((props, ref) => {\n  const [progressProps, localProps] = createSplitProps()(props, [\"defaultValue\", \"id\", \"ids\", \"max\", \"min\", \"onValueChange\", \"orientation\", \"translations\", \"value\"]);\n  const progress = useProgress(progressProps);\n  const mergedProps = mergeProps(progress.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(ProgressProvider, {\n    value: progress,\n    children: /* @__PURE__ */jsx(ark.div, {\n      ...mergedProps,\n      ref\n    })\n  });\n});\nProgressRoot.displayName = \"ProgressRoot\";\nexport { ProgressRoot };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}