{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useMachine, normalizeProps, mergeProps, useActor } from '@zag-js/react';\nimport * as toast from '@zag-js/toast';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { ToastProvider } from './use-toast-context.js';\nconst Toaster = forwardRef((props, ref) => {\n  const {\n    toaster,\n    children,\n    ...rest\n  } = props;\n  const [state, send] = useMachine(toaster.machine);\n  const placement = state.context.placement;\n  const api = toast.group.connect(state, send, normalizeProps);\n  const toasts = api.getToastsByPlacement(placement);\n  const mergedProps = mergeProps(api.getGroupProps({\n    placement\n  }), rest);\n  return /* @__PURE__ */jsx(ark.div, {\n    ...mergedProps,\n    ref,\n    children: toasts.map(toast2 => /* @__PURE__ */jsx(ToastActor, {\n      value: toast2,\n      children: ctx => children(ctx)\n    }, toast2.id))\n  });\n});\nToaster.displayName = \"Toaster\";\nconst ToastActor = props => {\n  const [state, send] = useActor(props.value);\n  const api = toast.connect(state, send, normalizeProps);\n  return /* @__PURE__ */jsx(ToastProvider, {\n    value: api,\n    children: props.children(state.context)\n  });\n};\nexport { Toaster };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}