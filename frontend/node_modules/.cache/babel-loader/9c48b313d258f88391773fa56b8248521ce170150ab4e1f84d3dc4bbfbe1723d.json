{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\TUDU-app\\\\TUDU\\\\frontend\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSocket } from '../contexts/SocketContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport { getMessages, sendMessage, markMessageRead } from '../services/messageApi';\nimport { getProfileImageUrl, handleImageError } from '../utils/imageUtils';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const {\n    socket,\n    connected\n  } = useSocket();\n  const [messages, setMessages] = useState([]);\n  const [chatPartner, setChatPartner] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Load messages\n  useEffect(() => {\n    const loadMessages = async () => {\n      try {\n        setLoading(true);\n        const data = await getMessages(userId);\n        setMessages(data);\n\n        // Extract chat partner details from the first message\n        if (data && data.length > 0) {\n          const firstMessage = data[0];\n          const partnerDetails = firstMessage.sender === 'you' ? firstMessage.receiverDetails : firstMessage.senderDetails;\n          setChatPartner({\n            id: partnerDetails.id,\n            name: `${partnerDetails.first_name} ${partnerDetails.last_name}`,\n            image: partnerDetails.profile_image,\n            isOnline: partnerDetails.isOnline,\n            lastSeen: partnerDetails.lastSeen\n          });\n        }\n        setError(null);\n      } catch (err) {\n        console.error('Error loading messages:', err);\n        setError('Failed to load messages');\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (userId) {\n      loadMessages();\n    }\n  }, [userId]);\n\n  // Socket event handlers\n  useEffect(() => {\n    if (!socket || !connected) return;\n    const handleMessageReceived = message => {\n      if (message.sender_id === userId || message.receiver_id === userId) {\n        setMessages(prev => [...prev, {\n          ...message,\n          sender: message.sender_id === user.id ? 'you' : 'them'\n        }]);\n        if (message.sender_id === userId) {\n          markMessageRead(message.id).catch(console.error);\n        }\n      }\n    };\n    const handleMessageUpdated = message => {\n      if (message.sender_id === userId || message.receiver_id === userId) {\n        setMessages(prev => prev.map(m => m.id === message.id ? {\n          ...message,\n          sender: message.sender_id === user.id ? 'you' : 'them'\n        } : m));\n      }\n    };\n    const handleMessageDeleted = ({\n      messageId\n    }) => {\n      setMessages(prev => prev.filter(m => m.id !== messageId));\n    };\n    socket.on('message_received', handleMessageReceived);\n    socket.on('message_updated', handleMessageUpdated);\n    socket.on('message_deleted', handleMessageDeleted);\n    return () => {\n      socket.off('message_received', handleMessageReceived);\n      socket.off('message_updated', handleMessageUpdated);\n      socket.off('message_deleted', handleMessageDeleted);\n    };\n  }, [socket, connected, userId, user.id]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Send message\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    try {\n      const sentMessage = await sendMessage(userId, newMessage.trim());\n      setNewMessage('');\n\n      // Add the sent message to the messages state locally\n      // This ensures the message appears immediately without waiting for socket\n      setMessages(prev => [...prev, {\n        id: sentMessage.id,\n        text: sentMessage.content,\n        time: sentMessage.created_at,\n        sender: 'you',\n        isRead: false,\n        isEdited: false\n      }]);\n    } catch (err) {\n      console.error('Error sending message:', err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-loading\",\n      children: \"Loading messages...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [chatPartner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-partner-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: getProfileImageUrl(chatPartner.image),\n          alt: chatPartner.name,\n          className: \"chat-partner-avatar\",\n          onError: handleImageError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-partner-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: chatPartner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-indicator ${chatPartner.isOnline ? 'online' : 'offline'}`,\n            children: chatPartner.isOnline ? 'Online' : 'Offline'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'you' ? 'sent' : 'received'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-time\",\n            children: new Date(message.time).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), message.isEdited && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"edited-tag\",\n            children: \"(edited)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"FvUyjZMRUlccwqM0PffXjfi2ZIc=\", false, function () {\n  return [useParams, useAuth, useSocket];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useSocket","useAuth","getMessages","sendMessage","markMessageRead","getProfileImageUrl","handleImageError","jsxDEV","_jsxDEV","Chat","_s","userId","user","socket","connected","messages","setMessages","chatPartner","setChatPartner","newMessage","setNewMessage","loading","setLoading","error","setError","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","loadMessages","data","length","firstMessage","partnerDetails","sender","receiverDetails","senderDetails","id","name","first_name","last_name","image","profile_image","isOnline","lastSeen","err","console","handleMessageReceived","message","sender_id","receiver_id","prev","catch","handleMessageUpdated","map","m","handleMessageDeleted","messageId","filter","on","off","handleSendMessage","e","preventDefault","trim","sentMessage","text","content","time","created_at","isRead","isEdited","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onError","Date","toLocaleTimeString","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/TUDU-app/TUDU/frontend/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSocket } from '../contexts/SocketContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { getMessages, sendMessage, markMessageRead } from '../services/messageApi';\r\nimport { getProfileImageUrl, handleImageError } from '../utils/imageUtils';\r\nimport './Chat.css';\r\n\r\nconst Chat = () => {\r\n  const { userId } = useParams();\r\n  const { user } = useAuth();\r\n  const { socket, connected } = useSocket();\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatPartner, setChatPartner] = useState(null);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Scroll to bottom of messages\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // Load messages\r\n  useEffect(() => {\r\n    const loadMessages = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getMessages(userId);\r\n        setMessages(data);\r\n        \r\n        // Extract chat partner details from the first message\r\n        if (data && data.length > 0) {\r\n          const firstMessage = data[0];\r\n          const partnerDetails = firstMessage.sender === 'you' \r\n            ? firstMessage.receiverDetails \r\n            : firstMessage.senderDetails;\r\n            \r\n          setChatPartner({\r\n            id: partnerDetails.id,\r\n            name: `${partnerDetails.first_name} ${partnerDetails.last_name}`,\r\n            image: partnerDetails.profile_image,\r\n            isOnline: partnerDetails.isOnline,\r\n            lastSeen: partnerDetails.lastSeen\r\n          });\r\n        }\r\n        \r\n        setError(null);\r\n      } catch (err) {\r\n        console.error('Error loading messages:', err);\r\n        setError('Failed to load messages');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (userId) {\r\n      loadMessages();\r\n    }\r\n  }, [userId]);\r\n\r\n  // Socket event handlers\r\n  useEffect(() => {\r\n    if (!socket || !connected) return;\r\n\r\n    const handleMessageReceived = (message) => {\r\n      if (message.sender_id === userId || message.receiver_id === userId) {\r\n        setMessages(prev => [...prev, {\r\n          ...message,\r\n          sender: message.sender_id === user.id ? 'you' : 'them'\r\n        }]);\r\n        if (message.sender_id === userId) {\r\n          markMessageRead(message.id).catch(console.error);\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleMessageUpdated = (message) => {\r\n      if (message.sender_id === userId || message.receiver_id === userId) {\r\n        setMessages(prev => prev.map(m => \r\n          m.id === message.id ? {\r\n            ...message,\r\n            sender: message.sender_id === user.id ? 'you' : 'them'\r\n          } : m\r\n        ));\r\n      }\r\n    };\r\n\r\n    const handleMessageDeleted = ({ messageId }) => {\r\n      setMessages(prev => prev.filter(m => m.id !== messageId));\r\n    };\r\n\r\n    socket.on('message_received', handleMessageReceived);\r\n    socket.on('message_updated', handleMessageUpdated);\r\n    socket.on('message_deleted', handleMessageDeleted);\r\n\r\n    return () => {\r\n      socket.off('message_received', handleMessageReceived);\r\n      socket.off('message_updated', handleMessageUpdated);\r\n      socket.off('message_deleted', handleMessageDeleted);\r\n    };\r\n  }, [socket, connected, userId, user.id]);\r\n\r\n  // Scroll to bottom when messages change\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Send message\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n\r\n    try {\r\n      const sentMessage = await sendMessage(userId, newMessage.trim());\r\n      setNewMessage('');\r\n      \r\n      // Add the sent message to the messages state locally\r\n      // This ensures the message appears immediately without waiting for socket\r\n      setMessages(prev => [...prev, {\r\n        id: sentMessage.id,\r\n        text: sentMessage.content,\r\n        time: sentMessage.created_at,\r\n        sender: 'you',\r\n        isRead: false,\r\n        isEdited: false\r\n      }]);\r\n    } catch (err) {\r\n      console.error('Error sending message:', err);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"chat-loading\">Loading messages...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"chat-error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {chatPartner && (\r\n        <div className=\"chat-header\">\r\n          <div className=\"chat-partner-info\">\r\n            <img \r\n              src={getProfileImageUrl(chatPartner.image)} \r\n              alt={chatPartner.name}\r\n              className=\"chat-partner-avatar\"\r\n              onError={handleImageError}\r\n            />\r\n            <div className=\"chat-partner-details\">\r\n              <h3>{chatPartner.name}</h3>\r\n              <span className={`status-indicator ${chatPartner.isOnline ? 'online' : 'offline'}`}>\r\n                {chatPartner.isOnline ? 'Online' : 'Offline'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"messages-container\">\r\n        {messages.map((message) => (\r\n          <div\r\n            key={message.id}\r\n            className={`message ${message.sender === 'you' ? 'sent' : 'received'}`}\r\n          >\r\n            <div className=\"message-content\">\r\n              <p>{message.text}</p>\r\n              <span className=\"message-time\">\r\n                {new Date(message.time).toLocaleTimeString()}\r\n              </span>\r\n              {message.isEdited && <span className=\"edited-tag\">(edited)</span>}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <form onSubmit={handleSendMessage} className=\"message-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n          className=\"message-input\"\r\n        />\r\n        <button type=\"submit\" className=\"send-button\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}