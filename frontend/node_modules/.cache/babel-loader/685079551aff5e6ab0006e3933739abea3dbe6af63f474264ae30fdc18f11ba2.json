{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\TUDU-app\\\\TUDU\\\\frontend\\\\src\\\\pages\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSocket } from '../contexts/SocketContext';\nimport { getConversations } from '../services/messageApi';\nimport Chat from '../components/Chat';\nimport './ChatPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  var _conversations$find;\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    user\n  } = useAuth();\n  const {\n    socket,\n    connected\n  } = useSocket();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load conversations\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        var _location$state;\n        setLoading(true);\n        const data = await getConversations();\n\n        // Verificăm dacă avem date valide\n        if (!data || !Array.isArray(data)) {\n          setConversations([]);\n          setError('Nu s-au putut încărca conversațiile');\n          setLoading(false);\n          return;\n        }\n\n        // Nu mai filtrăm conversațiile, deoarece backend-ul ar trebui să returneze doar conversațiile utilizatorului curent\n        setConversations(data);\n        setError(null);\n\n        // Check if we have a receiverId in the location state (from profile page)\n        const receiverId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.receiverId;\n\n        // If we have a receiverId in state, navigate to that chat\n        if (receiverId && !userId) {\n          navigate(`/chat/${receiverId}`);\n          return;\n        }\n      } catch (err) {\n        console.error('Error fetching chats:', err);\n        setError('Failed to load conversations');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchChats();\n  }, [userId, navigate, user.id, location.state]);\n\n  // Listen for new messages to update conversations list\n  useEffect(() => {\n    if (!socket || !connected) return;\n    const handleMessageReceived = async message => {\n      // If this message is relevant to the current user (sender or receiver)\n      if (message.sender_id === user.id || message.receiver_id === user.id) {\n        // Refresh the conversations list\n        try {\n          const data = await getConversations();\n          if (data && Array.isArray(data)) {\n            setConversations(data);\n          }\n        } catch (err) {\n          console.error('Error refreshing conversations after new message:', err);\n        }\n      }\n    };\n    socket.on('message_received', handleMessageReceived);\n    return () => {\n      socket.off('message_received', handleMessageReceived);\n    };\n  }, [socket, connected, user.id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-page-loading\",\n      children: \"Loading chats...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-page-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversations-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => navigate('/home'),\n          \"aria-label\": \"Back to Homepage\",\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-list\",\n        children: conversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-conversations\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No conversations yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-conversations-hint\",\n            children: \"Start a chat from a user's profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this) : conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `conversation-item ${conversation.user.id === parseInt(userId) ? 'active' : ''}`,\n          onClick: () => navigate(`/chat/${conversation.user.id}`),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-avatar\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: conversation.user.image || '/default-avatar.png',\n              alt: conversation.user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), conversation.user.isOnline && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"online-indicator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: conversation.user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"last-message-time\",\n                children: new Date(conversation.lastMessage.time).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"last-message\",\n              children: [conversation.lastMessage.sender === 'you' && 'You: ', conversation.lastMessage.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), conversation.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"unread-count\",\n              children: conversation.unreadCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, conversation.user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: userId ? /*#__PURE__*/_jsxDEV(Chat, {\n        otherUser: (_conversations$find = conversations.find(c => c.user.id === parseInt(userId))) === null || _conversations$find === void 0 ? void 0 : _conversations$find.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a conversation to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"or find a user to chat with from their profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"/pDisRg5gvyMvW6u05QgCRZaReI=\", false, function () {\n  return [useParams, useNavigate, useLocation, useAuth, useSocket];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","useAuth","useSocket","getConversations","Chat","jsxDEV","_jsxDEV","ChatPage","_s","_conversations$find","userId","navigate","location","user","socket","connected","conversations","setConversations","loading","setLoading","error","setError","fetchChats","_location$state","data","Array","isArray","receiverId","state","err","console","id","handleMessageReceived","message","sender_id","receiver_id","on","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","conversation","parseInt","src","image","alt","name","isOnline","Date","lastMessage","time","toLocaleTimeString","sender","text","unreadCount","otherUser","find","c","_c","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/TUDU-app/TUDU/frontend/src/pages/ChatPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSocket } from '../contexts/SocketContext';\nimport { getConversations } from '../services/messageApi';\nimport Chat from '../components/Chat';\nimport './ChatPage.css';\n\nconst ChatPage = () => {\n  const { userId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { user } = useAuth();\n  const { socket, connected } = useSocket();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load conversations\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        setLoading(true);\n        const data = await getConversations();\n        \n        // Verificăm dacă avem date valide\n        if (!data || !Array.isArray(data)) {\n          setConversations([]);\n          setError('Nu s-au putut încărca conversațiile');\n          setLoading(false);\n          return;\n        }\n        \n        // Nu mai filtrăm conversațiile, deoarece backend-ul ar trebui să returneze doar conversațiile utilizatorului curent\n        setConversations(data);\n        setError(null);\n\n        // Check if we have a receiverId in the location state (from profile page)\n        const receiverId = location.state?.receiverId;\n        \n        // If we have a receiverId in state, navigate to that chat\n        if (receiverId && !userId) {\n          navigate(`/chat/${receiverId}`);\n          return;\n        }\n      } catch (err) {\n        console.error('Error fetching chats:', err);\n        setError('Failed to load conversations');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchChats();\n  }, [userId, navigate, user.id, location.state]);\n\n  // Listen for new messages to update conversations list\n  useEffect(() => {\n    if (!socket || !connected) return;\n\n    const handleMessageReceived = async (message) => {\n      // If this message is relevant to the current user (sender or receiver)\n      if (message.sender_id === user.id || message.receiver_id === user.id) {\n        // Refresh the conversations list\n        try {\n          const data = await getConversations();\n          if (data && Array.isArray(data)) {\n            setConversations(data);\n          }\n        } catch (err) {\n          console.error('Error refreshing conversations after new message:', err);\n        }\n      }\n    };\n\n    socket.on('message_received', handleMessageReceived);\n\n    return () => {\n      socket.off('message_received', handleMessageReceived);\n    };\n  }, [socket, connected, user.id]);\n\n  if (loading) {\n    return <div className=\"chat-page-loading\">Loading chats...</div>;\n  }\n\n  if (error) {\n    return <div className=\"chat-page-error\">{error}</div>;\n  }\n\n  return (\n    <div className=\"chat-page\">\n      <div className=\"conversations-sidebar\">\n        <div className=\"conversations-header\">\n          <button \n            className=\"back-button\" \n            onClick={() => navigate('/home')}\n            aria-label=\"Back to Homepage\"\n          >\n            &#8592;\n          </button>\n          <h2>Messages</h2>\n        </div>\n        <div className=\"conversations-list\">\n          {conversations.length === 0 ? (\n            <div className=\"no-conversations\">\n              <p>No conversations yet</p>\n              <p className=\"no-conversations-hint\">Start a chat from a user's profile</p>\n            </div>\n          ) : (\n            conversations.map((conversation) => (\n              <div\n                key={conversation.user.id}\n                className={`conversation-item ${\n                  conversation.user.id === parseInt(userId) ? 'active' : ''\n                }`}\n                onClick={() => navigate(`/chat/${conversation.user.id}`)}\n              >\n                <div className=\"conversation-avatar\">\n                  <img\n                    src={conversation.user.image || '/default-avatar.png'}\n                    alt={conversation.user.name}\n                  />\n                  {conversation.user.isOnline && (\n                    <span className=\"online-indicator\" />\n                  )}\n                </div>\n                <div className=\"conversation-details\">\n                  <div className=\"conversation-header\">\n                    <h3>{conversation.user.name}</h3>\n                    <span className=\"last-message-time\">\n                      {new Date(conversation.lastMessage.time).toLocaleTimeString()}\n                    </span>\n                  </div>\n                  <p className=\"last-message\">\n                    {conversation.lastMessage.sender === 'you' && 'You: '}\n                    {conversation.lastMessage.text}\n                  </p>\n                  {conversation.unreadCount > 0 && (\n                    <span className=\"unread-count\">\n                      {conversation.unreadCount}\n                    </span>\n                  )}\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n      <div className=\"chat-area\">\n        {userId ? (\n          <Chat \n            otherUser={conversations.find(c => c.user.id === parseInt(userId))?.user}\n          />\n        ) : (\n          <div className=\"no-chat-selected\">\n            <p>Select a conversation to start chatting</p>\n            <p>or find a user to chat with from their profile</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACtE,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,mBAAA;EACrB,MAAM;IAAEC;EAAO,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEa;EAAK,CAAC,GAAGZ,OAAO,CAAC,CAAC;EAC1B,MAAM;IAAEa,MAAM;IAAEC;EAAU,CAAC,GAAGb,SAAS,CAAC,CAAC;EACzC,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMyB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QAAA,IAAAC,eAAA;QACFJ,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMK,IAAI,GAAG,MAAMrB,gBAAgB,CAAC,CAAC;;QAErC;QACA,IAAI,CAACqB,IAAI,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;UACjCP,gBAAgB,CAAC,EAAE,CAAC;UACpBI,QAAQ,CAAC,qCAAqC,CAAC;UAC/CF,UAAU,CAAC,KAAK,CAAC;UACjB;QACF;;QAEA;QACAF,gBAAgB,CAACO,IAAI,CAAC;QACtBH,QAAQ,CAAC,IAAI,CAAC;;QAEd;QACA,MAAMM,UAAU,IAAAJ,eAAA,GAAGX,QAAQ,CAACgB,KAAK,cAAAL,eAAA,uBAAdA,eAAA,CAAgBI,UAAU;;QAE7C;QACA,IAAIA,UAAU,IAAI,CAACjB,MAAM,EAAE;UACzBC,QAAQ,CAAC,SAASgB,UAAU,EAAE,CAAC;UAC/B;QACF;MACF,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACV,KAAK,CAAC,uBAAuB,EAAES,GAAG,CAAC;QAC3CR,QAAQ,CAAC,8BAA8B,CAAC;MAC1C,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACZ,MAAM,EAAEC,QAAQ,EAAEE,IAAI,CAACkB,EAAE,EAAEnB,QAAQ,CAACgB,KAAK,CAAC,CAAC;;EAE/C;EACA/B,SAAS,CAAC,MAAM;IACd,IAAI,CAACiB,MAAM,IAAI,CAACC,SAAS,EAAE;IAE3B,MAAMiB,qBAAqB,GAAG,MAAOC,OAAO,IAAK;MAC/C;MACA,IAAIA,OAAO,CAACC,SAAS,KAAKrB,IAAI,CAACkB,EAAE,IAAIE,OAAO,CAACE,WAAW,KAAKtB,IAAI,CAACkB,EAAE,EAAE;QACpE;QACA,IAAI;UACF,MAAMP,IAAI,GAAG,MAAMrB,gBAAgB,CAAC,CAAC;UACrC,IAAIqB,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;YAC/BP,gBAAgB,CAACO,IAAI,CAAC;UACxB;QACF,CAAC,CAAC,OAAOK,GAAG,EAAE;UACZC,OAAO,CAACV,KAAK,CAAC,mDAAmD,EAAES,GAAG,CAAC;QACzE;MACF;IACF,CAAC;IAEDf,MAAM,CAACsB,EAAE,CAAC,kBAAkB,EAAEJ,qBAAqB,CAAC;IAEpD,OAAO,MAAM;MACXlB,MAAM,CAACuB,GAAG,CAAC,kBAAkB,EAAEL,qBAAqB,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,CAAClB,MAAM,EAAEC,SAAS,EAAEF,IAAI,CAACkB,EAAE,CAAC,CAAC;EAEhC,IAAIb,OAAO,EAAE;IACX,oBAAOZ,OAAA;MAAKgC,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClE;EAEA,IAAIvB,KAAK,EAAE;IACT,oBAAOd,OAAA;MAAKgC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEnB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACvD;EAEA,oBACErC,OAAA;IAAKgC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjC,OAAA;MAAKgC,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpCjC,OAAA;QAAKgC,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCjC,OAAA;UACEgC,SAAS,EAAC,aAAa;UACvBM,OAAO,EAAEA,CAAA,KAAMjC,QAAQ,CAAC,OAAO,CAAE;UACjC,cAAW,kBAAkB;UAAA4B,QAAA,EAC9B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTrC,OAAA;UAAAiC,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACNrC,OAAA;QAAKgC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAChCvB,aAAa,CAAC6B,MAAM,KAAK,CAAC,gBACzBvC,OAAA;UAAKgC,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BjC,OAAA;YAAAiC,QAAA,EAAG;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC3BrC,OAAA;YAAGgC,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAkC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC,GAEN3B,aAAa,CAAC8B,GAAG,CAAEC,YAAY,iBAC7BzC,OAAA;UAEEgC,SAAS,EAAE,qBACTS,YAAY,CAAClC,IAAI,CAACkB,EAAE,KAAKiB,QAAQ,CAACtC,MAAM,CAAC,GAAG,QAAQ,GAAG,EAAE,EACxD;UACHkC,OAAO,EAAEA,CAAA,KAAMjC,QAAQ,CAAC,SAASoC,YAAY,CAAClC,IAAI,CAACkB,EAAE,EAAE,CAAE;UAAAQ,QAAA,gBAEzDjC,OAAA;YAAKgC,SAAS,EAAC,qBAAqB;YAAAC,QAAA,gBAClCjC,OAAA;cACE2C,GAAG,EAAEF,YAAY,CAAClC,IAAI,CAACqC,KAAK,IAAI,qBAAsB;cACtDC,GAAG,EAAEJ,YAAY,CAAClC,IAAI,CAACuC;YAAK;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,EACDI,YAAY,CAAClC,IAAI,CAACwC,QAAQ,iBACzB/C,OAAA;cAAMgC,SAAS,EAAC;YAAkB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CACrC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNrC,OAAA;YAAKgC,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnCjC,OAAA;cAAKgC,SAAS,EAAC,qBAAqB;cAAAC,QAAA,gBAClCjC,OAAA;gBAAAiC,QAAA,EAAKQ,YAAY,CAAClC,IAAI,CAACuC;cAAI;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjCrC,OAAA;gBAAMgC,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,EAChC,IAAIe,IAAI,CAACP,YAAY,CAACQ,WAAW,CAACC,IAAI,CAAC,CAACC,kBAAkB,CAAC;cAAC;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACNrC,OAAA;cAAGgC,SAAS,EAAC,cAAc;cAAAC,QAAA,GACxBQ,YAAY,CAACQ,WAAW,CAACG,MAAM,KAAK,KAAK,IAAI,OAAO,EACpDX,YAAY,CAACQ,WAAW,CAACI,IAAI;YAAA;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,EACHI,YAAY,CAACa,WAAW,GAAG,CAAC,iBAC3BtD,OAAA;cAAMgC,SAAS,EAAC,cAAc;cAAAC,QAAA,EAC3BQ,YAAY,CAACa;YAAW;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CACP;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA,GA/BDI,YAAY,CAAClC,IAAI,CAACkB,EAAE;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgCtB,CACN;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNrC,OAAA;MAAKgC,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvB7B,MAAM,gBACLJ,OAAA,CAACF,IAAI;QACHyD,SAAS,GAAApD,mBAAA,GAAEO,aAAa,CAAC8C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClD,IAAI,CAACkB,EAAE,KAAKiB,QAAQ,CAACtC,MAAM,CAAC,CAAC,cAAAD,mBAAA,uBAAvDA,mBAAA,CAAyDI;MAAK;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC,gBAEFrC,OAAA;QAAKgC,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BjC,OAAA;UAAAiC,QAAA,EAAG;QAAuC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9CrC,OAAA;UAAAiC,QAAA,EAAG;QAA8C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnC,EAAA,CA3JID,QAAQ;EAAA,QACOT,SAAS,EACXC,WAAW,EACXC,WAAW,EACXC,OAAO,EACMC,SAAS;AAAA;AAAA8D,EAAA,GALnCzD,QAAQ;AA6Jd,eAAeA,QAAQ;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}