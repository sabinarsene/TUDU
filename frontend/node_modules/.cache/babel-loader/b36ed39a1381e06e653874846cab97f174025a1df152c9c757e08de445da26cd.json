{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useSteps } from './use-steps.js';\nimport { StepsProvider } from './use-steps-context.js';\nconst StepsRoot = forwardRef((props, ref) => {\n  const [useStepsProps, localProps] = createSplitProps()(props, [\"defaultStep\", \"id\", \"ids\", \"count\", \"linear\", \"onStepChange\", \"onStepComplete\", \"orientation\", \"step\"]);\n  const steps = useSteps(useStepsProps);\n  const mergedProps = mergeProps(steps.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(StepsProvider, {\n    value: steps,\n    children: /* @__PURE__ */jsx(ark.div, {\n      ...mergedProps,\n      ref\n    })\n  });\n});\nStepsRoot.displayName = \"StepsRoot\";\nexport { StepsRoot };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}