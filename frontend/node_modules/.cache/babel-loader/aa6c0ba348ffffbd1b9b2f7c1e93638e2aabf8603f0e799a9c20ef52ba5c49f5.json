{"ast":null,"code":"/**\r\n * returns active element from document or from nested shadowdoms\r\n */\nimport { safeProbe } from './safe';\n/**\r\n * returns current active element. If the active element is a \"container\" itself(shadowRoot or iframe) returns active element inside it\r\n * @param [inDocument]\r\n */\nexport var getActiveElement = function (inDocument) {\n  if (inDocument === void 0) {\n    inDocument = document;\n  }\n  if (!inDocument || !inDocument.activeElement) {\n    return undefined;\n  }\n  var activeElement = inDocument.activeElement;\n  return activeElement.shadowRoot ? getActiveElement(activeElement.shadowRoot) : activeElement instanceof HTMLIFrameElement && safeProbe(function () {\n    return activeElement.contentWindow.document;\n  }) ? getActiveElement(activeElement.contentWindow.document) : activeElement;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}