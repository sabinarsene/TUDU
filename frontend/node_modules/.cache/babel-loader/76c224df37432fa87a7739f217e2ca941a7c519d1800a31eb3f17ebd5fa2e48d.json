{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Checkbox, useCheckboxContext } from '@ark-ui/react/checkbox';\nimport { forwardRef } from 'react';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nimport { chakra } from '../../styled-system/factory.js';\nimport { Checkmark } from '../checkmark/checkmark.js';\nconst {\n  withProvider,\n  withContext,\n  useStyles: useCheckboxCardStyles,\n  PropsProvider\n} = createSlotRecipeContext({\n  key: \"checkboxCard\"\n});\nconst CheckboxCardRootProvider = withProvider(Checkbox.RootProvider, \"root\", {\n  forwardAsChild: true\n});\nconst CheckboxCardRoot = withProvider(Checkbox.Root, \"root\", {\n  forwardAsChild: true\n});\nconst CheckboxCardRootPropsProvider = PropsProvider;\nconst CheckboxCardLabel = withContext(Checkbox.Label, \"label\", {\n  forwardAsChild: true\n});\nconst CheckboxCardDescription = forwardRef(function CheckboxCardDescription2(props, ref) {\n  const styles = useCheckboxCardStyles();\n  const api = useCheckboxContext();\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    ...props,\n    css: [styles.description, props.css],\n    \"data-disabled\": api.disabled ? \"\" : void 0,\n    \"data-state\": api.checked ? \"checked\" : \"unchecked\"\n  });\n});\nconst CheckboxCardControl = withContext(Checkbox.Control, \"control\", {\n  forwardAsChild: true\n});\nconst CheckboxCardContent = withContext(\"div\", \"content\");\nconst CheckboxCardIndicator = forwardRef(function CheckboxCardIndicator2(props, ref) {\n  const api = useCheckboxContext();\n  const styles = useCheckboxCardStyles();\n  return /* @__PURE__ */jsx(Checkmark, {\n    ref,\n    checked: api.checked,\n    indeterminate: api.indeterminate,\n    disabled: api.disabled,\n    unstyled: true,\n    ...props,\n    css: [styles.indicator, props.css]\n  });\n});\nconst CheckboxCardAddon = withContext(\"div\", \"addon\");\nconst CheckboxCardContext = Checkbox.Context;\nconst CheckboxCardHiddenInput = Checkbox.HiddenInput;\nexport { CheckboxCardAddon, CheckboxCardContent, CheckboxCardContext, CheckboxCardControl, CheckboxCardDescription, CheckboxCardHiddenInput, CheckboxCardIndicator, CheckboxCardLabel, CheckboxCardRoot, CheckboxCardRootPropsProvider, CheckboxCardRootProvider, useCheckboxCardStyles };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}