{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sabin.arsene\\\\Desktop\\\\Tudu-app\\\\TUDU\\\\frontend\\\\src\\\\components\\\\RatingStars.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Star } from 'lucide-react';\nimport './RatingStars.css';\n\n/**\r\n * RatingStars component for displaying and selecting star ratings\r\n * @param {Object} props - Component props\r\n * @param {number} props.initialRating - Initial rating value (1-5)\r\n * @param {Function} props.onRatingChange - Callback when rating changes\r\n * @param {boolean} props.readOnly - Whether the rating is read-only\r\n * @param {string} props.size - Size of stars ('small', 'medium', 'large')\r\n * @returns {JSX.Element} RatingStars component\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RatingStars = ({\n  initialRating = 0,\n  onRatingChange,\n  readOnly = false,\n  size = 'medium'\n}) => {\n  _s();\n  const [rating, setRating] = useState(initialRating);\n  const [hoverRating, setHoverRating] = useState(0);\n  const handleStarClick = selectedRating => {\n    if (readOnly) return;\n    setRating(selectedRating);\n    if (onRatingChange) {\n      onRatingChange(selectedRating);\n    }\n  };\n  const handleStarHover = hoveredRating => {\n    if (readOnly) return;\n    setHoverRating(hoveredRating);\n  };\n  const handleMouseLeave = () => {\n    if (readOnly) return;\n    setHoverRating(0);\n  };\n\n  // Determine star size based on prop\n  const getStarSize = () => {\n    switch (size) {\n      case 'small':\n        return 16;\n      case 'large':\n        return 24;\n      default:\n        return 20;\n      // medium\n    }\n  };\n  const starSize = getStarSize();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `rating-stars ${readOnly ? 'read-only' : 'interactive'} size-${size}`,\n    onMouseLeave: handleMouseLeave,\n    children: [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(Star, {\n      size: starSize,\n      fill: (hoverRating || rating) >= star ? '#FFD700' : 'none',\n      stroke: (hoverRating || rating) >= star ? '#FFD700' : '#CBD5E0',\n      strokeWidth: 1.5,\n      className: `star ${(hoverRating || rating) >= star ? 'filled' : 'empty'}`,\n      onClick: () => handleStarClick(star),\n      onMouseEnter: () => handleStarHover(star),\n      style: {\n        cursor: readOnly ? 'default' : 'pointer'\n      }\n    }, star, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(RatingStars, \"DuuXbtfP73jE8+Ir62NaNxt8Cb8=\");\n_c = RatingStars;\nexport default RatingStars;\nvar _c;\n$RefreshReg$(_c, \"RatingStars\");","map":{"version":3,"names":["React","useState","Star","jsxDEV","_jsxDEV","RatingStars","initialRating","onRatingChange","readOnly","size","_s","rating","setRating","hoverRating","setHoverRating","handleStarClick","selectedRating","handleStarHover","hoveredRating","handleMouseLeave","getStarSize","starSize","className","onMouseLeave","children","map","star","fill","stroke","strokeWidth","onClick","onMouseEnter","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sabin.arsene/Desktop/Tudu-app/TUDU/frontend/src/components/RatingStars.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Star } from 'lucide-react';\r\nimport './RatingStars.css';\r\n\r\n/**\r\n * RatingStars component for displaying and selecting star ratings\r\n * @param {Object} props - Component props\r\n * @param {number} props.initialRating - Initial rating value (1-5)\r\n * @param {Function} props.onRatingChange - Callback when rating changes\r\n * @param {boolean} props.readOnly - Whether the rating is read-only\r\n * @param {string} props.size - Size of stars ('small', 'medium', 'large')\r\n * @returns {JSX.Element} RatingStars component\r\n */\r\nconst RatingStars = ({ initialRating = 0, onRatingChange, readOnly = false, size = 'medium' }) => {\r\n  const [rating, setRating] = useState(initialRating);\r\n  const [hoverRating, setHoverRating] = useState(0);\r\n\r\n  const handleStarClick = (selectedRating) => {\r\n    if (readOnly) return;\r\n    \r\n    setRating(selectedRating);\r\n    if (onRatingChange) {\r\n      onRatingChange(selectedRating);\r\n    }\r\n  };\r\n\r\n  const handleStarHover = (hoveredRating) => {\r\n    if (readOnly) return;\r\n    setHoverRating(hoveredRating);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (readOnly) return;\r\n    setHoverRating(0);\r\n  };\r\n\r\n  // Determine star size based on prop\r\n  const getStarSize = () => {\r\n    switch (size) {\r\n      case 'small': return 16;\r\n      case 'large': return 24;\r\n      default: return 20; // medium\r\n    }\r\n  };\r\n\r\n  const starSize = getStarSize();\r\n\r\n  return (\r\n    <div \r\n      className={`rating-stars ${readOnly ? 'read-only' : 'interactive'} size-${size}`}\r\n      onMouseLeave={handleMouseLeave}\r\n    >\r\n      {[1, 2, 3, 4, 5].map((star) => (\r\n        <Star\r\n          key={star}\r\n          size={starSize}\r\n          fill={(hoverRating || rating) >= star ? '#FFD700' : 'none'}\r\n          stroke={(hoverRating || rating) >= star ? '#FFD700' : '#CBD5E0'}\r\n          strokeWidth={1.5}\r\n          className={`star ${(hoverRating || rating) >= star ? 'filled' : 'empty'}`}\r\n          onClick={() => handleStarClick(star)}\r\n          onMouseEnter={() => handleStarHover(star)}\r\n          style={{ cursor: readOnly ? 'default' : 'pointer' }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RatingStars; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,cAAc;AACnC,OAAO,mBAAmB;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,SAAAC,MAAA,IAAAC,OAAA;AASA,MAAMC,WAAW,GAAGA,CAAC;EAAEC,aAAa,GAAG,CAAC;EAAEC,cAAc;EAAEC,QAAQ,GAAG,KAAK;EAAEC,IAAI,GAAG;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChG,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAACK,aAAa,CAAC;EACnD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMc,eAAe,GAAIC,cAAc,IAAK;IAC1C,IAAIR,QAAQ,EAAE;IAEdI,SAAS,CAACI,cAAc,CAAC;IACzB,IAAIT,cAAc,EAAE;MAClBA,cAAc,CAACS,cAAc,CAAC;IAChC;EACF,CAAC;EAED,MAAMC,eAAe,GAAIC,aAAa,IAAK;IACzC,IAAIV,QAAQ,EAAE;IACdM,cAAc,CAACI,aAAa,CAAC;EAC/B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIX,QAAQ,EAAE;IACdM,cAAc,CAAC,CAAC,CAAC;EACnB,CAAC;;EAED;EACA,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB,QAAQX,IAAI;MACV,KAAK,OAAO;QAAE,OAAO,EAAE;MACvB,KAAK,OAAO;QAAE,OAAO,EAAE;MACvB;QAAS,OAAO,EAAE;MAAE;IACtB;EACF,CAAC;EAED,MAAMY,QAAQ,GAAGD,WAAW,CAAC,CAAC;EAE9B,oBACEhB,OAAA;IACEkB,SAAS,EAAE,gBAAgBd,QAAQ,GAAG,WAAW,GAAG,aAAa,SAASC,IAAI,EAAG;IACjFc,YAAY,EAAEJ,gBAAiB;IAAAK,QAAA,EAE9B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEC,IAAI,iBACxBtB,OAAA,CAACF,IAAI;MAEHO,IAAI,EAAEY,QAAS;MACfM,IAAI,EAAE,CAACd,WAAW,IAAIF,MAAM,KAAKe,IAAI,GAAG,SAAS,GAAG,MAAO;MAC3DE,MAAM,EAAE,CAACf,WAAW,IAAIF,MAAM,KAAKe,IAAI,GAAG,SAAS,GAAG,SAAU;MAChEG,WAAW,EAAE,GAAI;MACjBP,SAAS,EAAE,QAAQ,CAACT,WAAW,IAAIF,MAAM,KAAKe,IAAI,GAAG,QAAQ,GAAG,OAAO,EAAG;MAC1EI,OAAO,EAAEA,CAAA,KAAMf,eAAe,CAACW,IAAI,CAAE;MACrCK,YAAY,EAAEA,CAAA,KAAMd,eAAe,CAACS,IAAI,CAAE;MAC1CM,KAAK,EAAE;QAAEC,MAAM,EAAEzB,QAAQ,GAAG,SAAS,GAAG;MAAU;IAAE,GAR/CkB,IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASV,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAtDIL,WAAW;AAAAiC,EAAA,GAAXjC,WAAW;AAwDjB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}