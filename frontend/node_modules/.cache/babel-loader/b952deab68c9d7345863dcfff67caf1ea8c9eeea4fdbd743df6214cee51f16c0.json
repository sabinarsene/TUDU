{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { splitPresenceProps } from '../presence/split-presence-props.js';\nimport { usePresence } from '../presence/use-presence.js';\nimport { PresenceProvider } from '../presence/use-presence-context.js';\nimport { useColorPicker } from './use-color-picker.js';\nimport { ColorPickerProvider } from './use-color-picker-context.js';\nconst ColorPickerRoot = forwardRef((props, ref) => {\n  const [presenceProps, colorPickerProps] = splitPresenceProps(props);\n  const [useColorPickerProps, localProps] = createSplitProps()(colorPickerProps, [\"closeOnSelect\", \"defaultOpen\", \"defaultValue\", \"disabled\", \"format\", \"id\", \"ids\", \"initialFocusEl\", \"invalid\", \"name\", \"name\", \"onFocusOutside\", \"onFormatChange\", \"onInteractOutside\", \"onOpenChange\", \"onPointerDownOutside\", \"onValueChange\", \"onValueChangeEnd\", \"open\", \"openAutoFocus\", \"positioning\", \"readOnly\", \"required\", \"value\"]);\n  const colorPicker = useColorPicker(useColorPickerProps);\n  const presence = usePresence(mergeProps({\n    present: colorPicker.open\n  }, presenceProps));\n  const mergedProps = mergeProps(colorPicker.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(ColorPickerProvider, {\n    value: colorPicker,\n    children: /* @__PURE__ */jsx(PresenceProvider, {\n      value: presence,\n      children: /* @__PURE__ */jsx(ark.div, {\n        ...mergedProps,\n        ref\n      })\n    })\n  });\n});\nColorPickerRoot.displayName = \"ColorPickerRoot\";\nexport { ColorPickerRoot };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}